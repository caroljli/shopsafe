{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/about/about.component.ts","webpack:///src/app/components/about/about.component.html","webpack:///src/app/components/app.component.ts","webpack:///src/app/components/app.component.html","webpack:///src/app/components/check-in-modal/check-in-modal.component.ts","webpack:///src/app/components/check-in-modal/check-in-modal.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/landing/landing.component.ts","webpack:///src/app/components/landing/landing.component.html","webpack:///src/app/components/page-not-found/page-not-found.component.ts","webpack:///src/app/components/page-not-found/page-not-found.component.html","webpack:///src/app/components/result/result.component.ts","webpack:///src/app/components/result/result.component.html","webpack:///src/app/components/store/store.component.ts","webpack:///src/app/components/store/store.component.html","webpack:///src/app/pipes/round.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","API_URL","apiUrl","ApiService","http","httpOptions","headers","storeId","busy","line","hygiene","mask","params","set","toString","post","pipe","_","console","log","error","message","location","url","get","res","providedIn","routes","path","component","AppRoutingModule","forRoot","imports","AppModule","declarations","providers","bootstrap","entryComponents","AboutComponent","selector","templateUrl","styleUrls","AppComponent","title","CheckInModalComponent","apiService","dialogRef","route","createCheckIn","Number","subscribe","close","checkIn","FooterComponent","LandingComponent","router","navigate","getNearbyStores","PageNotFoundComponent","ResultComponent","isLoaded","snapshot","paramMap","getResult","data","result","stores","countyStats","err","initTemplate","proportion","Math","round","cases","population","StoreComponent","matDialog","getStore","getStoreById","store","dialogConfig","height","width","setId","modalDialog","open","window","history","back","RoundPipe","input","name","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { StoreInterface, ResultInterface, CountyStatsInterface } from '../interfaces/interface';\nimport { Result } from '../classes/result/result';\nimport { Store } from '../classes/store/store';\nimport { CountyStats } from '../classes/county-stats/county-stats';\n\n// Provides HTTP client used to make HTTP requests within the Angular application\n// Returns Observables (can be synchronous), not Promises (always asynchronous)\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst API_URL = environment.apiUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  \n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  }\n\n  constructor(\n    private http: HttpClient\n    ) { }\n\n  /**\n   * Creates new check-in for specific store ID and sends to API as POST request\n   * @param storeId ID of the store that the check-in occurs for\n   * @returns Observable \n   */\n  public createCheckIn(storeId: string, busy: number, line: number, hygiene: number, mask: number): Observable<Object> {\n    let params = new HttpParams();\n    params = params\n              .set('storeId', storeId.toString())\n              .set('busy', busy.toString())\n              .set('line', line.toString())\n              .set('hygiene', hygiene.toString())\n              .set('mask', mask.toString());\n    return this.http\n      .post(API_URL + '/checkin?' + params.toString(),{}, this.httpOptions)\n      .pipe(\n        tap(_ => console.log(\"API: check in from \" + storeId)),\n        catchError(error => throwError(error.message || error))\n      );\n  }\n\n  /**\n   * Gets all nearby stores from backend via GET request\n   * @param location inputted by user\n   * @returns result as observable\n   * TODO: update to custom url in production/demo to save money\n   */\n  public getNearbyStores(location: string): Observable<ResultInterface> {\n    // const url = API_URL + '/stores/${location}';\n    // Uncomment above when location url is fetched\n    const url = API_URL + '/stores';\n    return this.http\n      .get<ResultInterface>(url)\n      .pipe(\n        map((res: any) => res as ResultInterface),\n        tap(_ => console.log(\"API: fetch nearby stores for location \" + location)),\n        catchError(error => throwError(error.message || error))\n      );\n  }\n\n  /**\n   * Gets current store by ID, requires mapping because JSON doesn't match \n   * interface typing\n   * @param id ID of the store to fetch store from\n   * @returns store of given ID as observable\n   * TODO: update to custom url in production/demo to save money\n   */\n  public getStoreById(id: string) : Observable<StoreInterface> {\n    // const url = API_URL + '/store/${id}';\n    const url = API_URL + '/store';\n    return this.http\n      .get<StoreInterface>(url)\n      .pipe(\n        map((res: any) => res as StoreInterface),\n        tap(_ => console.log('API: fetched store id ' + id)),\n        catchError(error => throwError(error.message || error))\n      )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LandingComponent } from './components/landing/landing.component';\nimport { ResultComponent } from './components/result/result.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { StoreComponent } from './components/store/store.component';\nimport { AboutComponent } from './components/about/about.component';\n\nconst routes: Routes = [\n  { \n    path: '', \n    component: LandingComponent \n  },\n  {\n    path: 'result/:location', \n    component: ResultComponent, \n  },\n  { \n    path: 'store/:id', \n    component: StoreComponent,\n  },\n  { \n    path: 'about', \n    component: AboutComponent \n  },\n  { \n    path: \"**\", \n    component: PageNotFoundComponent \n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n// Custom components\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule }   from '@angular/forms';\n\nimport { AppComponent } from './components/app.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { ResultComponent } from './components/result/result.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { StoreComponent } from './components/store/store.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { CheckInModalComponent } from './components/check-in-modal/check-in-modal.component';\n\n// Material Angular components\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n// Services\nimport { ApiService } from './api/api.service';\n\n// Pipes\nimport { RoundPipe } from './pipes/round.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingComponent,\n    ResultComponent,\n    PageNotFoundComponent,\n    StoreComponent,\n    AboutComponent,\n    FooterComponent,\n    CheckInModalComponent,\n    RoundPipe,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatSliderModule,\n    MatIconModule,\n    MatTooltipModule,\n    HttpClientModule,\n    FormsModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent],\n  // Set of components to compile when NgModule is defined to be\n  // dynamically loaded into view\n  entryComponents: [CheckInModalComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"about\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>ABOUT</h1>\n            <p>Learn more about this tool, its developers, and its usages.</p>\n        </div>\n        <div class=\"section\">\n            <h2>Philosophy</h2>\n            <div class=\"box\">\n                <p>\n                    ShopSafe is a tool designed to help ease the decision fatigue that comes with \n                    deciding what is the safest place to go shopping during COVID-19. The purpose \n                    of this tool is to provide a crowdsourced method of evaluating the safety of \n                    a grocery store to give users a more informed shopping experience.\n   \n                </p>\n            </div>\n        </div>\n        <div class=\"section\">\n            <h2>Usage</h2>\n            <div class=\"box\">\n                <p>\n                    This tool is meant to be used in concurrence with good judgement and awareness \n                    of local regulations. The ShopSafe Score is calculated using the check-in and \n                    county statistics based on user input and the New York Times COVID-19 dataset. \n                    This is not a deterministic metric but rather a decision-making tool.\n                </p>\n            </div>\n        </div>\n        <div class=\"section\">\n            <h2>Creators</h2>\n            <div class=\"box\">\n                <p>\n                    This application is created by <a href=\"mailto:gabrielstewart@google.com\">Gabriel Stewart</a>, \n                    <a href=\"mailto:raulpalomo@google.com\">Raul Palomo</a>, and <a href=\"mailto:caroljli@google.com\">Carol Li</a> \n                    under their 2020 Google Internship. \n                </p>\n            </div>\n        </div>\n        \n    </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'shopsafe-frontend';\n}\n","<router-outlet></router-outlet>\n<app-footer></app-footer>","import { Component, OnInit, Input, Injectable } from '@angular/core';\nimport { ApiService } from '../../api/api.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-check-in-modal',\n  templateUrl: './check-in-modal.component.html',\n  styleUrls: ['./check-in-modal.component.css']\n})\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n\nexport class CheckInModalComponent implements OnInit {\n\n  constructor(\n    private apiService: ApiService,\n    private dialogRef: MatDialogRef<CheckInModalComponent>,\n    private route: ActivatedRoute,\n    \n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  static storeId: string;\n  busy = '';\n  line = '';\n  hygiene = '';\n  mask = '';\n\n  public static setId(id: string) {\n    this.storeId = id;\n    console.log(\"CLIENT: store id is \" + this.storeId);\n  }\n\n  /**\n   * Sends check-in user data to API\n   * @param id ID of store that check-in is for\n   * @param busy user input busy score\n   * @param line user input line score\n   * @param hygiene user input hygiene score\n   * @param mask user input mask score\n   */\n  checkIn(): void {\n    console.log(\"CLIENT: check-in api call\");\n    this.apiService.createCheckIn(CheckInModalComponent.storeId, Number(this.busy), Number(this.line), Number(this.hygiene), Number(this.mask))\n      .subscribe();\n    this.dialogRef.close();\n  }\n\n}\n","<div id=\"check-in-modal\">\n    <h2 class=\"title-text\">Check-In Form</h2>\n    <p>Use the sliders to input the statuses of the store to check in. High values indicates a good status, and low values indicate a bad status.</p>\n    <div class=\"modal-content\">\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Busy &nbsp; \n                <a \n                matTooltip=\"How crowded is it inside the store? Essentially, is there \n                            enough space to social distance, maintain 6 feet? 1 indicates \n                            very busy (bad), and 10 indicates not busy at all (good)\">\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n            <mat-slider\n                [(ngModel)]=\"busy\"\n                min=\"1\" \n                max=\"10\" \n                step=\"1\" \n                class=\"right-text\"\n                thumbLabel tickInterval=\"1\"\n            ></mat-slider>\n        </div>\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Line &nbsp; \n                <a \n                matTooltip=\"How long is the line to get into the store from the outside?\n                            1 indicates very long (bad), and 10 indicates not long at all (good)\">\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n            <mat-slider\n                [(ngModel)]=\"line\"\n                min=\"1\" \n                max=\"10\" \n                step=\"1\" \n                class=\"right-text\"\n                thumbLabel tickInterval=\"1\"\n            ></mat-slider>\n        </div>\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Hygiene &nbsp; \n                <a \n                matTooltip=\"How clean is the store overall? Are the shared carts, \n                            baskets, and surfaces sanitized? 1 indicates poor hygiene \n                            (bad), and 10 indicates good hygiene (good)\"\n                >\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n            <mat-slider \n                [(ngModel)]=\"hygiene\"\n                min=\"1\" \n                max=\"10\" \n                step=\"1\" \n                class=\"right-text\"\n                thumbLabel tickInterval=\"1\"\n            ></mat-slider>\n        </div>\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Mask &nbsp; \n                <a \n                matTooltip=\"How strict is the store with masks? Are the customers and workers \n                            wearing masks properly? 1 indicates no to little mask policy \n                            and presence (bad), and 10 indicates excellent mask usage (good)\">\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n            <mat-slider\n                [(ngModel)]=\"mask\"\n                min=\"1\" \n                max=\"10\" \n                step=\"1\" \n                class=\"right-text\"\n                thumbLabel tickInterval=\"1\"\n            ></mat-slider>\n        </div>\n    </div>\n    <button id='submit-check-in-button' (click) = \"checkIn()\">CHECK IN AT THIS STORE</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer id=\"footer\">\n    <div class=\"bottom-nav\">\n        <ul>\n            <li><a [routerLink]=\"['/']\">Home</a></li>\n            <li><a [routerLink]=\"['/about']\">About</a></li>\n        </ul>\n        <li class=\"copyright\">\n            Made with 😷 by Raul Palomo, Gabriel Stewart, Carol Li\n        </li>\n    </div>\n\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../api/api.service';\nimport { Router } from \"@angular/router\"\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n\n  location = '';\n\n  constructor(\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  getNearbyStores(): void {\n    this.router.navigate(['/result', this.location]);\n    console.log(\"CLIENT: redirecting to results\");\n  }\n\n}\n","<div id=\"landing\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>ShopSafe</h1>\n            <p>Information tool for safe, simple shopping during COVID-19.</p>\n            <br/>\n            <a href=\"/about\">Learn more about this tool &nbsp; <i class=\"fas fa-long-arrow-alt-right\"></i></a>\n        </div>\n        <form>\n            <div class=\"input-container\">\n                <mat-icon class=\"search-icon\">search</mat-icon>\n                <input\n                    class=\"input-field\"\n                    type=\"text\"\n                    placeholder=\"ENTER YOUR LOCATION TO FIND NEARBY GROCERY STORES\"\n                    name=\"search\"\n                    [(ngModel)]=\"location\"\n                    (keyup.enter) = \"getNearbyStores()\"\n                >\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"page-not-found\" class=\"segment\">\n    <div class=\"segment-text\">\n        <h1>404 Page Not Found</h1>\n        <p>Sorry you couldn't find what you were looking for! Click <a href=\"/\">here</a> to return to the landing page.</p>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../api/api.service';\nimport { Result } from '../../classes/result/result';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.css']\n})\n\nexport class ResultComponent implements OnInit {\n  result: Result;\n  location: string;\n  proportion: number;\n  isLoaded: boolean;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    // Defaults to API not called yet\n    this.isLoaded = false;\n    this.location = this.route.snapshot.paramMap.get('location').toString();\n    this.getResult();\n  }\n\n  getResult(): void {\n    console.log('CLIENT: results api call at ' + this.location);\n    this.apiService.getNearbyStores(this.location)\n      .subscribe(data => \n        this.result = {\n          stores: (data as any).stores,\n          countyStats: (data as any).countyStats\n        },\n        err => {\n          console.log(err) // TODO: add page rendering error\n        },\n        // To run getProportion function after API call\n        () => {\n          this.initTemplate()\n        }\n      );\n  }\n\n  initTemplate(): void {\n    // Sets loaded state to true\n    this.isLoaded = true;\n    console.log(\"CLIENT: API call finished\");\n    // Round proportion to 2 decimal places\n    this.proportion = Math.round((this.result.countyStats[0].cases / this.result.countyStats[0].population) * 100) / 100;\n    console.log(\"CLIENT: calculated proportion as \" + this.proportion);\n  }\n}","<div *ngIf=\"isLoaded\" id=\"result\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>{{ location }}</h1>\n            <p>Showing all grocery stores for your location.</p>\n        </div>\n        <div class=\"chart\">\n            <!-- TODO: integrate charts api -->\n        </div>\n        <div class=\"stat-bar-wrapper\">\n            <h2>Statistics for {{ result.countyStats[0].countyName }} County</h2>\n            <div class=\"stat-bar\">\n                <div class=\"stat-elem\">\n                    <a class=\"stat-obj\">TOTAL CASES</a>\n                    <p>{{ result.countyStats[0].cases }}</p>\n                </div>\n                <div class=\"stat-elem\" style=\"text-align: center;\">\n                    <a class=\"stat-obj\">TOTAL DEATHS</a>\n                    <p>{{ result.countyStats[0].deaths }}</p>\n                </div>\n                <div class=\"stat-elem\" style=\"text-align: right; margin-top: -5px\">\n                    <a class=\"stat-obj\">PROPORTION</a>\n                    <p class=\"shopsafe-score\">{{ proportion }}</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"stores-list-heading\">\n            <h2 class=\"left-text\">Local Grocery Stores</h2>\n            <p class=\"right-text subtext\">Click on a store to view store statistics</p>\n        </div>\n        <div class=\"stores-list\" *ngFor=\"let store of result.stores\">\n            <div class=\"stores-list-item\">\n                <div class=\"left-text markers\">\n                    <a class=\"location-icon\"><i class=\"fas fa-map-marker-alt\"></i></a> &nbsp;\n                    <a \n                        class=\"stores-list-location\" \n                        [routerLink]=\"['/store', store.id]\"\n                    >\n                        {{ store.name }}\n                    </a>\n                    <a class=\"rating\">{{ store.score | round }}/10</a>\n                </div>\n                <div class=\"right-text\">\n                    <p class=\"address\">{{ store.address }}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"!isLoaded\" class=\"loading-screen\" color=\"grey\">\n  <mat-spinner></mat-spinner>\n  <br/>\n  <p>Fetching Results...</p>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { CheckInModalComponent } from '../check-in-modal/check-in-modal.component';\nimport { ApiService } from '../../api/api.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store } from 'src/app/classes/store/store';\n\n@Component({\n  selector: 'app-store', \n  templateUrl: './store.component.html',\n  styleUrls: ['./store.component.css']\n})\nexport class StoreComponent implements OnInit {\n  @Input() store: Store;\n  latLng: string;\n  isLoaded: boolean;\n  storeId: string;\n\n  constructor(\n    public matDialog: MatDialog,\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    // private checkInModalComponent: CheckInModalComponent,\n    ) { }\n\n  /**\n   * Runs when component is loaded\n   */\n  ngOnInit(): void {\n    // Defaults to API not called yet\n    this.isLoaded = false;\n    this.getStore();\n  }\n\n  getStore(): void {\n    const id = this.route.snapshot.paramMap.get('id').toString();\n    this.storeId = id;\n    this.apiService.getStoreById(id)\n      .subscribe(\n        (res: Store) => {\n          this.store = res\n        },\n        err => {\n          console.log(err);\n        },\n        () => {\n          this.initTemplate();\n        }\n      );\n  }\n\n  initTemplate(): void {\n    // Sets loaded state to true\n    this.isLoaded = true;\n    console.log(\"CLIENT: API call finished\");\n  }\n  \n  /**\n   * Opens check in modal dialog using check in modal component\n   * @returns opens new check in modal on screen\n   */\n  openModal() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.id = \"check-in-modal\";\n    dialogConfig.height = \"510px\";\n    dialogConfig.width = \"460px\";\n    CheckInModalComponent.setId(this.storeId);\n    const modalDialog = this.matDialog.open(CheckInModalComponent, dialogConfig);\n  }\n\n  redirectToMap() {\n    const url = 'https://www.google.com/maps/place/?q=place_id:' + this.storeId;\n    window.open(url, \"_blank\");\n  }\n\n  goBack() {\n    window.history.back();\n  }\n\n}\n","<div *ngIf=\"isLoaded\" id=\"store\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <a class=\"back-link\" (click)=\"goBack()\"><i class=\"fas fa-long-arrow-alt-left\"></i> &nbsp; Back to Results</a>\n            <br/>\n            <h1>{{ store.name }}</h1>\n            <p>\n                {{ store.address }} &nbsp; &nbsp; \n                <a class=\"maps-button\" (click)=\"redirectToMap()\">VIEW ON MAPS</a>\n            </p>\n        </div>\n        <div class=\"stat-bar-wrapper\">\n            <div class=\"stat-bar\">\n                <div class=\"stat-elem\">\n                    <a class=\"stat-obj\">CHECKED IN</a>\n                    <p>{{ store.checkInCount }}</p>\n                </div>\n                <div class=\"stat-elem\" style=\"text-align: center;\">\n                    <a class=\"stat-obj\">STATUS</a>\n                    <p [ngStyle]=\"{'color': (store.open) ? '#7AC665' : '#FF5151'}\"><b>{{ store.open ? 'OPEN' : 'CLOSED' }}</b></p>\n                </div>\n                <div class=\"stat-elem\" style=\"text-align: right; margin-top: -5px\">\n                    <a class=\"stat-obj\">SHOPSAFE SCORE</a>\n                    <p class=\"shopsafe-score\">{{ store.score | round }}/10</p>\n                </div>\n            </div>\n        </div>\n        <button id='check-in-button' (click)=\"openModal()\">CHECK IN AT THIS STORE</button>\n        <div class=\"chart\">\n            <!-- TODO: integrate charts api -->\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"!isLoaded\" class=\"loading-screen\" color=\"grey\">\n  <mat-spinner></mat-spinner>\n  <br/>\n  <p>Loading Store...</p>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'round'})\nexport class RoundPipe implements PipeTransform {\n  transform(input: number) {\n    return Math.round(input * 100) / 100;\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n  // URL of development API\n  apiUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}