{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/about/about.component.ts","webpack:///src/app/components/about/about.component.html","webpack:///src/app/components/app.component.ts","webpack:///src/app/components/app.component.html","webpack:///src/app/components/check-in-modal/check-in-modal.component.ts","webpack:///src/app/components/check-in-modal/check-in-modal.component.html","webpack:///src/app/components/feedback-forms/feedback-forms.component.ts","webpack:///src/app/components/feedback-forms/feedback-forms.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/http-error/http-error.component.ts","webpack:///src/app/components/http-error/http-error.component.html","webpack:///src/app/components/landing/landing.component.ts","webpack:///src/app/components/landing/landing.component.html","webpack:///src/app/components/mobile-redirect/mobile-redirect.component.ts","webpack:///src/app/components/mobile-redirect/mobile-redirect.component.html","webpack:///src/app/components/page-not-found/page-not-found.component.ts","webpack:///src/app/components/page-not-found/page-not-found.component.html","webpack:///src/app/components/result/result.component.ts","webpack:///src/app/components/result/result.component.html","webpack:///src/app/components/search-bar/search-bar.component.ts","webpack:///src/app/components/search-bar/search-bar.component.html","webpack:///src/app/components/store/store.component.ts","webpack:///src/app/components/store/store.component.html","webpack:///src/app/google-chart/covid-chart/covid-chart.component.ts","webpack:///src/app/google-chart/google-chart.module.ts","webpack:///src/app/google-chart/line-chart/line-chart.component.ts","webpack:///src/app/google-chart/service/google-chart.service.ts","webpack:///src/app/google-chart/service/service.module.ts","webpack:///src/app/pipes/round.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","API_URL","apiUrl","ApiService","http","httpOptions","headers","storeId","busy","line","hygiene","mask","params","set","toString","post","pipe","_","console","log","error","message","location","latlng","url","get","res","status","statusText","providedIn","routes","path","component","AppRoutingModule","forRoot","useHash","imports","AppModule","declarations","providers","bootstrap","entryComponents","AboutComponent","selector","templateUrl","styleUrls","AppComponent","router","title","event","test","navigator","userAgent","navigate","production","protocol","window","href","replace","CheckInModalComponent","apiService","dialogRef","route","socDisSlider","waitTimeSlider","cleanSlider","maskSlider","socDis","waitTime","clean","msk","failedCheckIn","store","checkInCount","masks","createCheckIn","subscribe","close","setTimeout","FeedbackFormsComponent","FooterComponent","mobileCheck","HttpErrorComponent","LandingComponent","zone","loadingUserLatLng","failedGeoLoc","place","run","getNearbyStores","geolocation","getCurrentPosition","position","stringLocation","coords","latitude","longitude","positionError","alert","MobileRedirectComponent","PageNotFoundComponent","ResultComponent","infoWindowOptions","markers","styles","featureType","elementType","stylers","visibility","options","disableDefaultUI","sortingMethods","isLoaded","httpError","snapshot","paramMap","JSON","parse","getResult","method","data","result","stores","latLng","err","httpErrorMessage","sortResults","initTemplate","addMarkers","center","lat","lng","zoomMap","safeIcon","cautionIcon","unsafeIcon","currIcon","userIcon","push","icon","score","name","info","maxDistance","Math","max","apply","map","distance","zoom","round","LN2","mapElement","document","getElementById","scrollIntoView","behavior","sort","n1","n2","rating","markerPosition","storeScore","content","infoWindow","open","SearchBarComponent","setAddress","google","maps","places","queryWait","getPlace","autocomplete","Autocomplete","address","nativeElement","componentRestrictions","country","types","addListener","invokeEvent","emit","StoreComponent","matDialog","innerWidth","isSmall","target","getStore","getStoreById","countyStats","covidData","maskData","busyData","lineData","hygieneData","proportion","cases","population","dialogConfig","height","width","setParam","modalDialog","afterClosed","history","back","CovidChartComponent","gChartService","gLib","getGoogle","charts","load","callback","drawChart","bind","visualization","DataTable","addColumn","i","addRow","Date","date","value","focusTarget","hAxis","textPosition","pointSize","chart","LineChart","draw","GoogleChartModule","LineChartComponent","vAxis","ticks","GoogleChartService","ServiceModule","RoundPipe","input","environment","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { StoreInterface, ResultInterface, StoreResultInterface } from '../interfaces/interface';\nimport { Result } from '../classes/result/result';\nimport { Store } from '../classes/store/store';\nimport { CountyStats } from '../classes/county-stats/county-stats';\n\n// Provides HTTP client used to make HTTP requests within the Angular application\n// Returns Observables (can be synchronous), not Promises (always asynchronous)\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst API_URL = environment.apiUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  \n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  }\n\n  constructor(\n    private http: HttpClient\n    ) { }\n\n  /**\n   * Creates new check-in for specific store ID and sends to API as POST request\n   * @param storeId ID of the store that the check-in occurs for\n   * @returns Observable \n   */\n  public createCheckIn(storeId: string, busy: number, line: number, hygiene: number, mask: number): Observable<Object> {\n    let params = new HttpParams();\n    params = params\n              .set('storeId', storeId.toString())\n              .set('busy', busy.toString())\n              .set('line', line.toString())\n              .set('hygiene', hygiene.toString())\n              .set('mask', mask.toString());\n    return this.http\n      .post(API_URL + '/checkin?' + params.toString(), {}, this.httpOptions)\n      .pipe(\n        tap(_ => console.log(\"API: check in from \" + storeId)),\n        catchError(error => throwError(error.message || error))\n      );\n  }\n\n  /**\n   * Gets all nearby stores from backend via GET request\n   * @param location inputted by user\n   * @returns result as observable\n   */\n  public getNearbyStores(location: string, latlng: boolean): Observable<ResultInterface> {\n    const url = API_URL + '/stores?location=' + location + '&latlng=' + latlng.toString();\n    return this.http\n      .get<ResultInterface>(url)\n      .pipe(\n        map((res: any) => res as ResultInterface),\n        tap(_ => console.log(\"API: fetch nearby stores for location \" + location)),\n        catchError(error => throwError((error.status + \" \" + error.statusText) || error))\n      );\n  }\n\n  /**\n   * Gets current store by ID, requires mapping because JSON doesn't match \n   * interface typing\n   * @param id ID of the store to fetch store from\n   * @returns store of given ID as observable\n   */\n  public getStoreById(id: string) : Observable<StoreResultInterface> {\n    const url = API_URL + '/store?id=' + id;\n    // const url = API_URL + '/store';\n    return this.http\n      .get<StoreResultInterface>(url)\n      .pipe(\n        map((res: any) => res as StoreResultInterface),\n        tap(_ => console.log('API: fetched store id ' + id)),\n        catchError(error => throwError((error.status + \" \" + error.statusText) || error))\n      )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LandingComponent } from './components/landing/landing.component';\nimport { ResultComponent } from './components/result/result.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { StoreComponent } from './components/store/store.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { FeedbackFormsComponent } from './components/feedback-forms/feedback-forms.component';\nimport { MobileRedirectComponent } from './components/mobile-redirect/mobile-redirect.component';\n\nconst routes: Routes = [\n  { \n    path: '', \n    component: LandingComponent \n  },\n  {\n    path: 'result/:location/:latlng', \n    component: ResultComponent, \n  },\n  { \n    path: 'store/:id', \n    component: StoreComponent,\n  },\n  { \n    path: 'about', \n    component: AboutComponent \n  },\n  {\n    path: \"feedback\",\n    component: FeedbackFormsComponent \n  },\n  {\n    path: \"mobile\",\n    component: MobileRedirectComponent\n  },\n  { \n    path: \"**\", \n    component: PageNotFoundComponent \n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n// Custom components\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GoogleMapsModule } from '@angular/google-maps'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule }   from '@angular/forms';\nimport { GoogleChartModule } from './google-chart/google-chart.module';\nimport { AppComponent } from './components/app.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { ResultComponent } from './components/result/result.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { StoreComponent } from './components/store/store.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { CheckInModalComponent } from './components/check-in-modal/check-in-modal.component';\nimport { FeedbackFormsComponent } from './components/feedback-forms/feedback-forms.component';\nimport { MobileRedirectComponent } from './components/mobile-redirect/mobile-redirect.component';\n\n// Material Angular components\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\n\n// Services\nimport { ApiService } from './api/api.service';\n\n// Pipes\nimport { RoundPipe } from './pipes/round.pipe';\nimport { HttpErrorComponent } from './components/http-error/http-error.component';\nimport { SearchBarComponent } from './components/search-bar/search-bar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingComponent,\n    ResultComponent,\n    PageNotFoundComponent,\n    StoreComponent,\n    AboutComponent,\n    FooterComponent,\n    CheckInModalComponent,\n    RoundPipe,\n    HttpErrorComponent,\n    SearchBarComponent,\n    FeedbackFormsComponent,\n    MobileRedirectComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatSliderModule,\n    MatIconModule,\n    MatTooltipModule,\n    HttpClientModule,\n    FormsModule,\n    MatProgressSpinnerModule,\n    GoogleChartModule,\n    GoogleMapsModule,\n    MatSelectModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent],\n  // Set of components to compile when NgModule is defined to be\n  // dynamically loaded into view\n  entryComponents: [CheckInModalComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"about\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>ABOUT</h1>\n            <p>Learn more about this tool, its developers, and its usages.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2>Philosophy</h2>\n            <div class=\"box\">\n                <p>\n                    ShopSafe is a tool designed to help ease the decision fatigue that comes with \n                    deciding what is the safest place to go shopping during COVID-19. The purpose \n                    of this tool is to provide a crowdsourced method of evaluating the safety of \n                    a grocery store to give users a more informed shopping experience.\n   \n                </p>\n            </div>\n        </div>\n\n        <div class=\"section\">\n            <h2>Instructions</h2>\n            <div class=\"box\">\n                <p>\n                    To use Shopsafe, enter an address <b>within the United States</b> to find a list of\n                    grocery stores rendered for each specific location. Click on each location to see the\n                    Shopsafe Score, county COVID-19 statistics, and check-in statistics for each location.\n                    Make sure to check in by clicking on the check-in button and submitting your review in \n                    order to help refine the ShopSafe Score.\n                </p>\n            </div>\n        </div>\n\n        <div class=\"section\">\n            <h2>Usage</h2>\n            <div class=\"box\">\n                <p>\n                    This tool is meant to be used in concurrence with good judgement and awareness \n                    of local regulations. The ShopSafe Score is calculated using the check-in and \n                    county statistics based on user input and the New York Times COVID-19 dataset. \n                    That is to say, this is not a deterministic metric, but rather a decision-making tool.\n                </p>\n            </div>\n        </div>\n\n        <div class=\"section\">\n            <h2>Creators</h2>\n            <div class=\"box\">\n                <p>\n                    This application is created by <a href=\"mailto:gabrielstewart@google.com\">Gabriel Stewart</a>, \n                    <a href=\"mailto:raulpalomo@google.com\">Raul Palomo</a>, and <a href=\"mailto:caroljli@google.com\">Carol Li</a> \n                    under their 2020 Google Internship. Inquiries can be sent to them.\n                </p>\n            </div>\n        </div>\n\n        <div class=\"section\">\n            <h2>License and Attributions</h2>\n            <div class=\"box\">\n                <p>\n                    Copyright 2020 Google LLC. Licensed under the Apache License, Version 2.0 (the \"License\"); you \n                    may not use this file except in compliance with the License. You may obtain a copy of the License \n                    at https://www.apache.org/licenses/LICENSE-2.0. This product uses the FCC Data API but is not\n                    endorsed or certified by the FCC.\n                </p>\n            </div>\n        </div>\n        \n    </div>\n</div>\n","import { Component, OnInit, HostListener } from '@angular/core';\nimport { environment } from \"../../environments/environment\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n  ) {}\n  title = 'shopsafe-frontend';\n\n\n  // Check for window size and redirect if mobile\n  @HostListener('window:resize', ['$event'])\n  onResizeDown(event) {\n    if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\n      this.router.navigate(['mobile']);\n    }\n  }\n\n  ngOnInit() {\n    if (environment.production) {\n      if (location.protocol === 'http:') {\n        window.location.href = location.href.replace('http', 'https');\n      }\n    }\n  }\n}\n","<router-outlet></router-outlet>\n<app-footer></app-footer>","import { Component, OnInit, Input, Injectable } from '@angular/core';\nimport { ApiService } from '../../api/api.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store } from 'src/app/classes/store/store';\n\n@Component({\n  selector: 'app-check-in-modal',\n  templateUrl: './check-in-modal.component.html',\n  styleUrls: ['./check-in-modal.component.css']\n})\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n\nexport class CheckInModalComponent implements OnInit {\n\n  constructor(\n    private apiService: ApiService,\n    private dialogRef: MatDialogRef<CheckInModalComponent>,\n    private route: ActivatedRoute,\n    \n  ) { \n    if (CheckInModalComponent.store.checkInCount != 0) {\n      this.socDis = CheckInModalComponent.store.busy;\n      this.waitTime = CheckInModalComponent.store.line;\n      this.clean = CheckInModalComponent.store.hygiene;\n      this.msk = CheckInModalComponent.store.masks;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  static store: Store;\n  \n  // Enables Sliders\n  socDisSlider: boolean = false;\n  waitTimeSlider: boolean = false;\n  cleanSlider: boolean = false;\n  maskSlider: boolean = false; \n  \n  // Average Values\n  socDis: number = 0;\n  waitTime: number = 0;\n  clean: number = 0;\n  msk: number = 0; \n\n  failedCheckIn: boolean = false;\n\n  /**\n   * Sets ID variable of check in modal based on store id.\n   * @param id of the current store\n   */\n  public static setParam(store: Store) {\n    this.store = store;\n    console.log(\"CLIENT: store id is \" + this.store.id);\n  }\n\n  /**\n   * Sends check-in user data to API\n   * @param id ID of store that check-in is for\n   * @param busy user input busy score\n   * @param line user input line score\n   * @param hygiene user input hygiene score\n   * @param mask user input mask score\n   */\n  checkIn(): void {\n    console.log(\"CLIENT: check-in api call\");\n    this.apiService.createCheckIn(CheckInModalComponent.store.id, this.socDis, this.waitTime, this.clean, this.msk)\n      .subscribe();\n    this.dialogRef.close();\n  }\n\n  /**\n   * Indicates to user that they must give each category a rating\n   */\n  fCheckIn(): void {\n      this.failedCheckIn = true;\n      setTimeout( () => { this.failedCheckIn = false}, 4000);\n  }\n\n\n\n}\n","<div id=\"check-in-modal\">\n    <h2 class=\"title-text\">Check-In Form</h2>\n    <p>Use the sliders to input the statuses of the store to check in. High values indicates a good status, and low values indicate a bad status.</p>\n    <div class=\"modal-content\">\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Social Distancing &nbsp; \n                <a \n                matTooltip=\"How crowded is it inside the store? Essentially, is there \n                            enough space to social distance, maintain 6 feet? 0 indicates \n                            very busy (bad), and 10 indicates not busy at all (good)\">\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n            <div class=\"slider\" class=\"right-text grey-text\">\n              <i class=\"far fa-frown\"></i>\n              &nbsp;\n              <mat-slider\n                  [(ngModel)]=\"socDis\"\n                  (click) = \"socDisSlider = true\"\n                  [disabled]=\"!socDisSlider\"\n                  min=\"0\" \n                  max=\"10\" \n                  step=\"1\"\n                  thumbLabel tickInterval=\"1\"\n              ></mat-slider>\n              &nbsp;\n              <i class=\"far fa-smile\"></i>\n            </div>\n        </div>\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Service Speed &nbsp; \n                <a \n                matTooltip=\"Is there a line to get into the store from the outside? Are \n                            there lines inside the store? How long was the wait? 0 indicates \n                            long waits (bad), and 10 indicates minimal waits (good)\">\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n             <div class=\"slider\" class=\"right-text grey-text\">\n              <i class=\"far fa-frown\"></i>\n              &nbsp;\n              <mat-slider\n                  [(ngModel)]=\"waitTime\"\n                  (click)=\"waitTimeSlider=true\"\n                  [disabled]=\"!waitTimeSlider\"\n                  min=\"0\" \n                  max=\"10\" \n                  step=\"1\" \n                  thumbLabel tickInterval=\"1\"\n              ></mat-slider>\n              &nbsp;\n              <i class=\"far fa-smile\"></i>\n            </div>\n        </div>\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Cleanliness &nbsp; \n                <a \n                matTooltip=\"How clean is the store overall? Are the shared carts, \n                            baskets, and surfaces sanitized? 0 indicates poor hygiene \n                            (bad), and 10 indicates good hygiene (good)\"\n                >\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n            <div class=\"slider\" class=\"right-text grey-text\">\n              <i class=\"far fa-frown\"></i>\n              &nbsp;\n              <mat-slider\n                  [(ngModel)]=\"clean\"\n                  (click)=\"cleanSlider = true\"\n                  [disabled]=\"!cleanSlider\"\n                  min=\"0\" \n                  max=\"10\" \n                  step=\"1\"\n                  thumbLabel tickInterval=\"1\"\n              ></mat-slider>\n              &nbsp;\n              <i class=\"far fa-smile\"></i>\n            </div>\n        </div>\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Mask Usage &nbsp; \n                <a \n                matTooltip=\"How strict is the store with masks? Are the customers and workers \n                            wearing masks properly? 0 indicates no to little mask policy \n                            and presence (bad), and 10 indicates excellent mask usage (good)\">\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n             <div class=\"slider\" class=\"right-text grey-text\">\n              <i class=\"far fa-frown\"></i>\n              &nbsp;\n              <mat-slider\n                  [(ngModel)]=\"msk\"\n                  (click)=\"maskSlider = true\"\n                  [disabled]=\"!maskSlider\"\n                  min=\"0\" \n                  max=\"10\" \n                  step=\"1\" \n                  thumbLabel tickInterval=\"1\"\n              ></mat-slider>\n              &nbsp;\n              <i class=\"far fa-smile\"></i>\n            </div>\n        </div>\n    </div>\n    <button *ngIf = \"maskSlider && cleanSlider && waitTimeSlider && socDisSlider\" \n        id='submit-check-in-button'\n        (click) = \"checkIn()\">\n            CHECK IN AT THIS STORE\n    </button>\n    <button *ngIf = \"!maskSlider || !cleanSlider || !waitTimeSlider || !socDisSlider\" \n        id='invalid-check-in'\n        (click) = \"fCheckIn()\">\n        CHECK IN AT THIS STORE\n    </button>\n    <p *ngIf = \"failedCheckIn\" style = \"color: red;\"> Please, place a rating for all categories</p> \n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-feedback-forms',\n  templateUrl: './feedback-forms.component.html',\n  styleUrls: ['./feedback-forms.component.css']\n})\nexport class FeedbackFormsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"title\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>FEEDBACK FORMS</h1>\n            <p>Help us improve ShopSafe by giving us feedback!</p>\n        </div>\n\n        <div class=\"section\">\n            <h2>User Experience Form</h2>\n            <div class=\"box\">\n                <p>\n                   Let us know what your experience with ShopSafe was like by filling out this\n                   <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSeagc76SWGCG8LTBVM_ZrWZAjAoGeH2fjI2fWR15o9Z-x7J-Q/viewform?usp=sf_link\">\n                    form\n                    </a>. \n                </p>\n            </div>\n        </div>\n\n        <div class=\"section\">\n            <h2>Bug Reporting</h2>\n            <div class=\"box\">\n                <p>\n                    We make mistakes, help us fix them by reporting them \n                    <a href=\"https://docs.google.com/forms/d/e/1FAIpQLScJviEPTKH7Z9aITFulbhgrAc5v3GGlW24ttIoHU-2pe7Fz4g/viewform?usp=sf_link\">\n                        here\n                    </a>. \n                </p>\n            </div>\n        </div>\n        \n    </div>\n</div>\n","import { Component, OnInit, HostListener } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  mobileCheck: boolean = false;\n\n  constructor(\n    private router: Router,\n  ) { }\n\n  @HostListener('window:resize', ['$event'])\n  onResizeDown(event) {\n    if ( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\n      this.mobileCheck = true;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer id=\"footer\">\n    <div class=\"bottom-nav\" *ngIf=\"!mobileCheck\">\n        <ul>\n            <li><a [routerLink]=\"['/']\">Home</a></li>\n            <li><a [routerLink]=\"['/about']\">About</a></li>\n            <li><a [routerLink]=\"['/feedback']\"><i class=\"fas fa-bug\"></i> Feedback</a></li>\n        </ul>\n        <li class=\"copyright\">\n            Made with 😷 by Raul Palomo, Gabriel Stewart, Carol Li\n        </li>\n    </div>\n\n</footer>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-http-error',\n  templateUrl: './http-error.component.html',\n  styleUrls: ['./http-error.component.css']\n})\nexport class HttpErrorComponent implements OnInit {\n\n  @Input() httpErrorMessage: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"http-error\" class=\"segment\">\n    <div class=\"segment-text\">\n        <h1>HTTP Error</h1>\n        <p>Uh oh, it seems that there's a problem with calling our server. Click <a [routerLink]=\"['/']\">here</a> to return to the landing page.</p>\n        <div class=\"error-wrapper\">\n          <p>{{ httpErrorMessage }}</p>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../api/api.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n\n  location: string = '';\n  loadingUserLatLng: boolean = false;\n  failedGeoLoc = false;\n  latlng: boolean = false;\n\n  constructor(\n    private router: Router,\n    public zone: NgZone,\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  getNearbyStores(): void {\n    this.router.navigate(['/result', this.location, this.latlng]);\n    console.log(\"CLIENT: redirecting to results\");\n  }\n\n  /**\n   * Fetches address from search bar autocomplete by parsing returned \n   * place array for 'formatted_address' value\n   * @param place array emitted from setAddress event from search bar component\n   */\n  getAddress(place: object): void {\n    this.location = place['formatted_address']\n    this.latlng = false;\n    this.zone.run(() => this.getNearbyStores());\n  }\n\n\n  /**\n   * Fetches address from geolocation \n   */\n  getUserLatLng(): void {\n    console.log(\"getting user location\");\n    this.loadingUserLatLng = true;\n    navigator.geolocation.getCurrentPosition(\n      (position: Position) => {\n        const stringLocation:string = position.coords.latitude.toString()+ ',' + position.coords.longitude.toString();\n        this.zone.run(() => this.location = stringLocation);\n        this.latlng = true;\n        this.getNearbyStores();\n      }, \n      (positionError: PositionError) => {\n        this.loadingUserLatLng = false;\n        console.log(positionError);\n        setTimeout(()=>\n        alert(\"Failed to get your location, adjust your location settings for our site or insert an address in the search bar\"), 100);\n      }\n    );\n  }\n\n}\n","<div *ngIf=\"!loadingUserLatLng\" id=\"landing\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>ShopSafe</h1>\n            <p>Information tool for safe, simple shopping during COVID-19.</p>\n            <br/>\n            <a [routerLink]=\"['/about']\">Learn more about this tool &nbsp; <i class=\"fas fa-long-arrow-alt-right\"></i></a>\n        </div>\n        <br/><br/>\n        <div class=\"user-input\">            \n            <app-search-bar (setAddress)=\"getAddress($event)\"></app-search-bar>\n            <div class = \"loc-button\" (click)=\"getUserLatLng()\"><i class=\"fas fa-map-marked-alt\"></i></div>\n        </div>\n        <p *ngIf=\"failedGeoLoc\" style = \"color: red;\"> failed to get your location, enable location settings for our site or type in an address above.</p>\n    </div>\n</div>\n\n<div *ngIf=\"loadingUserLatLng\" class=\"loading-screen\">\n    <mat-spinner style=\"margin:0 auto;\" \n    mode=\"indeterminate\"></mat-spinner>\n    <br/>\n    <p>Fetching Location...</p>\n </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mobile-redirect',\n  templateUrl: './mobile-redirect.component.html',\n  styleUrls: ['./mobile-redirect.component.css']\n})\nexport class MobileRedirectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"mobile-redirect\" class=\"segment\">\n    <div class=\"segment-text\">\n        <h1>\n          Hi! It looks like you're using our app on a mobile device.\n        </h1>\n        <p>\n          Unfortunately, we're still working on optimizing it for mobile right now. Please use it on your desktop instead!\n        </p>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"page-not-found\" class=\"segment\">\n    <div class=\"segment-text\">\n        <h1>404 Page Not Found</h1>\n        <p>Sorry you couldn't find what you were looking for! Click <a [routerLink]=\"['/']\">here</a> to return to the landing page.</p>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild, OnChanges, NgZone } from '@angular/core';\nimport { ApiService } from '../../api/api.service';\nimport { Result } from '../../classes/result/result';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleMap, MapMarker, MapInfoWindow } from '@angular/google-maps';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.css']\n})\n\nexport class ResultComponent implements OnInit {\n  result: Result;\n  latlng: boolean;\n  location: string;\n  isLoaded: boolean;\n  httpError: boolean;\n  httpErrorMessage: string;\n\n  sortingMethods: string[];\n\n  @ViewChild(GoogleMap, { static: false }) map: GoogleMap; // In-template Google Map.\n  @ViewChild(MapInfoWindow, { static: false }) infoWindow: MapInfoWindow; // In-template Map info window.\n  infoWindowOptions: google.maps.InfoWindowOptions = {}; // Options for Info Window.\n  markers = []; // Array of store markers rendered in Google Map.\n  center: google.maps.LatLngLiteral; // Current center of Google Map.\n  zoom: number; //zoom level of map\n  styles: google.maps.MapTypeStyle[] = [\n    {\n      featureType: \"administrative\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          visibility: \"off\"\n        }\n      ]\n    },\n    {\n      featureType: \"poi\",\n      stylers: [\n        {\n          visibility: \"off\"\n        }\n      ]\n    },\n    {\n      featureType: \"road\",\n      elementType: \"labels.icon\",\n      stylers: [\n        {\n          visibility: \"off\"\n        }\n      ]\n    },\n    {\n      featureType: \"transit\",\n      stylers: [\n        {\n          visibility: \"off\"\n        }\n      ]\n    }\n  ]; // Custom map styling.\n  options: google.maps.MapOptions = {\n    disableDefaultUI: true,\n    styles: this.styles,\n  }; // Options for Google Map rendered in template.\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    public zone: NgZone\n  ) { \n    this.sortingMethods = ['Sort by ShopSafe Score', \n                           'Sort by Google Review',\n                           'Sort by Distance']; // Init sorting methods.\n  }\n\n  ngOnInit(): void {\n    this.isLoaded = false; // Defaults to API not called yet\n    this.httpError = false; // Defaults to no HTTP error\n    this.location = this.route.snapshot.paramMap.get('location').toString();\n    this.latlng = JSON.parse(this.route.snapshot.paramMap.get('latlng'));\n    this.getResult('Sort by ShopSafe Score');\n  }\n\n  /**\n   * Calls API to get result and subscribes local variables using data returned\n   * in the Observable from the HTTP response.\n   */\n  getResult(method: string): void {\n    console.log('CLIENT: results api call at ' + this.location);\n    this.apiService.getNearbyStores(this.location, this.latlng)\n      .subscribe(data => \n        this.result = {\n          stores: (data as any).stores,\n          latLng: (data as any).latLng\n        },\n        err => {\n          console.log(err),\n          this.httpError = true,\n          this.httpErrorMessage = err\n        },\n        () => {\n          this.sortResults(method);\n          this.initTemplate()\n        }\n      );\n  }\n\n  getSortedResult(method: string): void {\n    // this.apiService.getNearbyStores(this.location, this.latlng)\n    //   .subscribe(\n    //     () => { this.sortResults(method) }\n    //   );\n    this.zone.run(() => { this.sortResults(method) });\n  }\n\n  /**\n   * Initializes component by using data returned from API call.\n   * Sets isLoaded boolean to true, as the function can only be called when there\n   * is a successful response.\n   */\n  initTemplate(): void {\n    // Sets loaded state to true\n    this.isLoaded = true;\n    console.log(\"CLIENT: API call finished\");\n\n    // Add all map markers\n    this.addMarkers();\n    console.log(\"CLIENT: added markers\");\n\n    // Set center of map to latLng of user location\n    this.center = {\n      lat: this.result.latLng.latitude,\n      lng: this.result.latLng.longitude\n    };\n\n    // Set zoom level of map\n    this.zoomMap();\n  }\n\n  /**\n   * Populates map with markers indicating score range based on latLng geolocation\n   * of each rendered grocery store.\n   * \n   * Red markers: [0, 3.3], yellow markers: (3.3, 6.6], greeen markers: (6.6, 10]\n   */\n  addMarkers(): void {\n    var safeIcon = \"http://maps.google.com/mapfiles/ms/icons/green.png\";\n    var cautionIcon = \"http://maps.google.com/mapfiles/ms/icons/yellow.png\";\n    var unsafeIcon = \"http://maps.google.com/mapfiles/ms/icons/red.png\";\n    var currIcon = '';\n\n    var userIcon = \"https://img.icons8.com/material-two-tone/24/000000/street-view.png\";\n\n    // Adds current user query location to markers.\n    this.markers.push({\n      position: {\n        lat: this.result.latLng.latitude,\n        lng: this.result.latLng.longitude\n      },\n      title: \"Your location!\",\n      options: {\n        icon: { url: userIcon }\n      }\n    })\n\n    // Adds each stores as marker.\n    for (let store of this.result.stores) {\n      // Set icon according to colour.\n      if (store.score <= 3.3) {\n        currIcon = unsafeIcon;\n      } else if (store.score <= 6.6) {\n        currIcon = cautionIcon;\n      } else {\n        currIcon = safeIcon;\n      }\n\n      this.markers.push({\n        position: {\n          lat: store.latitude,\n          lng: store.longitude\n        },\n        title: store.name,\n        info: store.score,\n        options: {  \n          icon: { url: currIcon } \n        }\n      })\n    }\n  }\n\n  /**\n   * Calculates and sets zoom level based on maximum distance of a store\n   * from the user latLng.\n   */\n  zoomMap(): void {\n    console.log(\"CLIENT: map resized\");\n    //Maximum distance from user latlng\n    const maxDistance = Math.max.apply(null, this.result.stores.map(store => store.distance));\n\n    this.zoom = Math.round(14-Math.log(maxDistance)/Math.LN2);\n  }\n\n  /**\n   * Recenters map based on latLng\n   * @param lat latitude to be recentered to\n   * @param lng longitude to be recentered to\n   */\n  recenterMap(lat: number, lng: number): void {\n    this.center = {\n      lat: lat,\n      lng: lng\n    };\n\n    // Scroll to map.\n    const mapElement = document.getElementById(\"map\");\n    mapElement.scrollIntoView({behavior: 'smooth'});\n  }\n\n  /**\n   * Sorts results in descending order with the selected method through \n   * the dropdown in the results page. Method gets called when the selector is changed.\n   * @param method The method from the dropdown selector.\n   */\n  sortResults(method: string): void {\n    // Sort by ShopSafe Score in descending order.\n    if (method == \"Sort by ShopSafe Score\") {\n      console.log(\"CLIENT: sorting by ShopSafe Score\");\n      this.result.stores.sort((n1, n2) => {\n        return n2.score - n1.score;\n      });\n    // Sort by Google Review in descending order.\n    } else if (method == \"Sort by Google Review\") {\n      console.log(\"CLIENT: sorting by Google Review\");\n      this.result.stores.sort((n1, n2) => {\n        return n2.rating - n1.rating;\n      });\n    // Sort by distance in ascending order. \n    } else {\n      this.result.stores.sort((n1, n2) => {\n        console.log(\"CLIENT: sorting by distance\");\n        return n1.distance - n2.distance;\n      });\n    }\n  }\n\n  /**\n   * Opens info window on map anchored to given marker.\n   * @param markerPosition Marker coordinates that the window is anchored to.\n   * @param store The name of the store for the given marker.\n   * @param storeScore The score of the specified store.\n   */\n  openInfo(markerPosition, store, storeScore): void {\n    this.infoWindowOptions = { \n      content: store + \": \" + Math.round(storeScore * 100) / 100 + \"/10\",\n      position: markerPosition\n    };\n    \n    this.infoWindow.open();\n  }\n}","<div *ngIf=\"isLoaded && !httpError\" id=\"result\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>{{ location }}</h1>\n            <p>Showing all grocery stores for your location. The map is centered to your current location.</p>\n            <p><button class=\"maps-button\" (click)=\"recenterMap(result.latLng.latitude, result.latLng.longitude)\"><i class=\"fas fa-location-arrow\"></i> &nbsp; RECENTER MAP</button></p>\n        </div>\n        <div id=\"map\">\n          <google-map\n            #googleMap\n            height=\"500px\"\n            width=\"100%\"\n            [zoom]=\"zoom\"\n            [center]=\"center\"\n            [options]=\"options\"\n          >\n            <map-marker\n              *ngFor=\"let marker of markers\"\n              [position]=\"marker.position\"\n              [title]=\"marker.title\"\n              [options]=\"marker.options\"\n              (mapClick)=\"openInfo(marker.position, marker.title, marker.info)\"\n            >\n            </map-marker>\n            <map-info-window\n              [options]=\"infoWindowOptions\"\n            ></map-info-window>\n          </google-map>\n        </div>\n        <br/>\n        <div class=\"stores-list-heading\">\n          <div class=\"left-text\">\n            <h2>Local Grocery Stores</h2>\n            <p class=\"subtext\">\n              Click on a store name to view store statistics, click on the &nbsp; <i class=\"fas fa-map-marker-alt\" style=\"color:#68BBCF\"></i> &nbsp; to view on map\n            </p>\n          </div>\n          <div class=\"right-text\">\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Sort Results</mat-label>\n              <mat-select>\n                <mat-option *ngFor=\"let method of sortingMethods\" [value]=\"method\" (click)=\"getSortedResult(method)\">\n                  {{ method }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"stores-list\" *ngFor=\"let store of result.stores; let resultIndex = index\">\n            <div class=\"stores-list-animate-box\" [style.--index]=\"resultIndex\">\n              <div class=\"stores-list-item\">\n                <div class=\"row\">\n                  <div class=\"left-text markers\">\n                      <a class=\"location-icon\" (click)=\"recenterMap(store.latitude, store.longitude)\"><i class=\"fas fa-map-marker-alt\"></i></a> &nbsp;\n                      <a \n                          class=\"stores-list-location\" \n                          [routerLink]=\"['/store', store.id]\"\n                      >\n                          {{ store.name }}\n                      </a>\n                  </div>\n                  <div class=\"right-text\">\n                      <p class=\"address\">{{ store.address }}</p>\n                  </div>\n                </div>\n                <br/>\n                <hr/>\n                <div class=\"row\">\n                  <div class=\"right-text\">\n                    <a class=\"tag\">{{ store.distance | round }} mi</a>\n                    <a class=\"tag\">\n                      {{ store.rating ? ( store.rating | round ) : '—' }}/5 &nbsp;\n                      <a class=\"tooltip\"\n                        matTooltip=\"Google Review\">\n                        <i class=\"far fa-question-circle\"></i>\n                      </a>\n                    </a>\n                    <a class=\"rating\">{{ store.score | round }}/10</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"!isLoaded && !httpError\" class=\"loading-screen\">\n  <mat-spinner style=\"margin:0 auto;\" \n    mode=\"indeterminate\"></mat-spinner>\n  <br/>\n  <p>Fetching Results for {{ location }}...</p>\n</div>\n\n<app-http-error *ngIf=\"httpError\" [httpErrorMessage]='httpErrorMessage'></app-http-error>","import { Component, ViewChild, EventEmitter, Output, OnInit, AfterViewInit } from '@angular/core';\nimport { } from 'googlemaps';\nimport { BehaviorSubject, Observable } from 'rxjs'\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.css']\n})\nexport class SearchBarComponent implements OnInit {\n\n  @Output() setAddress: EventEmitter<any> = new EventEmitter();\n  @ViewChild('address') address: any;\n\n  autocompleteInput: string;\n  queryWait: boolean;\n\n  constructor() {\n    // Check if API is loaded\n    if (google.maps.places && google.maps) {\n      console.log('CLIENT: apis loaded');\n      this.queryWait = true;\n    } else {\n      console.log('CLIENT: apis not loaded');\n      this.queryWait = false;\n    }\n  }\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.getPlace();\n  }\n\n  /**\n   * Fetches places based on changing input values using Google Places API autocomplete feature.\n   * Restricted to the US for geocoded locations (ie. not corporate)\n   */\n  getPlace(): void {\n    const autocomplete = new google.maps.places.Autocomplete(this.address.nativeElement,\n      {\n          componentRestrictions: { country: 'US' },\n          // Restricted to addresses (ie. not establishments)\n          types: ['geocode']\n      });\n    \n    google.maps.event.addListener(autocomplete, 'place_changed', () => {\n      const place = autocomplete.getPlace();\n      this.invokeEvent(place);\n    });\n  }\n\n  /**\n   * Invokes EventEmitter to toggle changes for autocomplete.\n   * @param place contained value within event to be emitted\n   */\n  invokeEvent(place: Object): void {\n    this.setAddress.emit(place);\n  }\n\n}\n"," <form>\n  <div class=\"input-container\">\n    <mat-icon class=\"search-icon\">search</mat-icon>\n    <input\n      [disabled]=\"!queryWait\"\n      #address\n      class=\"input-field\"\n      type=\"text\"\n      placeholder=\"ENTER YOUR LOCATION TO FIND NEARBY GROCERY STORES\"\n      name=\"search\"\n      [(ngModel)]=\"autocompleteInput\"\n    >\n  </div>\n</form>\n","import { Component, OnInit, HostListener } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { CheckInModalComponent } from '../check-in-modal/check-in-modal.component';\nimport { ApiService } from '../../api/api.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store } from 'src/app/classes/store/store';\nimport { CountyStats } from 'src/app/classes/county-stats/county-stats';\nimport { DataPoint } from '../../classes/data-point/data-point';\n\n@Component({\n  selector: 'app-store', \n  templateUrl: './store.component.html',\n  styleUrls: ['./store.component.css']\n})\nexport class StoreComponent implements OnInit {\n  store: Store;\n  countyStats: CountyStats;\n  latLng: string;\n  isLoaded: boolean;\n  storeId: string;\n  httpError: boolean;\n  httpErrorMessage: string;\n  proportion: number;\n\n  covidData: DataPoint[];\n  maskData: DataPoint[];\n  busyData: DataPoint[];\n  lineData: DataPoint[];\n  hygieneData: DataPoint[];\n\n  isSmall: boolean; // Check for resizing elements.\n\n  @HostListener('window:resize', ['$event'])\n  onResizeDown(event) {\n    if (event.target.innerWidth > 1630) {\n      this.isSmall = false;\n      console.log(\"CLIENT: resize up\");\n    } else {\n      this.isSmall = true;\n      console.log(\"CLIENT: resize down\");\n    }\n  }\n\n  constructor(\n    public matDialog: MatDialog,\n    private apiService: ApiService,\n    private route: ActivatedRoute\n    ) {\n      if (window.innerWidth > 1630) {\n        this.isSmall = false;\n      } else {\n        this.isSmall = true;\n      }\n    }\n\n  /**\n   * Runs when component is loaded\n   */\n  ngOnInit(): void {\n    // Defaults to API not called yet\n    this.isLoaded = false;\n    // Defaults to no HTTP error\n    this.httpError = false;\n    this.getStore();\n  }\n\n  /**\n   * Calls API to get store and subscribes local variables using data returned in the \n   * Observable from the HTTP response.\n   */\n  getStore(): void {\n    const id = this.route.snapshot.paramMap.get('id').toString();\n    this.storeId = id;\n    this.apiService.getStoreById(id)\n      .subscribe(\n        (res: any) => {\n          this.store = res.store,\n          this.countyStats = res.countyStats,\n          this.covidData = this.countyStats.covidData,\n          this.maskData = res.maskData,\n          this.busyData = res.busyData,\n          this.lineData = res.lineData,\n          this.hygieneData = res.hygieneData\n        },\n        err => {\n          console.log(err),\n          this.httpError = true,\n          this.httpErrorMessage = err\n        },\n        () => {\n          this.initTemplate();\n        }\n      );\n  }\n\n  /**\n   * Initializes component by using data returned from API call.\n   * Sets isLoaded boolean to true, as the function can only be called when there\n   * is a successful response.\n   */\n  initTemplate(): void {\n    // Sets loaded state to true\n    this.isLoaded = true;\n    console.log(\"CLIENT: API call finished\");\n\n    // Round proportion to 2 decimal places\n    this.proportion = this.countyStats.cases / this.countyStats.population * 100;\n    console.log(\"CLIENT: calculated percentage as \" + this.proportion);\n  }\n  \n  /**\n   * Opens check in modal dialog using check in modal component.\n   * Opens new check in modal on screen.\n   */\n  openModal() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.id = \"check-in-modal\";\n    dialogConfig.height = \"510px\";\n    dialogConfig.width = \"600px\";\n    CheckInModalComponent.setParam(this.store);\n    const modalDialog = this.matDialog.open(CheckInModalComponent, dialogConfig);\n    \n    // Updates changes in place after modal closes\n    modalDialog.afterClosed().subscribe(() => { this.getStore() });\n  }\n\n  /**\n   * Opens Google Maps link using Places ID of the store.\n   */\n  redirectToMap() {\n    const url = 'https://www.google.com/maps/place/?q=place_id:' + this.storeId;\n    window.open(url, \"_blank\");\n  }\n\n  /**\n   * Redirects to result page (previous page).\n   */\n  goBack() {\n    window.history.back();\n  }\n\n}\n","<div *ngIf=\"isLoaded && !httpError\" id=\"store\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <a class=\"back-link\" (click)=\"goBack()\"><i class=\"fas fa-long-arrow-alt-left\"></i> &nbsp; Back to Results</a>\n            <br/>\n            <h1>{{ store.name }}</h1>\n            <p>{{ store.address }}</p>\n            <p>\n                <button class=\"maps-button\" (click)=\"redirectToMap()\"><i class=\"fas fa-map-marked-alt\"></i> &nbsp; VIEW ON MAPS</button>\n                <button id='check-in-button' (click)=\"openModal()\"><i class=\"fas fa-pencil-alt\"></i> &nbsp; CHECK IN AT THIS STORE</button>\n            </p>\n        </div>\n        <div class=\"stat-bar-wrapper\">\n            <div class=\"stat-bar stats-wrapper\">\n                <div class=\"stat-elem-quarter left-obj\">\n                    <a class=\"stat-obj\"\n                       matTooltip=\"The number of people who have checked into the current store.\">\n                    CHECKED IN</a>\n                    <p>{{ store.checkInCount }}</p>\n                </div>\n                <div class=\"stat-elem-quarter center-obj\">\n                    <a class=\"stat-obj\"\n                       matTooltip=\"The current operating status of the store.\">\n                    STATUS</a>\n                    <p [ngStyle]=\"{'color': (store.open) ? '#7AC665' : '#FF5151'}\"><b>{{ store.open ? 'OPEN' : 'CLOSED' }}</b></p>\n                </div>\n                <div class=\"break-divider\" *ngIf=\"isSmall\">\n                  <br/><br/><br/>\n                </div>\n                <div class=\"stat-elem-quarter center-obj left-cond\">\n                    <a class=\"stat-obj\"\n                       matTooltip=\"The Google Review rating of the score as found on Google Maps.\">\n                    RATING</a>\n                    <p>{{ store.rating ? ( store.rating | round ) : '—' }}/5</p>\n                </div>\n                <div class=\"stat-elem-quarter right-obj\" style=\"margin-top: -5px\">\n                    <a class=\"stat-obj\"\n                       matTooltip=\"The ShopSafe Score of the store calculated using the check-in statistics and county\n                                   COVID-19 statistics.\">\n                    SHOPSAFE SCORE</a>\n                    <p class=\"shopsafe-score\">{{ store.score | round }}/10</p>\n                </div>\n            </div>\n        </div>\n        \n        <br/><br/>\n        <div class=\"card\">\n          <div class=\"stat-bar-wrapper\">\n            <h2>Check-In Statistics for {{ store.name }}</h2>\n            <p>\n              Chart statistics represent check-in entries averaged per day. To view more about the statistics, \n              hover over each of the most current values of the statistics below.\n            </p>\n            <div class=\"stat-bar-secondary stats-wrapper\">\n              <div class=\"stat-elem-quarter left-obj\">\n                  <a class=\"stat-obj\"\n                  matTooltip=\"How strict is the store with masks? Are the customers and workers \n                              wearing masks properly? 0 indicates no to little mask policy \n                              and presence (bad), and 10 indicates excellent mask usage (good)\">\n                    MASK USAGE\n                  </a>\n                  <p><b>{{ store.checkInCount == 0 ? '—' : store.masks | round }}</b>/10</p>\n              </div>\n              <div class=\"stat-elem-quarter center-obj\">\n                  <a class=\"stat-obj\"\n                  matTooltip=\"How crowded is it inside the store? Essentially, is there \n                              enough space to social distance, maintain 6 feet? 0 indicates \n                              very busy (bad), and 10 indicates not busy at all (good)\">\n                    SOCIAL DISTANCING\n                  </a>\n                  <p><b>{{ store.checkInCount == 0 ? '—' : store.busy | round }}</b>/10</p>\n              </div>\n              <div class=\"break-divider\" *ngIf=\"isSmall\">\n                <br/><br/><br/>\n              </div>\n              <div class=\"stat-elem-quarter center-obj left-cond\">\n                  <a class=\"stat-obj\"\n                  matTooltip=\"Is there a line to get into the store from the outside? Are \n                              there lines inside the store? How long was the wait? 0 indicates \n                              long waits (bad), and 10 indicates minimal waits (good)\">\n                    SERVICE SPEED\n                  </a>\n                  <p><b>{{ store.checkInCount == 0 ? '—' : store.line | round }}</b>/10</p>\n              </div>\n              <div class=\"stat-elem-quarter right-obj\">\n                  <a class=\"stat-obj\"\n                  matTooltip=\"How clean is the store overall? Are the shared carts, \n                              baskets, and surfaces sanitized? 0 indicates poor hygiene \n                              (bad), and 10 indicates good hygiene (good)\">\n                    CLEANLINESS\n                  </a>\n                  <p><b>{{ store.checkInCount == 0 ? '—' : store.hygiene | round }}</b>/10</p>\n              </div>\n            </div>\n          </div>\n          <div id=\"line-chart\" class=\"chart\">\n            <app-line-chart [mask]='maskData' [busy]='busyData' [line]='lineData' [hygiene]='hygieneData'></app-line-chart>\n          </div>\n        </div>\n\n        <div class=\"card\">\n          <div class=\"stat-bar-wrapper\">\n              <h2>COVID-19 Statistics for {{ countyStats.countyName }} County</h2>\n              <p>\n                COVID-19 statistics per county are taken from the New York Times COVID-19 dataset.\n              </p>\n              <div class=\"stat-bar-secondary\">\n                  <div class=\"stat-elem\">\n                      <a class=\"stat-obj\">TOTAL CASES</a>\n                      <p>{{ countyStats.cases }}</p>\n                  </div>\n                  <div class=\"stat-elem center-obj\" style=\"text-align: center;\">\n                      <a class=\"stat-obj\">TOTAL DEATHS</a>\n                      <p>{{ countyStats.deaths }}</p>\n                  </div>\n                  <div class=\"stat-elem\" style=\"text-align: right; margin-top: -5px\">\n                      <a class=\"stat-obj\">PERCENT AFFECTED</a>\n                      <p class=\"shopsafe-score\">{{ proportion | round }}%</p>\n                  </div>\n              </div>\n          </div>\n          <div id=\"covid-chart\" class=\"chart\">\n            <app-covid-chart [covidData]='covidData'></app-covid-chart>\n          </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"!isLoaded && !httpError\" class=\"loading-screen\">\n  <mat-spinner></mat-spinner>\n  <br/>\n  <p>Loading Store...</p>\n</div>\n\n<app-http-error *ngIf=\"httpError\" [httpErrorMessage]='httpErrorMessage'></app-http-error>","import { Component, OnInit, Input } from '@angular/core';\nimport { GoogleChartService } from  '../service/google-chart.service';\nimport { DataPoint } from '../../classes/data-point/data-point';\n\n@Component({\n  selector: 'app-covid-chart',\n  templateUrl: './covid-chart.component.html',\n  styleUrls: ['./covid-chart.component.css']\n})\nexport class CovidChartComponent implements OnInit {\n\n  private gLib: any;\n  @Input() covidData: DataPoint[];\n\n  constructor(\n    private gChartService: GoogleChartService\n  ) \n  {\n    this.gLib = this.gChartService.getGoogle();\n    this.gLib.charts.load('current', {'packages': ['corechart', 'table'], callback: this.drawChart.bind(this)});\n  }\n\n  ngOnInit(): void {}\n\n  /**\n   * Called when parameters are changed by the parent component.\n   */\n  ngOnChanges() {\n    // Updates chart with new parent input values\n    this.gLib.charts.load('current', {'packages': ['corechart', 'table'], callback: this.drawChart.bind(this)});\n  }\n\n  // TODO: custom colorization with options\n  /**\n   * Draws line chart and renders within template.\n   */\n  private drawChart() {\n\n    let data = new this.gLib.visualization.DataTable();\n    data.addColumn('date', 'Date');\n    data.addColumn('number', 'Cases');\n\n    console.log(this.covidData);\n\n    for (let i in this.covidData) {\n      data.addRow([new Date(this.covidData[i].date), this.covidData[i].value]);\n    }\n\n    const options = {\n      focusTarget: \"category\",\n      height: 600,\n      hAxis: { textPosition: 'none' },\n      pointSize: 5\n    }\n\n    let chart = new this.gLib.visualization.LineChart(document.getElementById('covid-chart'));\n\n    chart.draw(data, options);\n    console.log(\"CLIENT: covid map has been drawn\");\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ServiceModule } from './service/service.module';\nimport { LineChartComponent } from './line-chart/line-chart.component';\nimport { CovidChartComponent } from './covid-chart/covid-chart.component';\n\n\n@NgModule({\n  declarations: [\n    LineChartComponent,\n    CovidChartComponent,\n  ],\n  imports: [\n    CommonModule,\n    ServiceModule\n  ],\n  exports: [\n    LineChartComponent,\n    CovidChartComponent,\n  ],\n  providers: [],\n})\nexport class GoogleChartModule { }\n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { GoogleChartService } from  '../service/google-chart.service';\nimport { DataPoint } from '../../classes/data-point/data-point';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.css']\n})\nexport class LineChartComponent implements OnInit {\n\n  private gLib: any;\n  @Input() mask: DataPoint[];\n  @Input() busy: DataPoint[];\n  @Input() line: DataPoint[];\n  @Input() hygiene: DataPoint[];\n\n  constructor(\n    private gChartService: GoogleChartService,\n    )\n  {\n    this.gLib = this.gChartService.getGoogle();\n    this.gLib.charts.load('current', {'packages': ['corechart', 'table'], callback: this.drawChart.bind(this)});\n  }\n\n  ngOnInit(): void {}\n\n   /**\n   * Called when parameters are changed by the parent component.\n   */\n  ngOnChanges() {\n    // Updates chart with new parent input values\n    this.gLib.charts.load('current', {'packages': ['corechart', 'table'], callback: this.drawChart.bind(this)});\n  }\n\n  // TODO: custom colorization with options\n  /**\n   * Draws COVID-19 statistics line chart and renders within template.\n   * Assumes that all input arrays are the same length\n   */\n  private drawChart() {\n\n    let data = new this.gLib.visualization.DataTable();\n    data.addColumn('date', 'Date');\n    data.addColumn('number', 'Mask Usage');\n    data.addColumn('number', 'Social Distancing');\n    data.addColumn('number', 'Service Speed');\n    data.addColumn('number', 'Cleanliness');\n\n    for (let i in this.mask) {\n      data.addRow([new Date(this.mask[i].date), this.mask[i].value, this.busy[i].value, this.line[i].value, this.hygiene[i].value]);\n    }\n\n    const options = {\n      focusTarget: \"category\",\n      height: 600,\n      hAxis: { textPosition: 'none' },\n      pointSize: 5,\n      vAxis: {\n        ticks: [0, 2, 4, 6, 8, 10]\n      }\n    }\n\n    let chart = new this.gLib.visualization.LineChart(document.getElementById('line-chart'));\n\n    chart.draw(data, options);\n    console.log(\"CLIENT: check-in map has been drawn\");\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ServiceModule } from './service.module';\n\ndeclare let google: any;\n\n@Injectable({\n  providedIn: ServiceModule\n})\nexport class GoogleChartService {\n\n  private google: any;\n\n  constructor() {\n    this.google = google;\n   }\n\n  getGoogle() {\n    return this.google;\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Contains Angular service utilized to access the Google Charts library\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ServiceModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'round'})\nexport class RoundPipe implements PipeTransform {\n  transform(input: number) {\n    return Math.round(input * 100) / 100;\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n  // URL of development API\n  apiUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}