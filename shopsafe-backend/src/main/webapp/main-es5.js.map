{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/about/about.component.ts","webpack:///src/app/components/about/about.component.html","webpack:///src/app/components/app.component.ts","webpack:///src/app/components/app.component.html","webpack:///src/app/components/check-in-modal/check-in-modal.component.ts","webpack:///src/app/components/check-in-modal/check-in-modal.component.html","webpack:///src/app/components/feedback-forms/feedback-forms.component.ts","webpack:///src/app/components/feedback-forms/feedback-forms.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/http-error/http-error.component.ts","webpack:///src/app/components/http-error/http-error.component.html","webpack:///src/app/components/landing/landing.component.ts","webpack:///src/app/components/landing/landing.component.html","webpack:///src/app/components/page-not-found/page-not-found.component.ts","webpack:///src/app/components/page-not-found/page-not-found.component.html","webpack:///src/app/components/result/result.component.ts","webpack:///src/app/components/result/result.component.html","webpack:///src/app/components/search-bar/search-bar.component.ts","webpack:///src/app/components/search-bar/search-bar.component.html","webpack:///src/app/components/store/store.component.ts","webpack:///src/app/components/store/store.component.html","webpack:///src/app/google-chart/covid-chart/covid-chart.component.ts","webpack:///src/app/google-chart/google-chart.module.ts","webpack:///src/app/google-chart/line-chart/line-chart.component.ts","webpack:///src/app/google-chart/service/google-chart.service.ts","webpack:///src/app/google-chart/service/service.module.ts","webpack:///src/app/pipes/round.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","API_URL","apiUrl","ApiService","http","httpOptions","headers","storeId","busy","line","hygiene","mask","params","set","toString","post","pipe","_","console","log","error","message","location","url","get","res","status","statusText","providedIn","routes","path","component","AppRoutingModule","forRoot","useHash","imports","AppModule","declarations","providers","bootstrap","entryComponents","AboutComponent","selector","templateUrl","styleUrls","AppComponent","title","production","protocol","window","href","replace","CheckInModalComponent","apiService","dialogRef","route","createCheckIn","Number","subscribe","close","checkIn","FeedbackFormsComponent","FooterComponent","HttpErrorComponent","LandingComponent","router","zone","navigate","place","run","getNearbyStores","getAddress","PageNotFoundComponent","ResultComponent","markers","styles","featureType","elementType","stylers","visibility","options","disableDefaultUI","isLoaded","httpError","snapshot","paramMap","getResult","data","result","stores","latLng","err","httpErrorMessage","initTemplate","addMarkers","center","lat","latitude","lng","longitude","safeIcon","cautionIcon","unsafeIcon","currIcon","userIcon","push","position","icon","store","score","name","info","map","SearchBarComponent","setAddress","getPlace","google","maps","places","queryWait","autocomplete","Autocomplete","address","nativeElement","componentRestrictions","country","types","event","addListener","invokeEvent","emit","StoreComponent","matDialog","getStore","getStoreById","countyStats","covidData","maskData","busyData","lineData","hygieneData","proportion","cases","population","dialogConfig","height","width","setId","modalDialog","open","afterClosed","history","back","CovidChartComponent","gChartService","gLib","getGoogle","charts","load","callback","drawChart","bind","visualization","DataTable","addColumn","i","addRow","Date","date","value","hAxis","textPosition","chart","LineChart","document","getElementById","draw","GoogleChartModule","LineChartComponent","GoogleChartService","ServiceModule","RoundPipe","input","Math","round","environment","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,uD,CAOA;AACA;;;AAKA,QAAMC,OAAO,GAAG,sEAAYC,MAA5B;;QAKaC,U;AAMX,0BACUC,IADV,EAC0B;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AALV,aAAAC,WAAA,GAAc;AACZC,iBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAE,4BAAgB;AAAlB,WAAhB;AADG,SAAd;AAMO;AAEP;;;;;;;;;sCAKqBC,O,EAAiBC,I,EAAcC,I,EAAcC,O,EAAiBC,I,EAAY;AAC7F,cAAIC,MAAM,GAAG,IAAI,+DAAJ,EAAb;AACAA,gBAAM,GAAGA,MAAM,CACJC,GADF,CACM,SADN,EACiBN,OAAO,CAACO,QAAR,EADjB,EAEED,GAFF,CAEM,MAFN,EAEcL,IAAI,CAACM,QAAL,EAFd,EAGED,GAHF,CAGM,MAHN,EAGcJ,IAAI,CAACK,QAAL,EAHd,EAIED,GAJF,CAIM,SAJN,EAIiBH,OAAO,CAACI,QAAR,EAJjB,EAKED,GALF,CAKM,MALN,EAKcF,IAAI,CAACG,QAAL,EALd,CAAT;AAMA,iBAAO,KAAKV,IAAL,CACJW,IADI,CACCd,OAAO,GAAG,WAAV,GAAwBW,MAAM,CAACE,QAAP,EADzB,EAC2C,EAD3C,EAC+C,KAAKT,WADpD,EAEJW,IAFI,CAGH,2DAAI,UAAAC,CAAC;AAAA,mBAAIC,OAAO,CAACC,GAAR,CAAY,wBAAwBZ,OAApC,CAAJ;AAAA,WAAL,CAHG,EAIH,kEAAW,UAAAa,KAAK;AAAA,mBAAI,wDAAWA,KAAK,CAACC,OAAN,IAAiBD,KAA5B,CAAJ;AAAA,WAAhB,CAJG,CAAP;AAMD;AAED;;;;;;;;wCAKuBE,Q,EAAgB;AACrC,cAAMC,GAAG,GAAGtB,OAAO,GAAG,mBAAV,GAAgCqB,QAA5C,CADqC,CAErC;;AACA,iBAAO,KAAKlB,IAAL,CACJoB,GADI,CACiBD,GADjB,EAEJP,IAFI,CAGH,2DAAI,UAACS,GAAD;AAAA,mBAAcA,GAAd;AAAA,WAAJ,CAHG,EAIH,2DAAI,UAAAR,CAAC;AAAA,mBAAIC,OAAO,CAACC,GAAR,CAAY,2CAA2CG,QAAvD,CAAJ;AAAA,WAAL,CAJG,EAKH,kEAAW,UAAAF,KAAK;AAAA,mBAAI,wDAAYA,KAAK,CAACM,MAAN,GAAe,GAAf,GAAqBN,KAAK,CAACO,UAA5B,IAA2CP,KAAtD,CAAJ;AAAA,WAAhB,CALG,CAAP;AAOD;AAED;;;;;;;;;qCAMoBpB,E,EAAY;AAC9B,cAAMuB,GAAG,GAAGtB,OAAO,GAAG,YAAV,GAAyBD,EAArC,CAD8B,CAE9B;;AACA,iBAAO,KAAKI,IAAL,CACJoB,GADI,CACsBD,GADtB,EAEJP,IAFI,CAGH,2DAAI,UAACS,GAAD;AAAA,mBAAcA,GAAd;AAAA,WAAJ,CAHG,EAIH,2DAAI,UAAAR,CAAC;AAAA,mBAAIC,OAAO,CAACC,GAAR,CAAY,2BAA2BnB,EAAvC,CAAJ;AAAA,WAAL,CAJG,EAKH,kEAAW,UAAAoB,KAAK;AAAA,mBAAI,wDAAYA,KAAK,CAACM,MAAN,GAAe,GAAf,GAAqBN,KAAK,CAACO,UAA5B,IAA2CP,KAAtD,CAAJ;AAAA,WAAhB,CALG,CAAP;AAOD;;;;;;;uBAhEUjB,U,EAAU,uH;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFT;;;;;sEAEDA,U,EAAU;cAHtB,wDAGsB;eAHX;AACVyB,oBAAU,EAAE;AADF,S;AAGW,Q;;;;;;;;;;;;;;;;;;;;;;AClBvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAUA,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,EAKrB;AACED,UAAI,EAAE,kBADR;AAEEC,eAAS,EAAE;AAFb,KALqB,EASrB;AACED,UAAI,EAAE,WADR;AAEEC,eAAS,EAAE;AAFb,KATqB,EAarB;AACED,UAAI,EAAE,OADR;AAEEC,eAAS,EAAE;AAFb,KAbqB,EAiBrB;AACED,UAAI,EAAE,UADR;AAEEC,eAAS,EAAE;AAFb,KAjBqB,EAqBrB;AACED,UAAI,EAAE,IADR;AAEEC,eAAS,EAAE;AAFb,KArBqB,CAAvB;;QA+BaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,EAA6B;AAAEK,eAAO,EAAE;AAAX,OAA7B,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBF,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRG,iBAAO,EAAE,CAAC,6DAAaF,OAAb,CAAqBJ,MAArB,EAA6B;AAAEK,mBAAO,EAAE;AAAX,WAA7B,CAAD,CADD;AAERnC,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACziBA;AAOA;AAGA;;;QAwCaqC,S;;;;;YAAAA,S;AAAS,kBALR,sEAKQ;;;;yBAATA,S;AAAS,O;AAAA,iBANT,CAAC,4DAAD,C;AAAY,gBAdd,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,yEAJO,EAKP,yEALO,EAMP,qEANO,EAOP,2EAPO,EAQP,qEARO,EASP,0DATO,EAUP,4FAVO,EAWP,mFAXO,EAYP,qEAZO,CAcc;;;;0HAMZA,S,EAAS;AAAA,uBAjClB,sEAiCkB,EAhClB,sFAgCkB,EA/BlB,oFA+BkB,EA9BlB,0GA8BkB,EA7BlB,iFA6BkB,EA5BlB,iFA4BkB,EA3BlB,oFA2BkB,EA1BlB,0GA0BkB,EAzBlB,4DAyBkB,EAxBlB,+FAwBkB,EAvBlB,+FAuBkB,EAtBlB,2GAsBkB;AAtBI,kBAGtB,uEAHsB,EAItB,oEAJsB,EAKtB,4FALsB,EAMtB,yEANsB,EAOtB,yEAPsB,EAQtB,qEARsB,EAStB,2EATsB,EAUtB,qEAVsB,EAWtB,0DAXsB,EAYtB,4FAZsB,EAatB,mFAbsB,EActB,qEAdsB;AAsBJ,O;AARF,K;;;;;sEAQPA,S,EAAS;cAnCrB,sDAmCqB;eAnCZ;AACRC,sBAAY,EAAE,CACZ,sEADY,EAEZ,sFAFY,EAGZ,oFAHY,EAIZ,0GAJY,EAKZ,iFALY,EAMZ,iFANY,EAOZ,oFAPY,EAQZ,0GARY,EASZ,4DATY,EAUZ,+FAVY,EAWZ,+FAXY,EAYZ,2GAZY,CADN;AAeRF,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,yEAJO,EAKP,yEALO,EAMP,qEANO,EAOP,2EAPO,EAQP,qEARO,EASP,0DATO,EAUP,4FAVO,EAWP,mFAXO,EAYP,qEAZO,CAfD;AA6BRG,mBAAS,EAAE,CAAC,4DAAD,CA7BH;AA8BRC,mBAAS,EAAE,CAAC,sEAAD,CA9BH;AA+BR;AACA;AACAC,yBAAe,EAAE,CAAC,0GAAD;AAjCT,S;AAmCY,Q;;;;;;;;;;;;;;;;;;ACtEtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,c;AAEX,gCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,mP;AAAA;AAAA;ACP3B;;AACI;;AACI;;AACI;;AAAI;;AAAK;;AACT;;AAAG;;AAA2D;;AAClE;;AAEA;;AACI;;AAAI;;AAAU;;AACd;;AACI;;AACI;;AAKJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAY;;AAChB;;AACI;;AACI;;AAAkC;;AAAG;;AAAwB;;AAAK;;AAKtE;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAK;;AACT;;AACI;;AACI;;AAIJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAQ;;AACZ;;AACI;;AACI;;AAA+B;;AAA2C;;AAAe;;AAAI;;AAC7F;;AAAuC;;AAAW;;AAAI;;AAAM;;AAAqC;;AAAQ;;AACzG;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAwB;;AAC5B;;AACI;;AACI;;AAIJ;;AACJ;;AACJ;;AAEJ;;AACJ;;;;;;;;sED9DaA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTC,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,Y;AALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,mBAAR;AASD;;;;mCAPY;AACT,cAAI,sEAAYC,UAAhB,EAA4B;AAC1B,gBAAIzB,QAAQ,CAAC0B,QAAT,KAAsB,OAA1B,EAAmC;AACjCC,oBAAM,CAAC3B,QAAP,CAAgB4B,IAAhB,GAAuB5B,QAAQ,CAAC4B,IAAT,CAAcC,OAAd,CAAsB,MAAtB,EAA8B,OAA9B,CAAvB;AACD;AACF;AACF;;;;;;;uBATUN,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACRzB;;AACA;;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTH,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AERzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,oE,CAWA;AACA;AACA;;;QAEaQ,qB;AAEX,qCACUC,UADV,EAEUC,SAFV,EAGUC,KAHV,EAG+B;AAAA;;AAFrB,aAAAF,UAAA,GAAAA,UAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AAQV,aAAA/C,IAAA,GAAO,EAAP;AACA,aAAAC,IAAA,GAAO,EAAP;AACA,aAAAC,OAAA,GAAU,EAAV;AACA,aAAAC,IAAA,GAAO,EAAP;AATK;;;;mCAEG,CACP;AAQD;;;;;;;;AASA;;;;;;;;kCAQO;AACLO,iBAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,eAAKkC,UAAL,CAAgBG,aAAhB,CAA8BJ,qBAAqB,CAAC7C,OAApD,EAA6DkD,MAAM,CAAC,KAAKjD,IAAN,CAAnE,EAAgFiD,MAAM,CAAC,KAAKhD,IAAN,CAAtF,EAAmGgD,MAAM,CAAC,KAAK/C,OAAN,CAAzG,EAAyH+C,MAAM,CAAC,KAAK9C,IAAN,CAA/H,EACG+C,SADH;AAEA,eAAKJ,SAAL,CAAeK,KAAf;AACD;;;8BAlBmB3D,E,EAAY;AAC9B,eAAKO,OAAL,GAAeP,EAAf;AACAkB,iBAAO,CAACC,GAAR,CAAY,yBAAyB,KAAKZ,OAA1C;AACD;;;;;;;uBAzBU6C,qB,EAAqB,4H,EAAA,sI,EAAA,+H;AAAA,K;;;YAArBA,qB;AAAqB,yC;AAAA,e;AAAA,a;AAAA,4yC;AAAA;AAAA;ACflC;;AACI;;AAAuB;;AAAa;;AACpC;;AAAG;;AAA0I;;AAC7I;;AACI;;AACI;;AACI;;AACA;;AAII;;AACJ;;AACJ;;AACA;;AACE;;AACA;;AACA;;AACI;AAAA;AAAA;;AAKH;;AACD;;AACF;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAGI;;AACJ;;AACJ;;AACC;;AACC;;AACA;;AACA;;AACI;AAAA;AAAA;;AAKH;;AACD;;AACF;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAKI;;AACJ;;AACJ;;AACA;;AACE;;AACA;;AACA;;AACI;AAAA;AAAA;;AAKH;;AACD;;AACF;;AACJ;;AACA;;AACI;;AACI;;AACA;;AAII;;AACJ;;AACJ;;AACC;;AACC;;AACA;;AACA;;AACI;AAAA;AAAA;;AAKH;;AACD;;AACF;;AACJ;;AACJ;;AACA;;AAAoC;AAAA,mBAAW,IAAAQ,OAAA,EAAX;AAAoB,WAApB;;AAAsB;;AAAsB;;AACpF;;;;AAhFkB;;AAAA;;AAsBA;;AAAA;;AAwBA;;AAAA;;AAuBA;;AAAA;;;;;;;;;sEDxELR,qB,EAAqB;cAVjC,uDAUiC;eAVvB;AACTV,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAUuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEflC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaiB,sB;AAEX,wCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,yC;AAAA,e;AAAA,a;AAAA,6W;AAAA;AAAA;ACPnC;;AACI;;AACI;;AACI;;AAAI;;AAAc;;AAClB;;AAAG;;AAA+C;;AACtD;;AAEA;;AACI;;AAAI;;AAAoB;;AACxB;;AACI;;AACG;;AACA;;AACC;;AACA;;AAAI;;AACR;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAa;;AACjB;;AACI;;AACI;;AACA;;AACI;;AACJ;;AAAI;;AACR;;AACJ;;AACJ;;AAEJ;;AACJ;;;;;;;;sEDzBaA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTnB,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;AEPnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;QAOakB,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,8G;AAAA;AAAA;ACP5B;;AACI;;AACI;;AACI;;AAAI;;AAAwB;;AAAI;;AAAI;;AACpC;;AAAI;;AAA6B;;AAAK;;AAAI;;AAC1C;;AAAI;;AAAgC;;AAA2B;;AAAQ;;AAAI;;AAC/E;;AACA;;AACI;;AACJ;;AACJ;;AAEJ;;;;AATmB;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;sEDENA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTpB,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOamB,kB;AAIX,oCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBAPUA,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,4G;AAAA;AAAA;ACP/B;;AACI;;AACI;;AAAI;;AAAU;;AACd;;AAAG;;AAAsE;;AAAY;;AAAI;;AAAK;;AAA8B;;AAC5H;;AACE;;AAAG;;AAAsB;;AAC3B;;AACJ;;AACJ;;;;AAHa;;AAAA;;;;;;;;sEDEAA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTrB,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;gBAE5B;;;;;;;;;;;;;;;;;;;;AETH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;QAUaoB,gB;AAIX,gCACUC,MADV,EAESC,IAFT,EAEqB;AAAA;;AADX,aAAAD,MAAA,GAAAA,MAAA;AACD,aAAAC,IAAA,GAAAA,IAAA;AAJT,aAAA5C,QAAA,GAAmB,EAAnB;AAKK;;;;mCAEG,CACP;;;0CAEc;AACb,eAAK2C,MAAL,CAAYE,QAAZ,CAAqB,CAAC,SAAD,EAAY,KAAK7C,QAAjB,CAArB;AACAJ,iBAAO,CAACC,GAAR,CAAY,gCAAZ;AACD;AAED;;;;;;;;mCAKWiD,K,EAAa;AAAA;;AACtB,eAAKF,IAAL,CAAUG,GAAV,CAAc;AAAA,mBAAM,KAAI,CAAC/C,QAAL,GAAgB8C,KAAK,CAAC,mBAAD,CAA3B;AAAA,WAAd;AACA,eAAKE,eAAL;AACD;;;;;;;uBAzBUN,gB,EAAgB,uH,EAAA,qH;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,a;AAAA,sK;AAAA;AAAA;ACV7B;;AACI;;AACI;;AACI;;AAAI;;AAAQ;;AACZ;;AAAG;;AAA2D;;AAC9D;;AACA;;AAA6B;;AAAkC;;AAA2C;;AAC9G;;AACA;;AAAgB;AAAA,mBAAc,IAAAO,UAAA,QAAd;AAAgC,WAAhC;;AAAkC;;AACtD;;AACJ;;;;AAJe;;AAAA;;;;;;;;;sEDIFP,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTtB,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa4B,qB;AAEX,uCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,qB;AAAqB,K;;;YAArBA,qB;AAAqB,yC;AAAA,c;AAAA,a;AAAA,0F;AAAA;AAAA;ACPlC;;AACI;;AACI;;AAAI;;AAAkB;;AACtB;;AAAG;;AAAyD;;AAAY;;AAAI;;AAAK;;AAA8B;;AACnH;;AACJ;;;;;;;;sEDEaA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT9B,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;AEPlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACeY;;;;;;AAEE,iGAA4B,OAA5B,EAA4B,eAA5B,EAA4B,SAA5B,EAA4B,iBAA5B;;;;;;;;;;;;AAYN;;AACI;;AACE;;AACE;;AACI;;AAAyB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAuD;;AAAqC;;AAAK;;AAC1H;;AAII;;AACJ;;AACA;;AAAkB;;;;AAA4B;;AAClD;;AACA;;AACI;;AAAmB;;AAAmB;;AAC1C;;AACF;;AACA;;AACA;;AACA;;AACE;;AACE;;AAAe;;;;AAA+B;;AAC5C;;AACE;;AACA;;AAEE;;AACF;;AACJ;;AACF;;AACF;;AACF;;AACJ;;;;;;AAzBgB;;AAAA;;AAEA;;AAAA;;AAEc;;AAAA;;AAGC;;AAAA;;AAON;;AAAA;;;;;;;;AAlDjC;;AACI;;AACI;;AACI;;AAAI;;AAAc;;AAClB;;AAAG;;AAA2F;;AAC9F;;AAAG;;AAA4B;AAAA;;AAAA;;AAAA;AAAA;;AAAuE;;AAAsC;;AAAmB;;AAAS;;AAC5K;;AACA;;AACE;;AAOE;;AAOF;;AACF;;AACA;;AACA;;AACI;;AAAsB;;AAAoB;;AAC1C;;AAA8B;;AAAwD;;AAAsC;;AAAc;;AAC9I;;AACA;;AAiCJ;;AACJ;;;;;;AA5DgB;;AAAA;;AAQJ;;AAAA,6EAAW,QAAX,EAAW,aAAX,EAAW,SAAX,EAAW,cAAX;;AAKE;;AAAA;;AAamB;;AAAA;;;;;;AAoCjC;;AACE;;AACA;;AACA;;AAAG;;AAAmB;;AACxB;;;;;;AAEA;;;;;;AAAkC;;;;QD3DrB6B,e;AAmDX,+BACUpB,UADV,EAEUE,KAFV,EAE+B;AAAA;;AADrB,aAAAF,UAAA,GAAAA,UAAA;AACA,aAAAE,KAAA,GAAAA,KAAA;AA7CV,aAAAmB,OAAA,GAAU,EAAV,CA6C+B,CA7CjB;;AAEd,aAAAC,MAAA,GAAqC,CACnC;AACEC,qBAAW,EAAE,gBADf;AAEEC,qBAAW,EAAE,UAFf;AAGEC,iBAAO,EAAE,CACP;AACEC,sBAAU,EAAE;AADd,WADO;AAHX,SADmC,EAUnC;AACEH,qBAAW,EAAE,KADf;AAEEE,iBAAO,EAAE,CACP;AACEC,sBAAU,EAAE;AADd,WADO;AAFX,SAVmC,EAkBnC;AACEH,qBAAW,EAAE,MADf;AAEEC,qBAAW,EAAE,aAFf;AAGEC,iBAAO,EAAE,CACP;AACEC,sBAAU,EAAE;AADd,WADO;AAHX,SAlBmC,EA2BnC;AACEH,qBAAW,EAAE,SADf;AAEEE,iBAAO,EAAE,CACP;AACEC,sBAAU,EAAE;AADd,WADO;AAFX,SA3BmC,CAArC,CA2C+B,CAR5B;;AACH,aAAAC,OAAA,GAAkC;AAChCC,0BAAgB,EAAE,IADc;AAEhCN,gBAAM,EAAE,KAAKA;AAFmB,SAAlC,CAO+B,CAJ5B;AAKE;;;;mCAEG;AACN,eAAKO,QAAL,GAAgB,KAAhB,CADM,CACiB;;AACvB,eAAKC,SAAL,GAAiB,KAAjB,CAFM,CAEkB;;AACxB,eAAK7D,QAAL,GAAgB,KAAKiC,KAAL,CAAW6B,QAAX,CAAoBC,QAApB,CAA6B7D,GAA7B,CAAiC,UAAjC,EAA6CV,QAA7C,EAAhB;AACA,eAAKwE,SAAL;AACD;AAED;;;;;;;oCAIS;AAAA;;AACPpE,iBAAO,CAACC,GAAR,CAAY,iCAAiC,KAAKG,QAAlD;AACA,eAAK+B,UAAL,CAAgBiB,eAAhB,CAAgC,KAAKhD,QAArC,EACGoC,SADH,CACa,UAAA6B,IAAI;AAAA,mBACb,MAAI,CAACC,MAAL,GAAc;AACZC,oBAAM,EAAGF,IAAY,CAACE,MADV;AAEZC,oBAAM,EAAGH,IAAY,CAACG;AAFV,aADD;AAAA,WADjB,EAMI,UAAAC,GAAG,EAAI;AACLzE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ,GACA,MAAI,CAACR,SAAL,GAAiB,IADjB,EAEA,MAAI,CAACS,gBAAL,GAAwBD,GAFxB;AAGD,WAVL,EAWI,YAAM;AACJ,kBAAI,CAACE,YAAL;AACD,WAbL;AAeD;AAED;;;;;;;;uCAKY;AACV;AACA,eAAKX,QAAL,GAAgB,IAAhB;AACAhE,iBAAO,CAACC,GAAR,CAAY,2BAAZ,EAHU,CAKV;;AACA,eAAK2E,UAAL;AACA5E,iBAAO,CAACC,GAAR,CAAY,uBAAZ,EAPU,CASV;;AACA,eAAK4E,MAAL,GAAc;AACZC,eAAG,EAAE,KAAKR,MAAL,CAAYE,MAAZ,CAAmBO,QADZ;AAEZC,eAAG,EAAE,KAAKV,MAAL,CAAYE,MAAZ,CAAmBS;AAFZ,WAAd;AAID;AAED;;;;;;;;;qCAMU;AACR,cAAIC,QAAQ,GAAG,oDAAf;AACA,cAAIC,WAAW,GAAG,qDAAlB;AACA,cAAIC,UAAU,GAAG,kDAAjB;AACA,cAAIC,QAAQ,GAAG,EAAf;AAEA,cAAIC,QAAQ,GAAG,oEAAf,CANQ,CAQR;;AACA,eAAK9B,OAAL,CAAa+B,IAAb,CAAkB;AAChBC,oBAAQ,EAAE;AACRV,iBAAG,EAAE,KAAKR,MAAL,CAAYE,MAAZ,CAAmBO,QADhB;AAERC,iBAAG,EAAE,KAAKV,MAAL,CAAYE,MAAZ,CAAmBS;AAFhB,aADM;AAKhBrD,iBAAK,EAAE,gBALS;AAMhBkC,mBAAO,EAAE;AACP2B,kBAAI,EAAE;AAAEpF,mBAAG,EAAEiF;AAAP;AADC;AANO,WAAlB,EATQ,CAoBR;;AApBQ,qDAqBU,KAAKhB,MAAL,CAAYC,MArBtB;AAAA;;AAAA;AAqBR,gEAAsC;AAAA,kBAA7BmB,KAA6B;;AACpC;AACA,kBAAIA,KAAK,CAACC,KAAN,IAAe,GAAnB,EAAwB;AACtBN,wBAAQ,GAAGD,UAAX;AACD,eAFD,MAEO,IAAIM,KAAK,CAACC,KAAN,IAAe,GAAnB,EAAwB;AAC7BN,wBAAQ,GAAGF,WAAX;AACD,eAFM,MAEA;AACLE,wBAAQ,GAAGH,QAAX;AACD;;AAED,mBAAK1B,OAAL,CAAa+B,IAAb,CAAkB;AAChBC,wBAAQ,EAAE;AACRV,qBAAG,EAAEY,KAAK,CAACX,QADH;AAERC,qBAAG,EAAEU,KAAK,CAACT;AAFH,iBADM;AAKhBrD,qBAAK,EAAE8D,KAAK,CAACE,IALG;AAMhBC,oBAAI,EAAEH,KAAK,CAACC,KANI;AAOhB7B,uBAAO,EAAE;AACP2B,sBAAI,EAAE;AAAEpF,uBAAG,EAAEgF;AAAP;AADC;AAPO,eAAlB;AAWD;AA1CO;AAAA;AAAA;AAAA;AAAA;AA2CT;AAED;;;;;;;;oCAKYP,G,EAAaE,G,EAAW;AAClC,eAAKH,MAAL,GAAc;AACZC,eAAG,EAAEA,GADO;AAEZE,eAAG,EAAEA;AAFO,WAAd;AAIA,eAAKc,GAAL,CAASjB,MAAT,GAAkB,KAAKA,MAAvB;AACD;;;;;;;uBAzKUtB,e,EAAe,4H,EAAA,+H;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA;AAAA;oEAOf,8D,EAAW,I;;;;;;;;;;;;;;ACnBxB;;AAiEA;;AAMA;;;;AAvEK;;AAiEA;;AAAA;;AAMW;;AAAA;;;;;;;;;;sED3DHA,e,EAAe;cAN3B,uDAM2B;eANjB;AACT/B,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAMiB,Q;;;;;;;;gBAOzB,uD;iBAAU,8D,EAAW;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;AEnBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;QAQaqE,kB;AAQX,oCAAc;AAAA;;AANJ,aAAAC,UAAA,GAAgC,IAAI,0DAAJ,EAAhC;AAMO;;;;mCAET,CACP;;;0CAEc;AACb,eAAKC,QAAL;AACD;AAED;;;;;;;mCAIQ;AAAA;;AACN;AACA,cAAIC,MAAM,CAACC,IAAP,CAAYC,MAAhB,EAAwB;AACtB,iBAAKC,SAAL,GAAiB,IAAjB;AACD,WAFD,MAEO;AACL,iBAAKA,SAAL,GAAiB,KAAjB;AACD;;AAED,cAAMC,YAAY,GAAG,IAAIJ,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBG,YAAvB,CAAoC,KAAKC,OAAL,CAAaC,aAAjD,EACnB;AACIC,iCAAqB,EAAE;AAAEC,qBAAO,EAAE;AAAX,aAD3B;AAEI;AACAC,iBAAK,EAAE,CAAC,SAAD;AAHX,WADmB,CAArB;AAOAV,gBAAM,CAACC,IAAP,CAAYU,KAAZ,CAAkBC,WAAlB,CAA8BR,YAA9B,EAA4C,eAA5C,EAA6D,YAAM;AACjE,gBAAMpD,KAAK,GAAGoD,YAAY,CAACL,QAAb,EAAd;;AACA,kBAAI,CAACc,WAAL,CAAiB7D,KAAjB;AACD,WAHD;AAID;AAED;;;;;;;oCAIYA,K,EAAa;AACvB,eAAK8C,UAAL,CAAgBgB,IAAhB,CAAqB9D,KAArB;AACD;;;;;;;uBAhDU6C,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACR9B;;AACC;;AACE;;AAA8B;;AAAM;;AACpC;;AAOE;AAAA;AAAA;;AAPF;;AASF;;AACF;;;;AATM;;AAAA,uLAAwD,SAAxD,EAAwD,qBAAxD;;;;;;;;;sEDIOA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTvE,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;gBAE5B;;;gBACA,uD;iBAAU,S;;;;;;;;;;;;;;;;;;;;AEXb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;ACAA;;AACI;;AACI;;AACI;;AAAqB;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAA2C;;AAAsB;;AACzG;;AACA;;AAAI;;AAAgB;;AACpB;;AAAG;;AAAmB;;AACtB;;AACI;;AAA4B;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAsC;;AAAmB;;AAC/G;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AAAsB;;AAAkC;;AAA6B;;AACtH;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAoB;;AAAU;;AAC9B;;AAAG;;AAAwB;;AAC/B;;AACA;;AACI;;AAAoB;;AAAM;;AAC1B;;AAA+D;;AAAG;;AAAoC;;AAAI;;AAC9G;;AACA;;AACI;;AAAoB;;AAAc;;AAClC;;AAA0B;;;;AAA4B;;AAC1D;;AACJ;;AACJ;;AAEA;;AAAK;;AACL;;AACE;;AACE;;AAAI;;AAAwC;;AAC5C;;AACE;;AAEF;;AACA;;AACE;;AACI;;AAIE;;AACF;;AACA;;AAAG;;AAAG;;;;AAAyD;;AAAI;;AAAG;;AAC1E;;AACA;;AACI;;AAIE;;AACF;;AACA;;AAAG;;AAAG;;;;AAAwD;;AAAI;;AAAG;;AACzE;;AACA;;AACI;;AAGE;;AACF;;AACA;;AAAG;;AAAG;;;;AAAwD;;AAAI;;AAAG;;AACzE;;AACA;;AACI;;AAIE;;AACF;;AACA;;AAAG;;AAAG;;;;AAA2D;;AAAI;;AAAG;;AAC5E;;AACF;;AACF;;AACA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACI;;AAAI;;AAA2D;;AAC/D;;AACI;;AACI;;AAAoB;;AAAW;;AAC/B;;AAAG;;AAAuB;;AAC9B;;AACA;;AACI;;AAAoB;;AAAY;;AAChC;;AAAG;;AAAwB;;AAC/B;;AACA;;AACI;;AAAoB;;AAAgB;;AACpC;;AAA0B;;;;AAAyB;;AACvD;;AACJ;;AACJ;;AACA;;AACE;;AACF;;AACF;;AACJ;;AACJ;;;;;;AAlGgB;;AAAA;;AACD;;AAAA;;AAUQ;;AAAA;;AAIA;;AAAA;;AAA+D;;AAAA;;AAIxC;;AAAA;;AAQ9B;;AAAA;;AAaQ;;AAAA;;AASA;;AAAA;;AAQA;;AAAA;;AASA;;AAAA;;AAKI;;AAAA,0FAAiB,MAAjB,EAAiB,eAAjB,EAAiB,MAAjB,EAAiB,eAAjB,EAAiB,SAAjB,EAAiB,kBAAjB;;AAMV;;AAAA;;AAIO;;AAAA;;AAIA;;AAAA;;AAIuB;;AAAA;;AAKnB;;AAAA;;;;;;AAM7B;;AACE;;AACA;;AACA;;AAAG;;AAAgB;;AACrB;;;;;;AAEA;;;;;;AAAkC;;;;QDjGrBuF,c;AAgBX,8BACSC,SADT,EAEU/E,UAFV,EAGUE,KAHV,EAG+B;AAAA;;AAFtB,aAAA6E,SAAA,GAAAA,SAAA;AACC,aAAA/E,UAAA,GAAAA,UAAA;AACA,aAAAE,KAAA,GAAAA,KAAA;AACH;AAEP;;;;;;;mCAGQ;AACN;AACA,eAAK2B,QAAL,GAAgB,KAAhB,CAFM,CAGN;;AACA,eAAKC,SAAL,GAAiB,KAAjB;AACA,eAAKkD,QAAL;AACD;AAED;;;;;;;mCAIQ;AAAA;;AACN,cAAMrI,EAAE,GAAG,KAAKuD,KAAL,CAAW6B,QAAX,CAAoBC,QAApB,CAA6B7D,GAA7B,CAAiC,IAAjC,EAAuCV,QAAvC,EAAX;AACA,eAAKP,OAAL,GAAeP,EAAf;AACA,eAAKqD,UAAL,CAAgBiF,YAAhB,CAA6BtI,EAA7B,EACG0D,SADH,CAEI,UAACjC,GAAD,EAAc;AACZ,kBAAI,CAACmF,KAAL,GAAanF,GAAG,CAACmF,KAAjB,EACA,MAAI,CAAC2B,WAAL,GAAmB9G,GAAG,CAAC8G,WADvB,EAEA,MAAI,CAACC,SAAL,GAAiB,MAAI,CAACD,WAAL,CAAiBC,SAFlC,EAGA,MAAI,CAACC,QAAL,GAAgBhH,GAAG,CAACgH,QAHpB,EAIA,MAAI,CAACC,QAAL,GAAgBjH,GAAG,CAACiH,QAJpB,EAKA,MAAI,CAACC,QAAL,GAAgBlH,GAAG,CAACkH,QALpB,EAMA,MAAI,CAACC,WAAL,GAAmBnH,GAAG,CAACmH,WANvB;AAOD,WAVL,EAWI,UAAAjD,GAAG,EAAI;AACLzE,mBAAO,CAACC,GAAR,CAAYwE,GAAZ,GACA,MAAI,CAACR,SAAL,GAAiB,IADjB,EAEA,MAAI,CAACS,gBAAL,GAAwBD,GAFxB;AAGD,WAfL,EAgBI,YAAM;AACJ,kBAAI,CAACE,YAAL;AACD,WAlBL;AAoBD;AAED;;;;;;;;uCAKY;AACV;AACA,eAAKX,QAAL,GAAgB,IAAhB;AACAhE,iBAAO,CAACC,GAAR,CAAY,2BAAZ,EAHU,CAKV;;AACA,eAAK0H,UAAL,GAAkB,KAAKN,WAAL,CAAiBO,KAAjB,GAAyB,KAAKP,WAAL,CAAiBQ,UAA1C,GAAuD,GAAzE;AACA7H,iBAAO,CAACC,GAAR,CAAY,sCAAsC,KAAK0H,UAAvD;AACD;AAED;;;;;;;oCAIY;AAAA;;AACV,cAAMG,YAAY,GAAG,IAAI,wEAAJ,EAArB;AACAA,sBAAY,CAAChJ,EAAb,GAAkB,gBAAlB;AACAgJ,sBAAY,CAACC,MAAb,GAAsB,OAAtB;AACAD,sBAAY,CAACE,KAAb,GAAqB,OAArB;;AACA,yGAAsBC,KAAtB,CAA4B,KAAK5I,OAAjC;;AACA,cAAM6I,WAAW,GAAG,KAAKhB,SAAL,CAAeiB,IAAf,CAAoB,8FAApB,EAA2CL,YAA3C,CAApB,CANU,CAQV;;AACAI,qBAAW,CAACE,WAAZ,GAA0B5F,SAA1B,CAAoC,YAAM;AAAE,kBAAI,CAAC2E,QAAL;AAAiB,WAA7D;AACD;AAED;;;;;;wCAGgB;AACd,cAAM9G,GAAG,GAAG,mDAAmD,KAAKhB,OAApE;AACA0C,gBAAM,CAACoG,IAAP,CAAY9H,GAAZ,EAAiB,QAAjB;AACD;AAED;;;;;;iCAGS;AACP0B,gBAAM,CAACsG,OAAP,CAAeC,IAAf;AACD;;;;;;;uBA1GUrB,c,EAAc,mI,EAAA,4H,EAAA,+H;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,0gE;AAAA;AAAA;ACd3B;;AAyGA;;AAMA;;;;AA/GK;;AAyGA;;AAAA;;AAMW;;AAAA;;;;;;;;;;sEDjGHA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTzF,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEd3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa6G,mB;AAKX,mCACUC,aADV,EAC2C;AAAA;;AAAjC,aAAAA,aAAA,GAAAA,aAAA;AAGR,aAAKC,IAAL,GAAY,KAAKD,aAAL,CAAmBE,SAAnB,EAAZ;AACA,aAAKD,IAAL,CAAUE,MAAV,CAAiBC,IAAjB,CAAsB,SAAtB,EAAiC;AAAC,sBAAY,CAAC,WAAD,EAAc,OAAd,CAAb;AAAqCC,kBAAQ,EAAE,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB;AAA/C,SAAjC;AACD;;;;mCAEO,CAAW;AAEnB;;;;;;sCAGc;AACZ;AACA,eAAKN,IAAL,CAAUE,MAAV,CAAiBC,IAAjB,CAAsB,SAAtB,EAAiC;AAAC,wBAAY,CAAC,WAAD,EAAc,OAAd,CAAb;AAAqCC,oBAAQ,EAAE,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB;AAA/C,WAAjC;AACD,S,CAED;;AACA;;;;;;oCAGoB;AAElB,cAAI1E,IAAI,GAAG,IAAI,KAAKoE,IAAL,CAAUO,aAAV,CAAwBC,SAA5B,EAAX;AACA5E,cAAI,CAAC6E,SAAL,CAAe,MAAf,EAAuB,MAAvB;AACA7E,cAAI,CAAC6E,SAAL,CAAe,QAAf,EAAyB,OAAzB;AAEAlJ,iBAAO,CAACC,GAAR,CAAY,KAAKqH,SAAjB;;AAEA,eAAK,IAAI6B,CAAT,IAAc,KAAK7B,SAAnB,EAA8B;AAC5BjD,gBAAI,CAAC+E,MAAL,CAAY,CAAC,IAAIC,IAAJ,CAAS,KAAK/B,SAAL,CAAe6B,CAAf,EAAkBG,IAA3B,CAAD,EAAmC,KAAKhC,SAAL,CAAe6B,CAAf,EAAkBI,KAArD,CAAZ;AACD;;AAED,cAAMzF,OAAO,GAAG;AACdiE,kBAAM,EAAE,GADM;AAEdyB,iBAAK,EAAE;AAAEC,0BAAY,EAAE;AAAhB;AAFO,WAAhB;AAKA,cAAIC,KAAK,GAAG,IAAI,KAAKjB,IAAL,CAAUO,aAAV,CAAwBW,SAA5B,CAAsCC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAtC,CAAZ;AAEAH,eAAK,CAACI,IAAN,CAAWzF,IAAX,EAAiBP,OAAjB;AACA9D,iBAAO,CAACC,GAAR,CAAY,kCAAZ;AACD;;;;;;;uBAhDUsI,mB,EAAmB,iJ;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA;AAAA;AAAA,O;AAAA,oF;AAAA,c;AAAA,a;AAAA,iE;AAAA;;;;;sEAAnBA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT/G,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;gBAG7B;;;;;;;;;;;;;;;;;;;;ACZH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAsBaqI,iB;;;;;YAAAA;;;;yBAAAA,iB;AAAiB,O;AAAA,iBAFjB,E;AAAE,gBARJ,CACP,4DADO,EAEP,qEAFO,CAQI;;;;0HAEFA,iB,EAAiB;AAAA,uBAb1B,mFAa0B,EAZ1B,sFAY0B;AAZP,kBAGnB,4DAHmB,EAInB,qEAJmB,CAYO;AARb,kBAGb,mFAHa,EAIb,sFAJa;AAQa,O;AAJP,K;;;;;sEAIVA,iB,EAAiB;cAf7B,sDAe6B;eAfpB;AACR5I,sBAAY,EAAE,CACZ,mFADY,EAEZ,sFAFY,CADN;AAKRF,iBAAO,EAAE,CACP,4DADO,EAEP,qEAFO,CALD;AASRpC,iBAAO,EAAE,CACP,mFADO,EAEP,sFAFO,CATD;AAaRuC,mBAAS,EAAE;AAbH,S;AAeoB,Q;;;;;;;;;;;;;;;;;;ACtB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa4I,kB;AAQX,kCACUxB,aADV,EAC2C;AAAA;;AAAjC,aAAAA,aAAA,GAAAA,aAAA;AAGR,aAAKC,IAAL,GAAY,KAAKD,aAAL,CAAmBE,SAAnB,EAAZ;AACA,aAAKD,IAAL,CAAUE,MAAV,CAAiBC,IAAjB,CAAsB,SAAtB,EAAiC;AAAC,sBAAY,CAAC,WAAD,EAAc,OAAd,CAAb;AAAqCC,kBAAQ,EAAE,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB;AAA/C,SAAjC;AACD;;;;mCAEO,CAAW;AAElB;;;;;;sCAGa;AACZ;AACA,eAAKN,IAAL,CAAUE,MAAV,CAAiBC,IAAjB,CAAsB,SAAtB,EAAiC;AAAC,wBAAY,CAAC,WAAD,EAAc,OAAd,CAAb;AAAqCC,oBAAQ,EAAE,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB;AAA/C,WAAjC;AACD,S,CAED;;AACA;;;;;;;oCAIoB;AAElB,cAAI1E,IAAI,GAAG,IAAI,KAAKoE,IAAL,CAAUO,aAAV,CAAwBC,SAA5B,EAAX;AACA5E,cAAI,CAAC6E,SAAL,CAAe,MAAf,EAAuB,MAAvB;AACA7E,cAAI,CAAC6E,SAAL,CAAe,QAAf,EAAyB,MAAzB;AACA7E,cAAI,CAAC6E,SAAL,CAAe,QAAf,EAAyB,MAAzB;AACA7E,cAAI,CAAC6E,SAAL,CAAe,QAAf,EAAyB,MAAzB;AACA7E,cAAI,CAAC6E,SAAL,CAAe,QAAf,EAAyB,SAAzB;;AAEA,eAAK,IAAIC,CAAT,IAAc,KAAK1J,IAAnB,EAAyB;AACvB4E,gBAAI,CAAC+E,MAAL,CAAY,CAAC,IAAIC,IAAJ,CAAS,KAAK5J,IAAL,CAAU0J,CAAV,EAAaG,IAAtB,CAAD,EAA8B,KAAK7J,IAAL,CAAU0J,CAAV,EAAaI,KAA3C,EAAkD,KAAKjK,IAAL,CAAU6J,CAAV,EAAaI,KAA/D,EAAsE,KAAKhK,IAAL,CAAU4J,CAAV,EAAaI,KAAnF,EAA0F,KAAK/J,OAAL,CAAa2J,CAAb,EAAgBI,KAA1G,CAAZ;AACD;;AAED,cAAMzF,OAAO,GAAG;AACdiE,kBAAM,EAAE,GADM;AAEdyB,iBAAK,EAAE;AAAEC,0BAAY,EAAE;AAAhB;AAFO,WAAhB;AAKA,cAAIC,KAAK,GAAG,IAAI,KAAKjB,IAAL,CAAUO,aAAV,CAAwBW,SAA5B,CAAsCC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAtC,CAAZ;AAEAH,eAAK,CAACI,IAAN,CAAWzF,IAAX,EAAiBP,OAAjB;AACA9D,iBAAO,CAACC,GAAR,CAAY,qCAAZ;AACD;;;;;;;uBArDU+J,kB,EAAkB,iJ;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,oF;AAAA,c;AAAA,a;AAAA,gE;AAAA;;;;;sEAAlBA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTxI,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;gBAG5B;;;gBACA;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;ACfH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQauI,kB;AAIX,oCAAc;AAAA;;AACZ,aAAK/D,MAAL,GAAcA,MAAd;AACA;;;;oCAEU;AACV,iBAAO,KAAKA,MAAZ;AACD;;;;;;;uBAVU+D,kB;AAAkB,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFjB;;;;;sEAEDA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACVvJ,oBAAU,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;ACR/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sE,CAGA;;;QAQawJ,a;;;;;YAAAA;;;;yBAAAA,a;AAAa,O;AAAA,gBAJf,CACP,4DADO,CAIe;;;;0HAAbA,a,EAAa;AAAA,kBAHtB,4DAGsB;AAAA,O;AAHV,K;;;;;sEAGHA,a,EAAa;cANzB,sDAMyB;eANhB;AACR/I,sBAAY,EAAE,EADN;AAERF,iBAAO,EAAE,CACP,4DADO;AAFD,S;AAMgB,Q;;;;;;;;;;;;;;;;;;ACX1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGakJ,S;;;;;;;kCACDC,K,EAAe;AACvB,iBAAOC,IAAI,CAACC,KAAL,CAAWF,KAAK,GAAG,GAAnB,IAA0B,GAAjC;AACD;;;;;;;uBAHUD,S;AAAS,K;;;;YAATA,S;AAAS;;;;;sEAATA,S,EAAS;cADrB,kDACqB;eADhB;AAACvE,cAAI,EAAE;AAAP,S;AACgB,Q;;;;;;;;;;;;;;;;;;ACHtB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM2E,WAAW,GAAG;AACzB1I,gBAAU,EAAE,KADa;AAGzB;AACA7C,YAAM,EAAE;AAJiB,KAApB;AAOP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AClBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAY6C,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyB2I,eAAzB,CAAyC,yDAAzC,WACS,UAAA/F,GAAG;AAAA,aAAIzE,OAAO,CAACE,KAAR,CAAcuE,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { StoreInterface, ResultInterface, StoreResultInterface } from '../interfaces/interface';\nimport { Result } from '../classes/result/result';\nimport { Store } from '../classes/store/store';\nimport { CountyStats } from '../classes/county-stats/county-stats';\n\n// Provides HTTP client used to make HTTP requests within the Angular application\n// Returns Observables (can be synchronous), not Promises (always asynchronous)\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst API_URL = environment.apiUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  \n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  }\n\n  constructor(\n    private http: HttpClient\n    ) { }\n\n  /**\n   * Creates new check-in for specific store ID and sends to API as POST request\n   * @param storeId ID of the store that the check-in occurs for\n   * @returns Observable \n   */\n  public createCheckIn(storeId: string, busy: number, line: number, hygiene: number, mask: number): Observable<Object> {\n    let params = new HttpParams();\n    params = params\n              .set('storeId', storeId.toString())\n              .set('busy', busy.toString())\n              .set('line', line.toString())\n              .set('hygiene', hygiene.toString())\n              .set('mask', mask.toString());\n    return this.http\n      .post(API_URL + '/checkin?' + params.toString(),{}, this.httpOptions)\n      .pipe(\n        tap(_ => console.log(\"API: check in from \" + storeId)),\n        catchError(error => throwError(error.message || error))\n      );\n  }\n\n  /**\n   * Gets all nearby stores from backend via GET request\n   * @param location inputted by user\n   * @returns result as observable\n   */\n  public getNearbyStores(location: string): Observable<ResultInterface> {\n    const url = API_URL + '/stores?location=' + location;\n    // const url = API_URL + '/stores';\n    return this.http\n      .get<ResultInterface>(url)\n      .pipe(\n        map((res: any) => res as ResultInterface),\n        tap(_ => console.log(\"API: fetch nearby stores for location \" + location)),\n        catchError(error => throwError((error.status + \" \" + error.statusText) || error))\n      );\n  }\n\n  /**\n   * Gets current store by ID, requires mapping because JSON doesn't match \n   * interface typing\n   * @param id ID of the store to fetch store from\n   * @returns store of given ID as observable\n   */\n  public getStoreById(id: string) : Observable<StoreResultInterface> {\n    const url = API_URL + '/store?id=' + id;\n    // const url = API_URL + '/store';\n    return this.http\n      .get<StoreResultInterface>(url)\n      .pipe(\n        map((res: any) => res as StoreResultInterface),\n        tap(_ => console.log('API: fetched store id ' + id)),\n        catchError(error => throwError((error.status + \" \" + error.statusText) || error))\n      )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LandingComponent } from './components/landing/landing.component';\nimport { ResultComponent } from './components/result/result.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { StoreComponent } from './components/store/store.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { FeedbackFormsComponent } from './components/feedback-forms/feedback-forms.component';\n\nconst routes: Routes = [\n  { \n    path: '', \n    component: LandingComponent \n  },\n  {\n    path: 'result/:location', \n    component: ResultComponent, \n  },\n  { \n    path: 'store/:id', \n    component: StoreComponent,\n  },\n  { \n    path: 'about', \n    component: AboutComponent \n  },\n  {\n    path: \"feedback\",\n    component: FeedbackFormsComponent \n  },\n  { \n    path: \"**\", \n    component: PageNotFoundComponent \n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n// Custom components\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GoogleMapsModule } from '@angular/google-maps'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule }   from '@angular/forms';\nimport { GoogleChartModule } from './google-chart/google-chart.module';\nimport { AppComponent } from './components/app.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { ResultComponent } from './components/result/result.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { StoreComponent } from './components/store/store.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { CheckInModalComponent } from './components/check-in-modal/check-in-modal.component';\nimport { FeedbackFormsComponent } from './components/feedback-forms/feedback-forms.component';\n\n// Material Angular components\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n// Services\nimport { ApiService } from './api/api.service';\n\n// Pipes\nimport { RoundPipe } from './pipes/round.pipe';\nimport { HttpErrorComponent } from './components/http-error/http-error.component';\nimport { SearchBarComponent } from './components/search-bar/search-bar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingComponent,\n    ResultComponent,\n    PageNotFoundComponent,\n    StoreComponent,\n    AboutComponent,\n    FooterComponent,\n    CheckInModalComponent,\n    RoundPipe,\n    HttpErrorComponent,\n    SearchBarComponent,\n    FeedbackFormsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatSliderModule,\n    MatIconModule,\n    MatTooltipModule,\n    HttpClientModule,\n    FormsModule,\n    MatProgressSpinnerModule,\n    GoogleChartModule,\n    GoogleMapsModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent],\n  // Set of components to compile when NgModule is defined to be\n  // dynamically loaded into view\n  entryComponents: [CheckInModalComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"about\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>ABOUT</h1>\n            <p>Learn more about this tool, its developers, and its usages.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2>Philosophy</h2>\n            <div class=\"box\">\n                <p>\n                    ShopSafe is a tool designed to help ease the decision fatigue that comes with \n                    deciding what is the safest place to go shopping during COVID-19. The purpose \n                    of this tool is to provide a crowdsourced method of evaluating the safety of \n                    a grocery store to give users a more informed shopping experience.\n   \n                </p>\n            </div>\n        </div>\n\n        <div class=\"section\">\n            <h2>Instructions</h2>\n            <div class=\"box\">\n                <p>\n                    To use Shopsafe, enter an address <b>within the United States</b> to find a list of\n                    grocery stores rendered for each specific location. Click on each location to see the\n                    Shopsafe Score, county COVID-19 statistics, and check-in statistics for each location.\n                    Make sure to check in by clicking on the check-in button and submitting your review in \n                    order to help refine the ShopSafe Score.\n                </p>\n            </div>\n        </div>\n\n        <div class=\"section\">\n            <h2>Usage</h2>\n            <div class=\"box\">\n                <p>\n                    This tool is meant to be used in concurrence with good judgement and awareness \n                    of local regulations. The ShopSafe Score is calculated using the check-in and \n                    county statistics based on user input and the New York Times COVID-19 dataset. \n                    That is to say, this is not a deterministic metric, but rather a decision-making tool.\n                </p>\n            </div>\n        </div>\n\n        <div class=\"section\">\n            <h2>Creators</h2>\n            <div class=\"box\">\n                <p>\n                    This application is created by <a href=\"mailto:gabrielstewart@google.com\">Gabriel Stewart</a>, \n                    <a href=\"mailto:raulpalomo@google.com\">Raul Palomo</a>, and <a href=\"mailto:caroljli@google.com\">Carol Li</a> \n                    under their 2020 Google Internship. Inquiries can be sent to them.\n                </p>\n            </div>\n        </div>\n\n        <div class=\"section\">\n            <h2>License and Attributions</h2>\n            <div class=\"box\">\n                <p>\n                    Copyright 2020 Google LLC. Licensed under the Apache License, Version 2.0 (the \"License\"); you \n                    may not use this file except in compliance with the License. You may obtain a copy of the License \n                    at https://www.apache.org/licenses/LICENSE-2.0. This product uses the FCC Data API but is not\n                    endorsed or certified by the FCC.\n                </p>\n            </div>\n        </div>\n        \n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from \"../../environments/environment\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'shopsafe-frontend';\n\n  ngOnInit() {\n    if (environment.production) {\n      if (location.protocol === 'http:') {\n        window.location.href = location.href.replace('http', 'https');\n      }\n    }\n  }\n}\n","<router-outlet></router-outlet>\n<app-footer></app-footer>","import { Component, OnInit, Input, Injectable } from '@angular/core';\nimport { ApiService } from '../../api/api.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-check-in-modal',\n  templateUrl: './check-in-modal.component.html',\n  styleUrls: ['./check-in-modal.component.css']\n})\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n\nexport class CheckInModalComponent implements OnInit {\n\n  constructor(\n    private apiService: ApiService,\n    private dialogRef: MatDialogRef<CheckInModalComponent>,\n    private route: ActivatedRoute,\n    \n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  static storeId: string;\n  busy = '';\n  line = '';\n  hygiene = '';\n  mask = '';\n\n  /**\n   * Sets ID variable of check in modal based on store id.\n   * @param id of the current store\n   */\n  public static setId(id: string) {\n    this.storeId = id;\n    console.log(\"CLIENT: store id is \" + this.storeId);\n  }\n\n  /**\n   * Sends check-in user data to API\n   * @param id ID of store that check-in is for\n   * @param busy user input busy score\n   * @param line user input line score\n   * @param hygiene user input hygiene score\n   * @param mask user input mask score\n   */\n  checkIn(): void {\n    console.log(\"CLIENT: check-in api call\");\n    this.apiService.createCheckIn(CheckInModalComponent.storeId, Number(this.busy), Number(this.line), Number(this.hygiene), Number(this.mask))\n      .subscribe();\n    this.dialogRef.close();\n  }\n\n}\n","<div id=\"check-in-modal\">\n    <h2 class=\"title-text\">Check-In Form</h2>\n    <p>Use the sliders to input the statuses of the store to check in. High values indicates a good status, and low values indicate a bad status.</p>\n    <div class=\"modal-content\">\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Busy &nbsp; \n                <a \n                matTooltip=\"How crowded is it inside the store? Essentially, is there \n                            enough space to social distance, maintain 6 feet? 1 indicates \n                            very busy (bad), and 10 indicates not busy at all (good)\">\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n            <div class=\"slider\" class=\"right-text grey-text\">\n              <i class=\"far fa-frown\"></i>\n              &nbsp;\n              <mat-slider\n                  [(ngModel)]=\"busy\"\n                  min=\"0\" \n                  max=\"10\" \n                  step=\"1\" \n                  thumbLabel tickInterval=\"1\"\n              ></mat-slider>\n              <i class=\"far fa-smile\"></i>\n            </div>\n        </div>\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Line &nbsp; \n                <a \n                matTooltip=\"How long is the line to get into the store from the outside?\n                            1 indicates very long (bad), and 10 indicates not long at all (good)\">\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n             <div class=\"slider\" class=\"right-text grey-text\">\n              <i class=\"far fa-frown\"></i>\n              &nbsp;\n              <mat-slider\n                  [(ngModel)]=\"line\"\n                  min=\"0\" \n                  max=\"10\" \n                  step=\"1\" \n                  thumbLabel tickInterval=\"1\"\n              ></mat-slider>\n              <i class=\"far fa-smile\"></i>\n            </div>\n        </div>\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Hygiene &nbsp; \n                <a \n                matTooltip=\"How clean is the store overall? Are the shared carts, \n                            baskets, and surfaces sanitized? 1 indicates poor hygiene \n                            (bad), and 10 indicates good hygiene (good)\"\n                >\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n            <div class=\"slider\" class=\"right-text grey-text\">\n              <i class=\"far fa-frown\"></i>\n              &nbsp;\n              <mat-slider\n                  [(ngModel)]=\"hygiene\"\n                  min=\"0\" \n                  max=\"10\" \n                  step=\"1\" \n                  thumbLabel tickInterval=\"1\"\n              ></mat-slider>\n              <i class=\"far fa-smile\"></i>\n            </div>\n        </div>\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Mask &nbsp; \n                <a \n                matTooltip=\"How strict is the store with masks? Are the customers and workers \n                            wearing masks properly? 1 indicates no to little mask policy \n                            and presence (bad), and 10 indicates excellent mask usage (good)\">\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n             <div class=\"slider\" class=\"right-text grey-text\">\n              <i class=\"far fa-frown\"></i>\n              &nbsp;\n              <mat-slider\n                  [(ngModel)]=\"mask\"\n                  min=\"0\" \n                  max=\"10\" \n                  step=\"1\" \n                  thumbLabel tickInterval=\"1\"\n              ></mat-slider>\n              <i class=\"far fa-smile\"></i>\n            </div>\n        </div>\n    </div>\n    <button id='submit-check-in-button' (click) = \"checkIn()\">CHECK IN AT THIS STORE</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-feedback-forms',\n  templateUrl: './feedback-forms.component.html',\n  styleUrls: ['./feedback-forms.component.css']\n})\nexport class FeedbackFormsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"title\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>FEEDBACK FORMS</h1>\n            <p>Help us improve ShopSafe by giving us feedback!</p>\n        </div>\n\n        <div class=\"section\">\n            <h2>User Experience Form</h2>\n            <div class=\"box\">\n                <p>\n                   Let us know what your experience with ShopSafe was like by filling out this\n                   <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSeagc76SWGCG8LTBVM_ZrWZAjAoGeH2fjI2fWR15o9Z-x7J-Q/viewform?usp=sf_link\">\n                    form\n                    </a>. \n                </p>\n            </div>\n        </div>\n\n        <div class=\"section\">\n            <h2>Bug Reporting</h2>\n            <div class=\"box\">\n                <p>\n                    We make mistakes, help us fix them by reporting them \n                    <a href=\"https://docs.google.com/forms/d/e/1FAIpQLScJviEPTKH7Z9aITFulbhgrAc5v3GGlW24ttIoHU-2pe7Fz4g/viewform?usp=sf_link\">\n                        here\n                    </a>. \n                </p>\n            </div>\n        </div>\n        \n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer id=\"footer\">\n    <div class=\"bottom-nav\">\n        <ul>\n            <li><a [routerLink]=\"['/']\">Home</a></li>\n            <li><a [routerLink]=\"['/about']\">About</a></li>\n            <li><a [routerLink]=\"['/feedback']\"><i class=\"fas fa-bug\"></i> Feedback</a></li>\n        </ul>\n        <li class=\"copyright\">\n            Made with 😷 by Raul Palomo, Gabriel Stewart, Carol Li\n        </li>\n    </div>\n\n</footer>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-http-error',\n  templateUrl: './http-error.component.html',\n  styleUrls: ['./http-error.component.css']\n})\nexport class HttpErrorComponent implements OnInit {\n\n  @Input() httpErrorMessage: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"http-error\" class=\"segment\">\n    <div class=\"segment-text\">\n        <h1>HTTP Error</h1>\n        <p>Uh oh, it seems that there's a problem with calling our server. Click <a href=\"/\">here</a> to return to the landing page.</p>\n        <div class=\"error-wrapper\">\n          <p>{{ httpErrorMessage }}</p>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../api/api.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n\n  location: string = '';\n\n  constructor(\n    private router: Router,\n    public zone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  getNearbyStores(): void {\n    this.router.navigate(['/result', this.location]);\n    console.log(\"CLIENT: redirecting to results\");\n  }\n\n  /**\n   * Fetches address from search bar autocomplete by parsing returned \n   * place array for 'formatted_address' value\n   * @param place array emitted from setAddress event from search bar component\n   */\n  getAddress(place: object): void {\n    this.zone.run(() => this.location = place['formatted_address']);\n    this.getNearbyStores();\n  }\n\n}\n","<div id=\"landing\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>ShopSafe</h1>\n            <p>Information tool for safe, simple shopping during COVID-19.</p>\n            <br/>\n            <a [routerLink]=\"['/about']\">Learn more about this tool &nbsp; <i class=\"fas fa-long-arrow-alt-right\"></i></a>\n        </div>\n        <app-search-bar (setAddress)=\"getAddress($event)\"></app-search-bar>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"page-not-found\" class=\"segment\">\n    <div class=\"segment-text\">\n        <h1>404 Page Not Found</h1>\n        <p>Sorry you couldn't find what you were looking for! Click <a href=\"/\">here</a> to return to the landing page.</p>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiService } from '../../api/api.service';\nimport { Result } from '../../classes/result/result';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleMap } from '@angular/google-maps';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.css']\n})\n\nexport class ResultComponent implements OnInit {\n  result: Result;\n  location: string;\n  isLoaded: boolean;\n  httpError: boolean;\n  httpErrorMessage: string;\n\n  @ViewChild(GoogleMap, { static: false }) map: GoogleMap; // In-template Google Map\n  markers = []; // Array of store markers rendered in Google Map\n  center: google.maps.LatLngLiteral; // Current center of Google Map\n  styles: google.maps.MapTypeStyle[] = [\n    {\n      featureType: \"administrative\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          visibility: \"off\"\n        }\n      ]\n    },\n    {\n      featureType: \"poi\",\n      stylers: [\n        {\n          visibility: \"off\"\n        }\n      ]\n    },\n    {\n      featureType: \"road\",\n      elementType: \"labels.icon\",\n      stylers: [\n        {\n          visibility: \"off\"\n        }\n      ]\n    },\n    {\n      featureType: \"transit\",\n      stylers: [\n        {\n          visibility: \"off\"\n        }\n      ]\n    }\n  ]; // Custom map styling\n  options: google.maps.MapOptions = {\n    disableDefaultUI: true,\n    styles: this.styles,\n  }; // Options for Google Map rendered in template\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoaded = false; // Defaults to API not called yet\n    this.httpError = false; // Defaults to no HTTP error\n    this.location = this.route.snapshot.paramMap.get('location').toString();\n    this.getResult();\n  }\n\n  /**\n   * Calls API to get result and subscribes local variables using data returned\n   * in the Observable from the HTTP response.\n   */\n  getResult(): void {\n    console.log('CLIENT: results api call at ' + this.location);\n    this.apiService.getNearbyStores(this.location)\n      .subscribe(data => \n        this.result = {\n          stores: (data as any).stores,\n          latLng: (data as any).latLng\n        },\n        err => {\n          console.log(err),\n          this.httpError = true,\n          this.httpErrorMessage = err\n        },\n        () => {\n          this.initTemplate()\n        }\n      );\n  }\n\n  /**\n   * Initializes component by using data returned from API call.\n   * Sets isLoaded boolean to true, as the function can only be called when there\n   * is a successful response.\n   */\n  initTemplate(): void {\n    // Sets loaded state to true\n    this.isLoaded = true;\n    console.log(\"CLIENT: API call finished\");\n\n    // Add all map markers\n    this.addMarkers();\n    console.log(\"CLIENT: added markers\");\n\n    // Set center of map to latLng of user location\n    this.center = {\n      lat: this.result.latLng.latitude,\n      lng: this.result.latLng.longitude\n    };\n  }\n\n  /**\n   * Populates map with markers indicating score range based on latLng geolocation\n   * of each rendered grocery store.\n   * \n   * Red markers: [0, 3.3], yellow markers: (3.3, 6.6], greeen markers: (6.6, 10]\n   */\n  addMarkers(): void {\n    var safeIcon = \"http://maps.google.com/mapfiles/ms/icons/green.png\";\n    var cautionIcon = \"http://maps.google.com/mapfiles/ms/icons/yellow.png\";\n    var unsafeIcon = \"http://maps.google.com/mapfiles/ms/icons/red.png\";\n    var currIcon = '';\n\n    var userIcon = \"https://img.icons8.com/material-two-tone/24/000000/street-view.png\";\n\n    // Adds current user query location to markers\n    this.markers.push({\n      position: {\n        lat: this.result.latLng.latitude,\n        lng: this.result.latLng.longitude\n      },\n      title: \"Your location!\",\n      options: {\n        icon: { url: userIcon }\n      }\n    })\n\n    // Adds each stores as marker\n    for (let store of this.result.stores) {\n      // Set icon according to colour\n      if (store.score <= 3.3) {\n        currIcon = unsafeIcon;\n      } else if (store.score <= 6.6) {\n        currIcon = cautionIcon;\n      } else {\n        currIcon = safeIcon;\n      }\n\n      this.markers.push({\n        position: {\n          lat: store.latitude,\n          lng: store.longitude\n        },\n        title: store.name,\n        info: store.score,\n        options: {  \n          icon: { url: currIcon } \n        }\n      })\n    }\n  }\n\n  /**\n   * Recenters map based on latLng\n   * @param lat latitude to be recentered to\n   * @param lng longitude to be recentered to\n   */\n  recenterMap(lat: number, lng: number): void {\n    this.center = {\n      lat: lat,\n      lng: lng\n    };\n    this.map.center = this.center;\n  }\n}","<div *ngIf=\"isLoaded && !httpError\" id=\"result\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>{{ location }}</h1>\n            <p>Showing all grocery stores for your location. The map is centered to your current location.</p>\n            <p><button class=\"maps-button\" (click)=\"recenterMap(result.latLng.latitude, result.latLng.longitude)\"><i class=\"fas fa-location-arrow\"></i> &nbsp; RECENTER MAP</button></p>\n        </div>\n        <div id=\"map\">\n          <google-map\n            height=\"500px\"\n            width=\"100%\"\n            [zoom]=\"14\"\n            [center]=\"center\"\n            [options]=\"options\"\n          >\n            <map-marker\n              *ngFor=\"let marker of markers\"\n              [position]=\"marker.position\"\n              [title]=\"marker.title\"\n              [options]=\"marker.options\"\n            >\n            </map-marker>\n          </google-map>\n        </div>\n        <br/>\n        <div class=\"stores-list-heading\">\n            <h2 class=\"left-text\">Local Grocery Stores</h2>\n            <p class=\"right-text subtext\">Click on a store to view store statistics, click on the <i class=\"fas fa-map-marker-alt\"></i> to view on map</p>\n        </div>\n        <div class=\"stores-list\" *ngFor=\"let store of result.stores\">\n            <div class=\"stores-list-item\">\n              <div class=\"row\">\n                <div class=\"left-text markers\">\n                    <a class=\"location-icon\" (click)=\"recenterMap(store.latitude, store.longitude)\"><i class=\"fas fa-map-marker-alt\"></i></a> &nbsp;\n                    <a \n                        class=\"stores-list-location\" \n                        [routerLink]=\"['/store', store.id]\"\n                    >\n                        {{ store.name }}\n                    </a>\n                    <a class=\"rating\">{{ store.score | round }}/10</a>\n                </div>\n                <div class=\"right-text\">\n                    <p class=\"address\">{{ store.address }}</p>\n                </div>\n              </div>\n              <br/>\n              <hr/>\n              <div class=\"row\">\n                <div class=\"right-text\">\n                  <a class=\"tag\">{{ store.distance | round }} mi</a>\n                    <a class=\"tag\">\n                      5/10 &nbsp;\n                      <a class=\"tooltip\"\n                        matTooltip=\"Google Review\">\n                        <i class=\"far fa-question-circle\"></i>\n                      </a>\n                  </a>\n                </div>\n              </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"!isLoaded && !httpError\" class=\"loading-screen\" color=\"grey\">\n  <mat-spinner></mat-spinner>\n  <br/>\n  <p>Fetching Results...</p>\n</div>\n\n<app-http-error *ngIf=\"httpError\" [httpErrorMessage]='httpErrorMessage'></app-http-error>","import { Component, ViewChild, EventEmitter, Output, OnInit, AfterViewInit } from '@angular/core';\nimport { } from 'googlemaps';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.css']\n})\nexport class SearchBarComponent implements OnInit {\n\n  @Output() setAddress: EventEmitter<any> = new EventEmitter();\n  @ViewChild('address') address: any;\n\n  autocompleteInput: string;\n  queryWait: boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  \n  ngAfterViewInit(): void {\n    this.getPlace();\n  }\n\n  /**\n   * Fetches places based on changing input values using Google Places API autocomplete feature.\n   * Restricted to the US for geocoded locations (ie. not corporate)\n   */\n  getPlace(): void {\n    // Check if API is loaded\n    if (google.maps.places) {\n      this.queryWait = true;\n    } else {\n      this.queryWait = false;\n    }\n\n    const autocomplete = new google.maps.places.Autocomplete(this.address.nativeElement,\n      {\n          componentRestrictions: { country: 'US' },\n          // Restricted to addresses (ie. not establishments)\n          types: ['geocode']\n      });\n    \n    google.maps.event.addListener(autocomplete, 'place_changed', () => {\n      const place = autocomplete.getPlace();\n      this.invokeEvent(place);\n    });\n  }\n\n  /**\n   * Invokes EventEmitter to toggle changes for autocomplete.\n   * @param place contained value within event to be emitted\n   */\n  invokeEvent(place: Object): void {\n    this.setAddress.emit(place);\n  }\n\n}\n"," <form>\n  <div class=\"input-container\">\n    <mat-icon class=\"search-icon\">search</mat-icon>\n    <input\n      [ngStyle]=\"{'disabled': (queryWait) ? 'false' : 'true'}\"\n      #address\n      class=\"input-field\"\n      type=\"text\"\n      placeholder=\"ENTER YOUR LOCATION TO FIND NEARBY GROCERY STORES\"\n      name=\"search\"\n      [(ngModel)]=\"autocompleteInput\"\n    >\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { CheckInModalComponent } from '../check-in-modal/check-in-modal.component';\nimport { ApiService } from '../../api/api.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store } from 'src/app/classes/store/store';\nimport { CountyStats } from 'src/app/classes/county-stats/county-stats';\nimport { DataPoint } from '../../classes/data-point/data-point';\n\n@Component({\n  selector: 'app-store', \n  templateUrl: './store.component.html',\n  styleUrls: ['./store.component.css']\n})\nexport class StoreComponent implements OnInit {\n  store: Store;\n  countyStats: CountyStats;\n  latLng: string;\n  isLoaded: boolean;\n  storeId: string;\n  httpError: boolean;\n  httpErrorMessage: string;\n  proportion: number;\n\n  covidData: DataPoint[];\n  maskData: DataPoint[];\n  busyData: DataPoint[];\n  lineData: DataPoint[];\n  hygieneData: DataPoint[];\n\n  constructor(\n    public matDialog: MatDialog,\n    private apiService: ApiService,\n    private route: ActivatedRoute\n    ) { }\n\n  /**\n   * Runs when component is loaded\n   */\n  ngOnInit(): void {\n    // Defaults to API not called yet\n    this.isLoaded = false;\n    // Defaults to no HTTP error\n    this.httpError = false;\n    this.getStore();\n  }\n\n  /**\n   * Calls API to get store and subscribes local variables using data returned in the \n   * Observable from the HTTP response.\n   */\n  getStore(): void {\n    const id = this.route.snapshot.paramMap.get('id').toString();\n    this.storeId = id;\n    this.apiService.getStoreById(id)\n      .subscribe(\n        (res: any) => {\n          this.store = res.store,\n          this.countyStats = res.countyStats,\n          this.covidData = this.countyStats.covidData,\n          this.maskData = res.maskData,\n          this.busyData = res.busyData,\n          this.lineData = res.lineData,\n          this.hygieneData = res.hygieneData\n        },\n        err => {\n          console.log(err),\n          this.httpError = true,\n          this.httpErrorMessage = err\n        },\n        () => {\n          this.initTemplate();\n        }\n      );\n  }\n\n  /**\n   * Initializes component by using data returned from API call.\n   * Sets isLoaded boolean to true, as the function can only be called when there\n   * is a successful response.\n   */\n  initTemplate(): void {\n    // Sets loaded state to true\n    this.isLoaded = true;\n    console.log(\"CLIENT: API call finished\");\n\n    // Round proportion to 2 decimal places\n    this.proportion = this.countyStats.cases / this.countyStats.population * 100;\n    console.log(\"CLIENT: calculated percentage as \" + this.proportion);\n  }\n  \n  /**\n   * Opens check in modal dialog using check in modal component.\n   * Opens new check in modal on screen.\n   */\n  openModal() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.id = \"check-in-modal\";\n    dialogConfig.height = \"510px\";\n    dialogConfig.width = \"495px\";\n    CheckInModalComponent.setId(this.storeId);\n    const modalDialog = this.matDialog.open(CheckInModalComponent, dialogConfig);\n    \n    // Updates changes in place after modal closes\n    modalDialog.afterClosed().subscribe(() => { this.getStore() });\n  }\n\n  /**\n   * Opens Google Maps link using Places ID of the store.\n   */\n  redirectToMap() {\n    const url = 'https://www.google.com/maps/place/?q=place_id:' + this.storeId;\n    window.open(url, \"_blank\");\n  }\n\n  /**\n   * Redirects to result page (previous page).\n   */\n  goBack() {\n    window.history.back();\n  }\n\n}\n","<div *ngIf=\"isLoaded && !httpError\" id=\"store\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <a class=\"back-link\" (click)=\"goBack()\"><i class=\"fas fa-long-arrow-alt-left\"></i> &nbsp; Back to Results</a>\n            <br/>\n            <h1>{{ store.name }}</h1>\n            <p>{{ store.address }}</p>\n            <p>\n                <button class=\"maps-button\" (click)=\"redirectToMap()\"><i class=\"fas fa-map-marked-alt\"></i> &nbsp; VIEW ON MAPS</button>\n                <button id='check-in-button' (click)=\"openModal()\"><i class=\"fas fa-pencil-alt\"></i> &nbsp; CHECK IN AT THIS STORE</button>\n            </p>\n        </div>\n        <div class=\"stat-bar-wrapper\">\n            <div class=\"stat-bar\">\n                <div class=\"stat-elem\">\n                    <a class=\"stat-obj\">CHECKED IN</a>\n                    <p>{{ store.checkInCount }}</p>\n                </div>\n                <div class=\"stat-elem\" style=\"text-align: center;\">\n                    <a class=\"stat-obj\">STATUS</a>\n                    <p [ngStyle]=\"{'color': (store.open) ? '#7AC665' : '#FF5151'}\"><b>{{ store.open ? 'OPEN' : 'CLOSED' }}</b></p>\n                </div>\n                <div class=\"stat-elem\" style=\"text-align: right; margin-top: -5px\">\n                    <a class=\"stat-obj\">SHOPSAFE SCORE</a>\n                    <p class=\"shopsafe-score\">{{ store.score | round }}/10</p>\n                </div>\n            </div>\n        </div>\n        \n        <br/><br/>\n        <div class=\"card\">\n          <div class=\"stat-bar-wrapper\">\n            <h2>Check-In Statistics for {{ store.name }}</h2>\n            <p>\n              Chart statistics represent check-in entries averaged per day. To view more about the statistics, \n              hover over each of the most current values of the statistics below.\n            </p>\n            <div class=\"stat-bar-secondary\">\n              <div class=\"stat-elem-quarter\" style=\"text-align: left\">\n                  <a class=\"stat-obj\"\n                  matTooltip=\"How strict is the store with masks? Are the customers and workers \n                              wearing masks properly? 1 indicates no to little mask policy \n                              and presence (bad), and 10 indicates excellent mask usage (good)\">\n                    MASK\n                  </a>\n                  <p><b>{{ store.checkInCount == 0 ? '—' : store.masks | round }}</b>/10</p>\n              </div>\n              <div class=\"stat-elem-quarter\" style=\"text-align: center;\">\n                  <a class=\"stat-obj\"\n                  matTooltip=\"How crowded is it inside the store? Essentially, is there \n                              enough space to social distance, maintain 6 feet? 1 indicates \n                              very busy (bad), and 10 indicates not busy at all (good)\">\n                    BUSY\n                  </a>\n                  <p><b>{{ store.checkInCount == 0 ? '—' : store.busy | round }}</b>/10</p>\n              </div>\n              <div class=\"stat-elem-quarter\" style=\"text-align: center;\">\n                  <a class=\"stat-obj\"\n                  matTooltip=\"How long is the line to get into the store from the outside?\n                              1 indicates very long (bad), and 10 indicates not long at all (good)\">\n                    LINE\n                  </a>\n                  <p><b>{{ store.checkInCount == 0 ? '—' : store.line | round }}</b>/10</p>\n              </div>\n              <div class=\"stat-elem-quarter\" style=\"text-align: right;\">\n                  <a class=\"stat-obj\"\n                  matTooltip=\"How clean is the store overall? Are the shared carts, \n                              baskets, and surfaces sanitized? 1 indicates poor hygiene \n                              (bad), and 10 indicates good hygiene (good)\">\n                    HYGIENE\n                  </a>\n                  <p><b>{{ store.checkInCount == 0 ? '—' : store.hygiene | round }}</b>/10</p>\n              </div>\n            </div>\n          </div>\n          <div id=\"line-chart\" class=\"chart\">\n            <app-line-chart [mask]='maskData' [busy]='busyData' [line]='lineData' [hygiene]='hygieneData'></app-line-chart>\n          </div>\n        </div>\n\n        <div class=\"card\">\n          <div class=\"stat-bar-wrapper\">\n              <h2>COVID-19 Statistics for {{ countyStats.countyName }} County</h2>\n              <div class=\"stat-bar-secondary\">\n                  <div class=\"stat-elem\">\n                      <a class=\"stat-obj\">TOTAL CASES</a>\n                      <p>{{ countyStats.cases }}</p>\n                  </div>\n                  <div class=\"stat-elem\" style=\"text-align: center;\">\n                      <a class=\"stat-obj\">TOTAL DEATHS</a>\n                      <p>{{ countyStats.deaths }}</p>\n                  </div>\n                  <div class=\"stat-elem\" style=\"text-align: right; margin-top: -5px\">\n                      <a class=\"stat-obj\">PERCENT AFFECTED</a>\n                      <p class=\"shopsafe-score\">{{ proportion | round }}%</p>\n                  </div>\n              </div>\n          </div>\n          <div id=\"covid-chart\" class=\"chart\">\n            <app-covid-chart [covidData]='covidData'></app-covid-chart>\n          </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"!isLoaded && !httpError\" class=\"loading-screen\" color=\"grey\">\n  <mat-spinner></mat-spinner>\n  <br/>\n  <p>Loading Store...</p>\n</div>\n\n<app-http-error *ngIf=\"httpError\" [httpErrorMessage]='httpErrorMessage'></app-http-error>","import { Component, OnInit, Input } from '@angular/core';\nimport { GoogleChartService } from  '../service/google-chart.service';\nimport { DataPoint } from '../../classes/data-point/data-point';\n\n@Component({\n  selector: 'app-covid-chart',\n  templateUrl: './covid-chart.component.html',\n  styleUrls: ['./covid-chart.component.css']\n})\nexport class CovidChartComponent implements OnInit {\n\n  private gLib: any;\n  @Input() covidData: DataPoint[];\n\n  constructor(\n    private gChartService: GoogleChartService\n  ) \n  {\n    this.gLib = this.gChartService.getGoogle();\n    this.gLib.charts.load('current', {'packages': ['corechart', 'table'], callback: this.drawChart.bind(this)});\n  }\n\n  ngOnInit(): void {}\n\n  /**\n   * Called when parameters are changed by the parent component.\n   */\n  ngOnChanges() {\n    // Updates chart with new parent input values\n    this.gLib.charts.load('current', {'packages': ['corechart', 'table'], callback: this.drawChart.bind(this)});\n  }\n\n  // TODO: custom colorization with options\n  /**\n   * Draws line chart and renders within template.\n   */\n  private drawChart() {\n\n    let data = new this.gLib.visualization.DataTable();\n    data.addColumn('date', 'Date');\n    data.addColumn('number', 'Cases');\n\n    console.log(this.covidData);\n\n    for (let i in this.covidData) {\n      data.addRow([new Date(this.covidData[i].date), this.covidData[i].value]);\n    }\n\n    const options = {\n      height: 600,\n      hAxis: { textPosition: 'none' }\n    }\n\n    let chart = new this.gLib.visualization.LineChart(document.getElementById('covid-chart'));\n\n    chart.draw(data, options);\n    console.log(\"CLIENT: covid map has been drawn\");\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ServiceModule } from './service/service.module';\nimport { LineChartComponent } from './line-chart/line-chart.component';\nimport { CovidChartComponent } from './covid-chart/covid-chart.component';\n\n\n@NgModule({\n  declarations: [\n    LineChartComponent,\n    CovidChartComponent,\n  ],\n  imports: [\n    CommonModule,\n    ServiceModule\n  ],\n  exports: [\n    LineChartComponent,\n    CovidChartComponent,\n  ],\n  providers: [],\n})\nexport class GoogleChartModule { }\n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { GoogleChartService } from  '../service/google-chart.service';\nimport { DataPoint } from '../../classes/data-point/data-point';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.css']\n})\nexport class LineChartComponent implements OnInit {\n\n  private gLib: any;\n  @Input() mask: DataPoint[];\n  @Input() busy: DataPoint[];\n  @Input() line: DataPoint[];\n  @Input() hygiene: DataPoint[];\n\n  constructor(\n    private gChartService: GoogleChartService,\n    )\n  {\n    this.gLib = this.gChartService.getGoogle();\n    this.gLib.charts.load('current', {'packages': ['corechart', 'table'], callback: this.drawChart.bind(this)});\n  }\n\n  ngOnInit(): void {}\n\n   /**\n   * Called when parameters are changed by the parent component.\n   */\n  ngOnChanges() {\n    // Updates chart with new parent input values\n    this.gLib.charts.load('current', {'packages': ['corechart', 'table'], callback: this.drawChart.bind(this)});\n  }\n\n  // TODO: custom colorization with options\n  /**\n   * Draws COVID-19 statistics line chart and renders within template.\n   * Assumes that all input arrays are the same length\n   */\n  private drawChart() {\n\n    let data = new this.gLib.visualization.DataTable();\n    data.addColumn('date', 'Date');\n    data.addColumn('number', 'Mask');\n    data.addColumn('number', 'Busy');\n    data.addColumn('number', 'Line');\n    data.addColumn('number', 'Hygiene');\n\n    for (let i in this.mask) {\n      data.addRow([new Date(this.mask[i].date), this.mask[i].value, this.busy[i].value, this.line[i].value, this.hygiene[i].value]);\n    }\n\n    const options = {\n      height: 600,\n      hAxis: { textPosition: 'none' }\n    }\n\n    let chart = new this.gLib.visualization.LineChart(document.getElementById('line-chart'));\n\n    chart.draw(data, options);\n    console.log(\"CLIENT: check-in map has been drawn\");\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ServiceModule } from './service.module';\n\ndeclare let google: any;\n\n@Injectable({\n  providedIn: ServiceModule\n})\nexport class GoogleChartService {\n\n  private google: any;\n\n  constructor() {\n    this.google = google;\n   }\n\n  getGoogle() {\n    return this.google;\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Contains Angular service utilized to access the Google Charts library\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ServiceModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'round'})\nexport class RoundPipe implements PipeTransform {\n  transform(input: number) {\n    return Math.round(input * 100) / 100;\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n  // URL of development API\n  apiUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}