{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/classes/county-stats/county-stats.ts","webpack:///src/app/classes/result/result.ts","webpack:///src/app/classes/store/store.ts","webpack:///src/app/components/about/about.component.ts","webpack:///src/app/components/about/about.component.html","webpack:///src/app/components/app.component.ts","webpack:///src/app/components/app.component.html","webpack:///src/app/components/check-in-modal/check-in-modal.component.ts","webpack:///src/app/components/check-in-modal/check-in-modal.component.html","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/landing/landing.component.ts","webpack:///src/app/components/landing/landing.component.html","webpack:///src/app/components/page-not-found/page-not-found.component.ts","webpack:///src/app/components/page-not-found/page-not-found.component.html","webpack:///src/app/components/result/result.component.ts","webpack:///src/app/components/result/result.component.html","webpack:///src/app/components/store/store.component.ts","webpack:///src/app/components/store/store.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","API_URL","apiUrl","ApiService","http","httpOptions","headers","storeId","busy","line","hygiene","mask","params","set","toString","post","pipe","_","console","log","error","message","location","url","get","res","store","providedIn","routes","path","component","AppRoutingModule","forRoot","imports","AppModule","declarations","providers","bootstrap","entryComponents","CountyStats","values","countyName","stateName","Object","assign","Result","Store","AboutComponent","selector","templateUrl","styleUrls","AppComponent","title","CheckInModalComponent","apiService","dialogRef","route","snapshot","paramMap","createCheckIn","Number","close","checkIn","FooterComponent","LandingComponent","router","resultComponent","navigate","callResult","getNearbyStores","PageNotFoundComponent","ResultComponent","stores","subscribe","data","result","countyStats","initResult","proportion","Math","round","cases","population","tempStores","push","name","address","score","reviewCount","status","latLng","masks","nearbyStores","deaths","StoreComponent","matDialog","document","getStore","getStoreById","latitude","longitude","dialogConfig","height","width","modalDialog","open","href","window","history","back","goBack","redirectToMap","openModal","Document","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { StoreInterface, ResultInterface, CountyStatsInterface } from '../interfaces/interface';\nimport { Result } from '../classes/result/result';\nimport { Store } from '../classes/store/store';\nimport { CountyStats } from '../classes/county-stats/county-stats';\n\n// Provides HTTP client used to make HTTP requests within the Angular application\n// Returns Observables (can be synchronous), not Promises (always asynchronous)\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst API_URL = environment.apiUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  \n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  }\n\n  constructor(\n    private http: HttpClient\n    ) { }\n\n  /**\n   * Creates new check-in for specific store ID and sends to API as POST request\n   * @param storeId ID of the store that the check-in occurs for\n   * @returns Observable \n   */\n  public createCheckIn(storeId: string, busy: number, line: number, hygiene: number, mask: number): Observable<Object> {\n    let params = new HttpParams();\n    params = params\n              .set('storeId', storeId.toString())\n              .set('busy', busy.toString())\n              .set('line', line.toString())\n              .set('hygiene', hygiene.toString())\n              .set('mask', mask.toString());\n    return this.http\n      .post(API_URL + '/checkin', params, this.httpOptions)\n      .pipe(\n        tap(_ => console.log(\"added new checkin\")),\n        catchError(error => throwError(error.message || error))\n      );\n  }\n\n  /**\n   * Gets all nearby stores from backend via GET request\n   * @param location inputted by user\n   * @returns result as observable\n   */\n  public getNearbyStores(location: string): Observable<ResultInterface> {\n    // const url = API_URL + '/stores/${location}';\n    // Uncomment above when location url is fetched\n    const url = API_URL + '/stores';\n    return this.http\n      .get<ResultInterface>(url)\n      .pipe(\n        map((res: any) => res as ResultInterface),\n        // map((res: any) => {\n        //   console.log(res);\n        //   return <ResultInterface> {\n            \n        //   }\n        // }),\n        tap(_ => console.log(\"API: fetch nearby stores for location \" + location)),\n        catchError(error => throwError(error.message || error))\n      );\n  }\n\n  /**\n   * Gets current store by ID, requires mapping because JSON doesn't match \n   * interface typing\n   * @param id ID of the store to fetch store from\n   * @returns store of given ID as observable\n   */\n  public getStoreById(id: string) : Observable<StoreInterface> {\n    const url = API_URL + '/store/${id}';\n    return this.http\n      .get<StoreInterface>(url)\n      .pipe(\n        map((res: any) => res.store as StoreInterface),\n        tap(_ => console.log('AP: fetched store id=${id}')),\n        catchError(error => throwError(error.message || error))\n      )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LandingComponent } from './components/landing/landing.component';\nimport { ResultComponent } from './components/result/result.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { StoreComponent } from './components/store/store.component';\nimport { AboutComponent } from './components/about/about.component';\n\nconst routes: Routes = [\n  { \n    path: '', \n    component: LandingComponent \n  },\n  {\n    path: 'result', \n    component: ResultComponent, \n  },\n  { \n    path: 'store/:id', \n    component: StoreComponent,\n  },\n  { \n    path: 'about', \n    component: AboutComponent \n  },\n  { \n    path: \"**\", \n    component: PageNotFoundComponent \n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n// Custom components\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule }   from '@angular/forms';\n\nimport { AppComponent } from './components/app.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { ResultComponent } from './components/result/result.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { StoreComponent } from './components/store/store.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { CheckInModalComponent } from './components/check-in-modal/check-in-modal.component';\n\n// Material Angular components\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n// Services\nimport { ApiService } from './api/api.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingComponent,\n    ResultComponent,\n    PageNotFoundComponent,\n    StoreComponent,\n    AboutComponent,\n    FooterComponent,\n    CheckInModalComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatSliderModule,\n    MatIconModule,\n    MatTooltipModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent],\n  // Set of components to compile when NgModule is defined to be\n  // dynamically loaded into view\n  entryComponents: [CheckInModalComponent]\n})\nexport class AppModule { }\n","import { CountyStatsInterface } from 'src/app/interfaces/interface';\n\nexport class CountyStats implements CountyStatsInterface {\n  countyName: string = '';\n  stateName: string = '';\n  cases: number;\n  deaths: number;\n  population: number;\n\n  // constructor(countyStats: any) {\n  //   this.countyName = countyStats.countyName;\n  //   this.stateName = countyStats.stateName;\n  //   this.cases = countyStats.cases;\n  //   this.deaths = countyStats.deaths;\n  //   this.population = countyStats.population;\n  // }\n  constructor(values: Object = {}) {\n    Object.assign(this, values);\n  }\n}\n","import { Store } from '../store/store';\nimport { CountyStats } from '../county-stats/county-stats';\nimport { ResultInterface } from 'src/app/interfaces/interface';\n/**\n * Result that is rendered in the template search result form\n */\nexport class Result implements ResultInterface {\n  stores: Store[];\n  countyStats: CountyStats[];\n\n  // Allows for constructing of obj by declaring all class variables\n  constructor(values: Object = {}) {\n      Object.assign(this, values);\n  }\n\n  // TODO: update tests to meet new constructor\n  // constructor(result: any) {\n  //   this.nearbyStores = result.nearbyStores;\n  //   this.countyStats = result.countyStats;\n  // }\n}\n","import { StoreInterface } from 'src/app/interfaces/interface';\n\nexport class Store implements StoreInterface {\n\n  id: string;\n  name: string;\n  address: string;\n  open: boolean;\n  latitude: number;\n  longitude: number;\n  score: number;\n  busy: number;\n  line: number;\n  hygiene: number;\n  masks: number;\n  reviewCount: number;\n\n  constructor(values: Object = {}) {\n    Object.assign(this, values);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"about\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>ABOUT</h1>\n            <p>Learn more about this tool, its developers, and its usages.</p>\n        </div>\n        <div class=\"section\">\n            <h2>Philosophy</h2>\n            <div class=\"box\">\n                <p>\n                    ShopSafe is a tool designed to help ease the decision fatigue that comes with \n                    deciding what is the safest place to go shopping during COVID-19. The purpose \n                    of this tool is to provide a crowdsourced method of evaluating the safety of \n                    a grocery store to give users a more informed shopping experience.\n   \n                </p>\n            </div>\n        </div>\n        <div class=\"section\">\n            <h2>Usage</h2>\n            <div class=\"box\">\n                <p>\n                    This tool is meant to be used in concurrence with good judgement and awareness \n                    of local regulations. The ShopSafe Score is calculated using the check-in and \n                    county statistics based on user input and the New York Times COVID-19 dataset. \n                    This is not a deterministic metric but rather a decision-making tool.\n                </p>\n            </div>\n        </div>\n        <div class=\"section\">\n            <h2>Creators</h2>\n            <div class=\"box\">\n                <p>\n                    This application is created by <a href=\"mailto:gabrielstewart@google.com\">Gabriel Stewart</a>, \n                    <a href=\"mailto:raulpalomo@google.com\">Raul Palomo</a>, and <a href=\"mailto:caroljli@google.com\">Carol Li</a> \n                    under their 2020 Google Internship. \n                </p>\n            </div>\n        </div>\n        \n    </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'shopsafe-frontend';\n}\n","<router-outlet></router-outlet>\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../api/api.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-check-in-modal',\n  templateUrl: './check-in-modal.component.html',\n  styleUrls: ['./check-in-modal.component.css']\n})\nexport class CheckInModalComponent implements OnInit {\n\n  constructor(\n    private apiService: ApiService,\n    private dialogRef: MatDialogRef<CheckInModalComponent>,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  busy = '';\n  line = '';\n  hygiene = '';\n  mask = '';\n\n  /**\n   * Sends check-in user data to API\n   * @param id ID of store that check-in is for\n   * @param busy user input busy score\n   * @param line user input line score\n   * @param hygiene user input hygiene score\n   * @param mask user input mask score\n   */\n  checkIn(): void {\n    console.log(\"check-in api call\");\n    const id = this.route.snapshot.paramMap.get('id').toString();\n    this.apiService.createCheckIn(id, Number(this.busy), Number(this.line), Number(this.hygiene), Number(this.mask));\n    this.dialogRef.close();\n  }\n\n}\n","<div id=\"check-in-modal\">\n    <h2 class=\"title-text\">Check-In Form</h2>\n    <p>Use the sliders to input the statuses of the store to check in. High values indicates a good status, and low values indicate a bad status.</p>\n    <div class=\"modal-content\">\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Busy &nbsp; \n                <a \n                matTooltip=\"How crowded is it inside the store? Essentially, is there \n                            enough space to social distance, maintain 6 feet? 1 indicates \n                            very busy (bad), and 10 indicates not busy at all (good)\">\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n            <mat-slider\n                [(ngModel)]=\"busy\"\n                min=\"1\" \n                max=\"10\" \n                step=\"1\" \n                class=\"right-text\"\n                thumbLabel tickInterval=\"1\"\n            ></mat-slider>\n        </div>\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Line &nbsp; \n                <a \n                matTooltip=\"How long is the line to get into the store from the outside?\n                            1 indicates very long (bad), and 10 indicates not long at all (good)\">\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n            <mat-slider\n                [(ngModel)]=\"line\"\n                min=\"1\" \n                max=\"10\" \n                step=\"1\" \n                class=\"right-text\"\n                thumbLabel tickInterval=\"1\"\n            ></mat-slider>\n        </div>\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Hygiene &nbsp; \n                <a \n                matTooltip=\"How clean is the store overall? Are the shared carts, \n                            baskets, and surfaces sanitized? 1 indicates poor hygiene \n                            (bad), and 10 indicates good hygiene (good)\"\n                >\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n            <mat-slider \n                [(ngModel)]=\"hygiene\"\n                min=\"1\" \n                max=\"10\" \n                step=\"1\" \n                class=\"right-text\"\n                thumbLabel tickInterval=\"1\"\n            ></mat-slider>\n        </div>\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Mask &nbsp; \n                <a \n                matTooltip=\"How strict is the store with masks? Are the customers and workers \n                            wearing masks properly? 1 indicates no to little mask policy \n                            and presence (bad), and 10 indicates excellent mask usage (good)\">\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n            <mat-slider\n                [(ngModel)]=\"mask\"\n                min=\"1\" \n                max=\"10\" \n                step=\"1\" \n                class=\"right-text\"\n                thumbLabel tickInterval=\"1\"\n            ></mat-slider>\n        </div>\n    </div>\n    <button id='submit-check-in-button' (click) = \"checkIn()\">CHECK IN AT THIS STORE</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer id=\"footer\">\n    <div class=\"bottom-nav\">\n        <ul>\n            <li><a href=\"/\">Home</a></li>\n            <li><a href=\"/about\">About</a></li>\n        </ul>\n        <li class=\"copyright\">\n            Made with 😷 by Raul Palomo, Gabriel Stewart, Carol Li\n        </li>\n    </div>\n\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../api/api.service';\nimport { Router } from \"@angular/router\"\nimport { ResultComponent } from '../result/result.component';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n\n  location = '';\n\n  constructor(\n    private apiService: ApiService,\n    private router: Router,\n    private resultComponent: ResultComponent\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  getNearbyStores(): void {\n    this.router.navigate(['/result']);\n    console.log(\"redirecting to results\");\n    this.resultComponent.callResult(this.location);\n  }\n\n}\n","<div id=\"landing\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>ShopSafe</h1>\n            <p>Information tool for safe, simple shopping during COVID-19.</p>\n            <br/>\n            <a href=\"/about\">Learn more about this tool &nbsp; <i class=\"fas fa-long-arrow-alt-right\"></i></a>\n        </div>\n        <form>\n            <div class=\"input-container\">\n                <mat-icon class=\"search-icon\">search</mat-icon>\n                <input\n                    class=\"input-field\"\n                    type=\"text\"\n                    placeholder=\"ENTER YOUR LOCATION TO FIND NEARBY GROCERY STORES\"\n                    name=\"search\"\n                    [(ngModel)]=\"location\"\n                    (keyup.enter) = \"getNearbyStores()\"\n                >\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"page-not-found\" class=\"segment\">\n    <div class=\"segment-text\">\n        <h1>404 Page Not Found</h1>\n        <p>Sorry you couldn't find what you were looking for! Click <a href=\"/\">here</a> to return to the landing page.</p>\n    </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ApiService } from '../../api/api.service';\nimport { Store } from '../../classes/store/store';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Result } from '../../classes/result/result';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CountyStats } from 'src/app/classes/county-stats/county-stats';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.css']\n})\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResultComponent implements OnInit {\n  @Input() result: Result;\n  stores: Store[] = [];\n  location: string;\n  proportion: number;\n\n  constructor(\n    private apiService: ApiService,\n  ) { }\n\n  ngOnInit(): void {\n    // this.init();\n    // this.getResult();\n    this.apiService.getNearbyStores(this.location)\n      .subscribe(data => this.result = {\n        stores: (data as any).stores,\n        countyStats: (data as any).countyStats\n      });\n  }\n\n  getResult(): void {\n    console.log('results api call');\n    this.apiService.getNearbyStores(this.location)\n      .subscribe(data => this.result = {\n        stores: (data as any).stores,\n        countyStats: (data as any).countyStats\n      });\n\n    this.initResult();\n  }\n\n  callResult(location: string): void {\n    console.log(\"called on results page at \" + location);\n    this.location = location;\n  }\n\n  initResult(): void {\n    this.stores = this.result.stores;\n    // Round proportion to 2 decimal places\n    this.proportion = Math.round((this.result.countyStats[0].cases / this.result.countyStats[0].population) * 100) / 100;\n  }\n\n  // dummy method\n  // FIXME: out of date\n  init(): void {\n    var tempStores = [];\n    tempStores.push(new Store({\n      id: '2347',\n      name: 'test',\n      address: '1234 Test St.',\n      score: 10,\n      reviewCount: 10,\n      status: true,\n      latLng: [0, 0],\n      busy: 1,\n      line: 1,\n      hygiene: 1,\n      masks: 1\n    }));\n\n    tempStores.push(new Store({\n      id: '1234',\n      name: 'test',\n      address: '1234 Test St.',\n      score: 10,\n      reviewCount: 10,\n      status: true,\n      latLng: [0, 0],\n      busy: 1,\n      line: 1,\n      hygiene: 1,\n      masks: 1\n    }));\n    \n    this.location = '1234 Test St.';\n\n    this.result = new Result({\n      nearbyStores: tempStores,\n      countyStats: [].push(new CountyStats({\n        countyName: 'St. Lawrence',\n        stateName: 'New York',\n        cases: 234098,\n        deaths: 43,\n        population: 623408\n      }))\n    })\n  }\n\n}\n","<div id=\"result\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>{{ location }}</h1>\n            <p>Showing all grocery stores for your location.</p>\n        </div>\n        <div class=\"chart\">\n            <!-- TODO: integrate charts api -->\n        </div>\n        <div class=\"stat-bar-wrapper\">\n            <h2>Statistics for {{ result.countyStats[0].countyName }} County</h2>\n            <div class=\"stat-bar\">\n                <div class=\"stat-elem\">\n                    <a class=\"stat-obj\">TOTAL CASES</a>\n                    <p>{{ result.countyStats[0].cases }}</p>\n                </div>\n                <div class=\"stat-elem\" style=\"text-align: center;\">\n                    <a class=\"stat-obj\">TOTAL DEATHS</a>\n                    <p>{{ result.countyStats[0].deaths }}</p>\n                </div>\n                <div class=\"stat-elem\" style=\"text-align: right; margin-top: -5px\">\n                    <a class=\"stat-obj\">PROPORTION</a>\n                    <p class=\"shopsafe-score\">{{ proportion }}</p>\n                </div>\n            </div>\n        </div>\n        <div class=\"stores-list-heading\">\n            <h2 class=\"left-text\">Local Grocery Stores</h2>\n            <p class=\"right-text subtext\">Click on a store to view store statistics</p>\n        </div>\n        <div class=\"stores-list\" *ngFor=\"let store of result.stores\">\n            <div class=\"stores-list-item\">\n                <div class=\"left-text markers\">\n                    <a class=\"location-icon\"><i class=\"fas fa-map-marker-alt\"></i></a> &nbsp;\n                    <a \n                        class=\"stores-list-location\" \n                        [routerLink]=\"['/store', store.id]\"\n                    >\n                        {{ store.name }}\n                    </a>\n                    <a class=\"rating\">{{ store.score }}/10</a>\n                </div>\n                <div class=\"right-text\">\n                    <p class=\"address\">{{ store.address }}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { CheckInModalComponent } from '../check-in-modal/check-in-modal.component';\nimport { ApiService } from '../../api/api.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Store } from 'src/app/classes/store/store';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-store', \n  templateUrl: './store.component.html',\n  styleUrls: ['./store.component.css']\n})\nexport class StoreComponent implements OnInit {\n  @Input() store: Store;\n  latLng: string;\n\n  constructor(\n    public matDialog: MatDialog,\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private router: Router,\n    @Inject(DOCUMENT) private document: Document,\n    ) { }\n  /**\n   * Runs when component is loaded\n   */\n  ngOnInit(): void {\n    this.getStore();\n    // this.initStore();\n  }\n\n  // FIXME: update\n  getStore(): void {\n    const id = this.route.snapshot.paramMap.get('id').toString();\n    this.apiService.getStoreById(id)\n      // .subscribe(data => this.store = {\n      //   id: (data as any).id,\n      //   name: (data as any).name,\n      //   address: (data as any).address,\n      //   score: (data as any).score,\n      //   reviewCount: (data as any).reviewCount,\n      //   open: (data as any).open,\n      //   latLng: (data as any).latLng,\n      //   busy: (data as any).busy,\n      //   line: (data as any).line,\n      //   hygiene: (data as any).hygiene,\n      //   masks: (data as any).masks\n      // });\n      .subscribe((res: Store) => {\n        this.store = res;\n      })\n    this.latLng = this.store.latitude + \",\" + this.store.longitude;\n  }\n\n  initStore(): void {\n    this.store = new Store({\n      id: '2347',\n      name: 'test',\n      address: '1234 Test St.',\n      score: 10,\n      reviewCount: 10,\n      status: true,\n      longitude: 0,\n      latitude: 0,\n      busy: 1,\n      line: 1,\n      hygiene: 1,\n      masks: 1\n    });\n    this.latLng = this.store.latitude + \",\" + this.store.longitude;\n  }\n\n  /**\n   * Opens check in modal dialog using check in modal component\n   * @returns opens new check in modal on screen\n   */\n  openModal() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.id = \"check-in-modal\";\n    dialogConfig.height = \"510px\";\n    dialogConfig.width = \"460px\";\n    const modalDialog = this.matDialog.open(CheckInModalComponent, dialogConfig);\n  }\n\n  redirectToMap() {\n    const url = 'https://www.google.com/maps/search/?api=1&query=' + this.latLng;\n    this.document.location.href = url;\n  }\n\n  goBack() {\n    window.history.back();\n  }\n\n}\n","<div id=\"store\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <a class=\"back-link\" (click)=\"goBack()\"><i class=\"fas fa-long-arrow-alt-left\"></i> &nbsp; Back to Results</a>\n            <h1>{{ store.name }}</h1>\n            <div id=\"store-id\" hidden>{{ store.id }}</div>\n            <p>\n                {{ store.address }} &nbsp; &nbsp; \n                <a class=\"maps-button\" (click)=\"redirectToMap()\">VIEW ON MAPS</a>\n            </p>\n        </div>\n        <div class=\"stat-bar-wrapper\">\n            <div class=\"stat-bar\">\n                <div class=\"stat-elem\">\n                    <a class=\"stat-obj\">CHECKED IN</a>\n                    <p>{{ store.reviewCount }}</p>\n                </div>\n                <div class=\"stat-elem\" style=\"text-align: center;\">\n                    <a class=\"stat-obj\">STATUS</a>\n                    <p [ngStyle]=\"{'color': (store.open) ? '#7AC665' : '#FF5151'}\"><b>{{ store.open ? 'OPEN' : 'CLOSED' }}</b></p>\n                </div>\n                <div class=\"stat-elem\" style=\"text-align: right; margin-top: -5px\">\n                    <a class=\"stat-obj\">SHOPSAFE SCORE</a>\n                    <p class=\"shopsafe-score\">{{ store.score }}/10</p>\n                </div>\n            </div>\n        </div>\n        <button id='check-in-button' (click)=\"openModal()\">CHECK IN AT THIS STORE</button>\n        <div class=\"chart\">\n            <!-- TODO: integrate charts api -->\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n  // URL of development API\n  apiUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}