{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/api/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/components/app.component.ts","./src/app/components/app.component.html","./src/app/components/check-in-modal/check-in-modal.component.ts","./src/app/components/check-in-modal/check-in-modal.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/http-error/http-error.component.ts","./src/app/components/http-error/http-error.component.html","./src/app/components/landing/landing.component.ts","./src/app/components/landing/landing.component.html","./src/app/components/page-not-found/page-not-found.component.ts","./src/app/components/page-not-found/page-not-found.component.html","./src/app/components/result/result.component.ts","./src/app/components/result/result.component.html","./src/app/components/store/store.component.ts","./src/app/components/store/store.component.html","./src/app/google-chart/google-chart.module.ts","./src/app/google-chart/line-chart/line-chart.component.ts","./src/app/google-chart/service/google-chart.service.ts","./src/app/google-chart/service/service.module.ts","./src/app/pipes/round.pipe.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { StoreInterface, ResultInterface, StoreResultInterface } from '../interfaces/interface';\nimport { Result } from '../classes/result/result';\nimport { Store } from '../classes/store/store';\nimport { CountyStats } from '../classes/county-stats/county-stats';\n\n// Provides HTTP client used to make HTTP requests within the Angular application\n// Returns Observables (can be synchronous), not Promises (always asynchronous)\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst API_URL = environment.apiUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  \n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  }\n\n  constructor(\n    private http: HttpClient\n    ) { }\n\n  /**\n   * Creates new check-in for specific store ID and sends to API as POST request\n   * @param storeId ID of the store that the check-in occurs for\n   * @returns Observable \n   */\n  public createCheckIn(storeId: string, busy: number, line: number, hygiene: number, mask: number): Observable<Object> {\n    let params = new HttpParams();\n    params = params\n              .set('storeId', storeId.toString())\n              .set('busy', busy.toString())\n              .set('line', line.toString())\n              .set('hygiene', hygiene.toString())\n              .set('mask', mask.toString());\n    return this.http\n      .post(API_URL + '/checkin?' + params.toString(),{}, this.httpOptions)\n      .pipe(\n        tap(_ => console.log(\"API: check in from \" + storeId)),\n        catchError(error => throwError(error.message || error))\n      );\n  }\n\n  /**\n   * Gets all nearby stores from backend via GET request\n   * @param location inputted by user\n   * @returns result as observable\n   */\n  public getNearbyStores(location: string): Observable<ResultInterface> {\n    const url = API_URL + '/stores?location=' + location;\n    // const url = API_URL + '/stores';\n    return this.http\n      .get<ResultInterface>(url)\n      .pipe(\n        map((res: any) => res as ResultInterface),\n        tap(_ => console.log(\"API: fetch nearby stores for location \" + location)),\n        catchError(error => throwError((error.status + \" \" + error.statusText) || error))\n      );\n  }\n\n  /**\n   * Gets current store by ID, requires mapping because JSON doesn't match \n   * interface typing\n   * @param id ID of the store to fetch store from\n   * @returns store of given ID as observable\n   */\n  public getStoreById(id: string) : Observable<StoreResultInterface> {\n    const url = API_URL + '/store?id=' + id;\n    // const url = API_URL + '/store';\n    return this.http\n      .get<StoreResultInterface>(url)\n      .pipe(\n        map((res: any) => res as StoreResultInterface),\n        tap(_ => console.log('API: fetched store id ' + id)),\n        catchError(error => throwError((error.status + \" \" + error.statusText) || error))\n      )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LandingComponent } from './components/landing/landing.component';\nimport { ResultComponent } from './components/result/result.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { StoreComponent } from './components/store/store.component';\nimport { AboutComponent } from './components/about/about.component';\n\nconst routes: Routes = [\n  { \n    path: '', \n    component: LandingComponent \n  },\n  {\n    path: 'result/:location', \n    component: ResultComponent, \n  },\n  { \n    path: 'store/:id', \n    component: StoreComponent,\n  },\n  { \n    path: 'about', \n    component: AboutComponent \n  },\n  { \n    path: \"**\", \n    component: PageNotFoundComponent \n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n// Custom components\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule }   from '@angular/forms';\nimport { GoogleChartModule } from './google-chart/google-chart.module';\nimport { AppComponent } from './components/app.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { ResultComponent } from './components/result/result.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { StoreComponent } from './components/store/store.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { CheckInModalComponent } from './components/check-in-modal/check-in-modal.component';\n\n// Material Angular components\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n// Services\nimport { ApiService } from './api/api.service';\n\n// Pipes\nimport { RoundPipe } from './pipes/round.pipe';\nimport { HttpErrorComponent } from './components/http-error/http-error.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingComponent,\n    ResultComponent,\n    PageNotFoundComponent,\n    StoreComponent,\n    AboutComponent,\n    FooterComponent,\n    CheckInModalComponent,\n    RoundPipe,\n    HttpErrorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatSliderModule,\n    MatIconModule,\n    MatTooltipModule,\n    HttpClientModule,\n    FormsModule,\n    MatProgressSpinnerModule,\n    GoogleChartModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent],\n  // Set of components to compile when NgModule is defined to be\n  // dynamically loaded into view\n  entryComponents: [CheckInModalComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"about\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>ABOUT</h1>\n            <p>Learn more about this tool, its developers, and its usages.</p>\n        </div>\n        <div class=\"section\">\n            <h2>Philosophy</h2>\n            <div class=\"box\">\n                <p>\n                    ShopSafe is a tool designed to help ease the decision fatigue that comes with \n                    deciding what is the safest place to go shopping during COVID-19. The purpose \n                    of this tool is to provide a crowdsourced method of evaluating the safety of \n                    a grocery store to give users a more informed shopping experience.\n   \n                </p>\n            </div>\n        </div>\n        <div class=\"section\">\n            <h2>Usage</h2>\n            <div class=\"box\">\n                <p>\n                    This tool is meant to be used in concurrence with good judgement and awareness \n                    of local regulations. The ShopSafe Score is calculated using the check-in and \n                    county statistics based on user input and the New York Times COVID-19 dataset. \n                    This is not a deterministic metric but rather a decision-making tool.\n                </p>\n            </div>\n        </div>\n        <div class=\"section\">\n            <h2>Creators</h2>\n            <div class=\"box\">\n                <p>\n                    This application is created by <a href=\"mailto:gabrielstewart@google.com\">Gabriel Stewart</a>, \n                    <a href=\"mailto:raulpalomo@google.com\">Raul Palomo</a>, and <a href=\"mailto:caroljli@google.com\">Carol Li</a> \n                    under their 2020 Google Internship. \n                </p>\n            </div>\n        </div>\n        \n    </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'shopsafe-frontend';\n}\n","<router-outlet></router-outlet>\n<app-footer></app-footer>","import { Component, OnInit, Input, Injectable } from '@angular/core';\nimport { ApiService } from '../../api/api.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-check-in-modal',\n  templateUrl: './check-in-modal.component.html',\n  styleUrls: ['./check-in-modal.component.css']\n})\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n\nexport class CheckInModalComponent implements OnInit {\n\n  constructor(\n    private apiService: ApiService,\n    private dialogRef: MatDialogRef<CheckInModalComponent>,\n    private route: ActivatedRoute,\n    \n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  static storeId: string;\n  busy = '';\n  line = '';\n  hygiene = '';\n  mask = '';\n\n  /**\n   * Sets ID variable of check in modal based on store id.\n   * @param id of the current store\n   */\n  public static setId(id: string) {\n    this.storeId = id;\n    console.log(\"CLIENT: store id is \" + this.storeId);\n  }\n\n  /**\n   * Sends check-in user data to API\n   * @param id ID of store that check-in is for\n   * @param busy user input busy score\n   * @param line user input line score\n   * @param hygiene user input hygiene score\n   * @param mask user input mask score\n   */\n  checkIn(): void {\n    console.log(\"CLIENT: check-in api call\");\n    this.apiService.createCheckIn(CheckInModalComponent.storeId, Number(this.busy), Number(this.line), Number(this.hygiene), Number(this.mask))\n      .subscribe();\n    this.dialogRef.close();\n  }\n\n}\n","<div id=\"check-in-modal\">\n    <h2 class=\"title-text\">Check-In Form</h2>\n    <p>Use the sliders to input the statuses of the store to check in. High values indicates a good status, and low values indicate a bad status.</p>\n    <div class=\"modal-content\">\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Busy &nbsp; \n                <a \n                matTooltip=\"How crowded is it inside the store? Essentially, is there \n                            enough space to social distance, maintain 6 feet? 1 indicates \n                            very busy (bad), and 10 indicates not busy at all (good)\">\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n            <mat-slider\n                [(ngModel)]=\"busy\"\n                min=\"1\" \n                max=\"10\" \n                step=\"1\" \n                class=\"right-text\"\n                thumbLabel tickInterval=\"1\"\n            ></mat-slider>\n        </div>\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Line &nbsp; \n                <a \n                matTooltip=\"How long is the line to get into the store from the outside?\n                            1 indicates very long (bad), and 10 indicates not long at all (good)\">\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n            <mat-slider\n                [(ngModel)]=\"line\"\n                min=\"1\" \n                max=\"10\" \n                step=\"1\" \n                class=\"right-text\"\n                thumbLabel tickInterval=\"1\"\n            ></mat-slider>\n        </div>\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Hygiene &nbsp; \n                <a \n                matTooltip=\"How clean is the store overall? Are the shared carts, \n                            baskets, and surfaces sanitized? 1 indicates poor hygiene \n                            (bad), and 10 indicates good hygiene (good)\"\n                >\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n            <mat-slider \n                [(ngModel)]=\"hygiene\"\n                min=\"1\" \n                max=\"10\" \n                step=\"1\" \n                class=\"right-text\"\n                thumbLabel tickInterval=\"1\"\n            ></mat-slider>\n        </div>\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Mask &nbsp; \n                <a \n                matTooltip=\"How strict is the store with masks? Are the customers and workers \n                            wearing masks properly? 1 indicates no to little mask policy \n                            and presence (bad), and 10 indicates excellent mask usage (good)\">\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n            <mat-slider\n                [(ngModel)]=\"mask\"\n                min=\"1\" \n                max=\"10\" \n                step=\"1\" \n                class=\"right-text\"\n                thumbLabel tickInterval=\"1\"\n            ></mat-slider>\n        </div>\n    </div>\n    <button id='submit-check-in-button' (click) = \"checkIn()\">CHECK IN AT THIS STORE</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer id=\"footer\">\n    <div class=\"bottom-nav\">\n        <ul>\n            <li><a [routerLink]=\"['/']\">Home</a></li>\n            <li><a [routerLink]=\"['/about']\">About</a></li>\n        </ul>\n        <li class=\"copyright\">\n            Made with 😷 by Raul Palomo, Gabriel Stewart, Carol Li\n        </li>\n    </div>\n\n</footer>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-http-error',\n  templateUrl: './http-error.component.html',\n  styleUrls: ['./http-error.component.css']\n})\nexport class HttpErrorComponent implements OnInit {\n\n  @Input() httpErrorMessage: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"http-error\" class=\"segment\">\n    <div class=\"segment-text\">\n        <h1>HTTP Error</h1>\n        <p>Uh oh, it seems that there's a problem with calling our server. Click <a href=\"/\">here</a> to return to the landing page.</p>\n        <div class=\"error-wrapper\">\n          <p>{{ httpErrorMessage }}</p>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../api/api.service';\nimport { Router } from \"@angular/router\"\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n\n  location = '';\n\n  constructor(\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  getNearbyStores(): void {\n    this.router.navigate(['/result', this.location]);\n    console.log(\"CLIENT: redirecting to results\");\n  }\n\n}\n","<div id=\"landing\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>ShopSafe</h1>\n            <p>Information tool for safe, simple shopping during COVID-19.</p>\n            <br/>\n            <a href=\"/about\">Learn more about this tool &nbsp; <i class=\"fas fa-long-arrow-alt-right\"></i></a>\n        </div>\n        <form>\n            <div class=\"input-container\">\n                <mat-icon class=\"search-icon\">search</mat-icon>\n                <input\n                    class=\"input-field\"\n                    type=\"text\"\n                    placeholder=\"ENTER YOUR LOCATION TO FIND NEARBY GROCERY STORES\"\n                    name=\"search\"\n                    [(ngModel)]=\"location\"\n                    (keyup.enter) = \"getNearbyStores()\"\n                >\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"page-not-found\" class=\"segment\">\n    <div class=\"segment-text\">\n        <h1>404 Page Not Found</h1>\n        <p>Sorry you couldn't find what you were looking for! Click <a href=\"/\">here</a> to return to the landing page.</p>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../../api/api.service';\nimport { Result } from '../../classes/result/result';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.css']\n})\n\nexport class ResultComponent implements OnInit {\n  result: Result;\n  location: string;\n  isLoaded: boolean;\n  httpError: boolean;\n  httpErrorMessage: string;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    // Defaults to API not called yet\n    this.isLoaded = false;\n    // Defaults to no HTTP error\n    this.httpError = false;\n    this.location = this.route.snapshot.paramMap.get('location').toString();\n    this.getResult();\n  }\n\n  /**\n   * Calls API to get result and subscribes local variables using data returned\n   * in the Observable from the HTTP response.\n   */\n  getResult(): void {\n    console.log('CLIENT: results api call at ' + this.location);\n    this.apiService.getNearbyStores(this.location)\n      .subscribe(data => \n        this.result = {\n          stores: (data as any).stores,\n          countyStats: (data as any).countyStats\n        },\n        err => {\n          console.log(err),\n          this.httpError = true,\n          this.httpErrorMessage = err\n        },\n        () => {\n          this.initTemplate()\n        }\n      );\n  }\n\n  /**\n   * Initializes component by using data returned from API call.\n   * Sets isLoaded boolean to true, as the function can only be called when there\n   * is a successful response.\n   */\n  initTemplate(): void {\n    // Sets loaded state to true\n    this.isLoaded = true;\n    console.log(\"CLIENT: API call finished\");\n  }\n}","<div *ngIf=\"isLoaded && !httpError\" id=\"result\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>{{ location }}</h1>\n            <p>Showing all grocery stores for your location.</p>\n        </div>\n        <div class=\"chart\">\n            <!-- TODO: integrate charts api -->\n        </div>\n        <div class=\"stores-list-heading\">\n            <h2 class=\"left-text\">Local Grocery Stores</h2>\n            <p class=\"right-text subtext\">Click on a store to view store statistics</p>\n        </div>\n        <div class=\"stores-list\" *ngFor=\"let store of result.stores\">\n            <div class=\"stores-list-item\">\n                <div class=\"left-text markers\">\n                    <a class=\"location-icon\"><i class=\"fas fa-map-marker-alt\"></i></a> &nbsp;\n                    <a \n                        class=\"stores-list-location\" \n                        [routerLink]=\"['/store', store.id]\"\n                    >\n                        {{ store.name }}\n                    </a>\n                    <a class=\"rating\">{{ store.score | round }}/10</a>\n                </div>\n                <div class=\"right-text\">\n                    <p class=\"address\">{{ store.address }}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"!isLoaded && !httpError\" class=\"loading-screen\" color=\"grey\">\n  <mat-spinner></mat-spinner>\n  <br/>\n  <p>Fetching Results...</p>\n</div>\n\n<app-http-error *ngIf=\"httpError\" [httpErrorMessage]='httpErrorMessage'></app-http-error>","import { Component, OnInit, Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { CheckInModalComponent } from '../check-in-modal/check-in-modal.component';\nimport { ApiService } from '../../api/api.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store } from 'src/app/classes/store/store';\nimport { CountyStats } from 'src/app/classes/county-stats/county-stats';\nimport { DataPoint } from '../../classes/data-point/data-point';\n\n@Component({\n  selector: 'app-store', \n  templateUrl: './store.component.html',\n  styleUrls: ['./store.component.css']\n})\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class StoreComponent implements OnInit {\n  store: Store;\n  countyStats: CountyStats;\n  latLng: string;\n  isLoaded: boolean;\n  storeId: string;\n  httpError: boolean;\n  httpErrorMessage: string;\n  proportion: number;\n  covidData: DataPoint[];\n  maskData: DataPoint[];\n  busyData: DataPoint[];\n  lineData: DataPoint[];\n  hygieneData: DataPoint[];\n\n  constructor(\n    public matDialog: MatDialog,\n    private apiService: ApiService,\n    private route: ActivatedRoute\n    ) { }\n\n  /**\n   * Runs when component is loaded\n   */\n  ngOnInit(): void {\n    // Defaults to API not called yet\n    this.isLoaded = false;\n    // Defaults to no HTTP error\n    this.httpError = false;\n    this.getStore();\n  }\n\n  /**\n   * Calls API to get store and subscribes local variables using data returned in the \n   * Observable from the HTTP response.\n   */\n  getStore(): void {\n    const id = this.route.snapshot.paramMap.get('id').toString();\n    this.storeId = id;\n    this.apiService.getStoreById(id)\n      .subscribe(\n        (res: any) => {\n          this.store = res.store,\n          this.countyStats = res.countyStats,\n          this.covidData = res.covidData,\n          this.maskData = res.maskData,\n          this.lineData = res.lineData,\n          this.hygieneData = res.hygieneData\n        },\n        err => {\n          console.log(err),\n          this.httpError = true,\n          this.httpErrorMessage = err\n        },\n        () => {\n          this.initTemplate();\n        }\n      );\n  }\n\n  /**\n   * Initializes component by using data returned from API call.\n   * Sets isLoaded boolean to true, as the function can only be called when there\n   * is a successful response.\n   */\n  initTemplate(): void {\n    // Sets loaded state to true\n    this.isLoaded = true;\n    console.log(\"CLIENT: API call finished\");\n\n    // Round proportion to 2 decimal places\n    this.proportion = this.countyStats.cases / this.countyStats.population * 100;\n    console.log(\"CLIENT: calculated percentage as \" + this.proportion);\n  }\n  \n  /**\n   * Opens check in modal dialog using check in modal component.\n   * Opens new check in modal on screen.\n   */\n  openModal() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.id = \"check-in-modal\";\n    dialogConfig.height = \"510px\";\n    dialogConfig.width = \"460px\";\n    CheckInModalComponent.setId(this.storeId);\n    const modalDialog = this.matDialog.open(CheckInModalComponent, dialogConfig);\n  }\n\n  /**\n   * Opens Google Maps link using Places ID of the store.\n   */\n  redirectToMap() {\n    const url = 'https://www.google.com/maps/place/?q=place_id:' + this.storeId;\n    window.open(url, \"_blank\");\n  }\n\n  /**\n   * Redirects to result page (previous page).\n   */\n  goBack() {\n    window.history.back();\n  }\n\n}\n","<div *ngIf=\"isLoaded && !httpError\" id=\"store\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <a class=\"back-link\" (click)=\"goBack()\"><i class=\"fas fa-long-arrow-alt-left\"></i> &nbsp; Back to Results</a>\n            <br/>\n            <h1>{{ store.name }}</h1>\n            <p>\n                {{ store.address }} &nbsp; &nbsp; \n                <a class=\"maps-button\" (click)=\"redirectToMap()\">VIEW ON MAPS</a>\n            </p>\n        </div>\n        <div class=\"stat-bar-wrapper\">\n            <div class=\"stat-bar\">\n                <div class=\"stat-elem\">\n                    <a class=\"stat-obj\">CHECKED IN</a>\n                    <p>{{ store.checkInCount }}</p>\n                </div>\n                <div class=\"stat-elem\" style=\"text-align: center;\">\n                    <a class=\"stat-obj\">STATUS</a>\n                    <p [ngStyle]=\"{'color': (store.open) ? '#7AC665' : '#FF5151'}\"><b>{{ store.open ? 'OPEN' : 'CLOSED' }}</b></p>\n                </div>\n                <div class=\"stat-elem\" style=\"text-align: right; margin-top: -5px\">\n                    <a class=\"stat-obj\">SHOPSAFE SCORE</a>\n                    <p class=\"shopsafe-score\">{{ store.score | round }}/10</p>\n                </div>\n            </div>\n        </div>\n        <button id='check-in-button' (click)=\"openModal()\">CHECK IN AT THIS STORE</button>\n        <div id=\"line-chart\" class=\"chart\">\n          <app-line-chart></app-line-chart>\n        </div>\n        <div class=\"stat-bar-wrapper\">\n            <h2>Statistics for {{ countyStats.countyName }} County</h2>\n            <div class=\"stat-bar\">\n                <div class=\"stat-elem\">\n                    <a class=\"stat-obj\">TOTAL CASES</a>\n                    <p>{{ countyStats.cases }}</p>\n                </div>\n                <div class=\"stat-elem\" style=\"text-align: center;\">\n                    <a class=\"stat-obj\">TOTAL DEATHS</a>\n                    <p>{{ countyStats.deaths }}</p>\n                </div>\n                <div class=\"stat-elem\" style=\"text-align: right; margin-top: -5px\">\n                    <a class=\"stat-obj\">PERCENT AFFECTED</a>\n                    <p class=\"shopsafe-score\">{{ proportion | round }}%</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"!isLoaded && !httpError\" class=\"loading-screen\" color=\"grey\">\n  <mat-spinner></mat-spinner>\n  <br/>\n  <p>Loading Store...</p>\n</div>\n\n<app-http-error *ngIf=\"httpError\" [httpErrorMessage]='httpErrorMessage'></app-http-error>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ServiceModule } from './service/service.module';\nimport { LineChartComponent } from './line-chart/line-chart.component';\n\n\n@NgModule({\n  declarations: [LineChartComponent],\n  imports: [\n    CommonModule,\n    ServiceModule\n  ],\n  exports: [LineChartComponent],\n  providers: [],\n})\nexport class GoogleChartModule { }\n","import { Component, OnInit, Injectable } from '@angular/core';\nimport { GoogleChartService } from  '../service/google-chart.service';\nimport { DataPoint } from '../../classes/data-point/data-point';\nimport { StoreComponent } from '../../components/store/store.component';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.css']\n})\nexport class LineChartComponent implements OnInit {\n\n  private gLib: any;\n  mask: DataPoint[];\n  busy: DataPoint[];\n  line: DataPoint[];\n  hygiene: DataPoint[];\n\n  constructor(\n    private gChartService: GoogleChartService,\n    private storeComponent: StoreComponent\n    )\n  {\n    this.mask = this.storeComponent.maskData;\n    this.busy = this.storeComponent.busyData;\n    this.line = this.storeComponent.lineData;\n    this.hygiene = this.storeComponent.hygieneData;\n    this.gLib = this.gChartService.getGoogle();\n    this.gLib.charts.load('current', {'packages': ['corechart', 'table'], callback: this.drawChart.bind(this)});\n  }\n\n  ngOnInit(): void {\n  }\n\n  // Assumes that all input arrays are the same length\n  private drawChart() {\n    // let data = this.gLib.visualization.arrayToDataTable([\n    //   ['Year', 'Sales', 'Expenses'],\n    //   ['2004',  1000,      400],\n    //   ['2005',  1170,      460],\n    //   ['2006',  660,       1120],\n    //   ['2007',  1030,      540]\n    // ]);\n\n    // New data should be 'date' 'busy' 'line' 'hygiene' 'mask'\n    // TODO: custom colorization with options\n\n    let data = new this.gLib.visualization.DataTable();\n    data.addColumn('string', 'Date');\n    data.addColumn('number', 'Mask');\n    data.addColumn('number', 'Busy');\n    data.addColumn('number', 'Line');\n    data.addColumn('number', 'Hygiene');\n\n    for (let i in this.mask) {\n      data.addRow([this.mask[i].date, this.mask[i], this.busy[i], this.line[i], this.hygiene[i]]);\n    }\n\n    const options = {\n      height: 500\n    }\n\n    let chart = new this.gLib.visualization.LineChart(document.getElementById('line-chart'));\n\n    chart.draw(data, options);\n    console.log(\"CLIENT: map has been drawn\");\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ServiceModule } from './service.module';\n\ndeclare let google: any;\n\n@Injectable({\n  providedIn: ServiceModule\n})\nexport class GoogleChartService {\n\n  private google: any;\n\n  constructor() {\n    this.google = google;\n   }\n\n  getGoogle() {\n    return this.google;\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Contains Angular service utilized to access the Google Charts library\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ServiceModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'round'})\nexport class RoundPipe implements PipeTransform {\n  transform(input: number) {\n    return Math.round(input * 100) / 100;\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n  // URL of development API\n  apiUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}