{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/api/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/components/app.component.ts","./src/app/components/app.component.html","./src/app/components/check-in-modal/check-in-modal.component.ts","./src/app/components/check-in-modal/check-in-modal.component.html","./src/app/components/feedback-forms/feedback-forms.component.ts","./src/app/components/feedback-forms/feedback-forms.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/http-error/http-error.component.ts","./src/app/components/http-error/http-error.component.html","./src/app/components/landing/landing.component.ts","./src/app/components/landing/landing.component.html","./src/app/components/page-not-found/page-not-found.component.ts","./src/app/components/page-not-found/page-not-found.component.html","./src/app/components/result/result.component.ts","./src/app/components/result/result.component.html","./src/app/components/search-bar/search-bar.component.ts","./src/app/components/search-bar/search-bar.component.html","./src/app/components/store/store.component.ts","./src/app/components/store/store.component.html","./src/app/google-chart/covid-chart/covid-chart.component.ts","./src/app/google-chart/google-chart.module.ts","./src/app/google-chart/line-chart/line-chart.component.ts","./src/app/google-chart/service/google-chart.service.ts","./src/app/google-chart/service/service.module.ts","./src/app/pipes/round.pipe.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { StoreInterface, ResultInterface, StoreResultInterface } from '../interfaces/interface';\nimport { Result } from '../classes/result/result';\nimport { Store } from '../classes/store/store';\nimport { CountyStats } from '../classes/county-stats/county-stats';\n\n// Provides HTTP client used to make HTTP requests within the Angular application\n// Returns Observables (can be synchronous), not Promises (always asynchronous)\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst API_URL = environment.apiUrl;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  \n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  }\n\n  constructor(\n    private http: HttpClient\n    ) { }\n\n  /**\n   * Creates new check-in for specific store ID and sends to API as POST request\n   * @param storeId ID of the store that the check-in occurs for\n   * @returns Observable \n   */\n  public createCheckIn(storeId: string, busy: number, line: number, hygiene: number, mask: number): Observable<Object> {\n    let params = new HttpParams();\n    params = params\n              .set('storeId', storeId.toString())\n              .set('busy', busy.toString())\n              .set('line', line.toString())\n              .set('hygiene', hygiene.toString())\n              .set('mask', mask.toString());\n    return this.http\n      .post(API_URL + '/checkin?' + params.toString(),{}, this.httpOptions)\n      .pipe(\n        tap(_ => console.log(\"API: check in from \" + storeId)),\n        catchError(error => throwError(error.message || error))\n      );\n  }\n\n  /**\n   * Gets all nearby stores from backend via GET request\n   * @param location inputted by user\n   * @returns result as observable\n   */\n  public getNearbyStores(location: string): Observable<ResultInterface> {\n    const url = API_URL + '/stores?location=' + location;\n    // const url = API_URL + '/stores';\n    return this.http\n      .get<ResultInterface>(url)\n      .pipe(\n        map((res: any) => res as ResultInterface),\n        tap(_ => console.log(\"API: fetch nearby stores for location \" + location)),\n        catchError(error => throwError((error.status + \" \" + error.statusText) || error))\n      );\n  }\n\n  /**\n   * Gets current store by ID, requires mapping because JSON doesn't match \n   * interface typing\n   * @param id ID of the store to fetch store from\n   * @returns store of given ID as observable\n   */\n  public getStoreById(id: string) : Observable<StoreResultInterface> {\n    const url = API_URL + '/store?id=' + id;\n    // const url = API_URL + '/store';\n    return this.http\n      .get<StoreResultInterface>(url)\n      .pipe(\n        map((res: any) => res as StoreResultInterface),\n        tap(_ => console.log('API: fetched store id ' + id)),\n        catchError(error => throwError((error.status + \" \" + error.statusText) || error))\n      )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LandingComponent } from './components/landing/landing.component';\nimport { ResultComponent } from './components/result/result.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { StoreComponent } from './components/store/store.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { FeedbackFormsComponent } from './components/feedback-forms/feedback-forms.component';\n\nconst routes: Routes = [\n  { \n    path: '', \n    component: LandingComponent \n  },\n  {\n    path: 'result/:location', \n    component: ResultComponent, \n  },\n  { \n    path: 'store/:id', \n    component: StoreComponent,\n  },\n  { \n    path: 'about', \n    component: AboutComponent \n  },\n  {\n    path: \"feedback\",\n    component: FeedbackFormsComponent \n  },\n  { \n    path: \"**\", \n    component: PageNotFoundComponent \n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n// Custom components\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GoogleMapsModule } from '@angular/google-maps'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule }   from '@angular/forms';\nimport { GoogleChartModule } from './google-chart/google-chart.module';\nimport { AppComponent } from './components/app.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { ResultComponent } from './components/result/result.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { StoreComponent } from './components/store/store.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { CheckInModalComponent } from './components/check-in-modal/check-in-modal.component';\nimport { FeedbackFormsComponent } from './components/feedback-forms/feedback-forms.component';\n\n// Material Angular components\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n// Services\nimport { ApiService } from './api/api.service';\n\n// Pipes\nimport { RoundPipe } from './pipes/round.pipe';\nimport { HttpErrorComponent } from './components/http-error/http-error.component';\nimport { SearchBarComponent } from './components/search-bar/search-bar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingComponent,\n    ResultComponent,\n    PageNotFoundComponent,\n    StoreComponent,\n    AboutComponent,\n    FooterComponent,\n    CheckInModalComponent,\n    RoundPipe,\n    HttpErrorComponent,\n    SearchBarComponent,\n    FeedbackFormsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatSliderModule,\n    MatIconModule,\n    MatTooltipModule,\n    HttpClientModule,\n    FormsModule,\n    MatProgressSpinnerModule,\n    GoogleChartModule,\n    GoogleMapsModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent],\n  // Set of components to compile when NgModule is defined to be\n  // dynamically loaded into view\n  entryComponents: [CheckInModalComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"about\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>ABOUT</h1>\n            <p>Learn more about this tool, its developers, and its usages.</p>\n        </div>\n\n        <div class=\"section\">\n            <h2>Philosophy</h2>\n            <div class=\"box\">\n                <p>\n                    ShopSafe is a tool designed to help ease the decision fatigue that comes with \n                    deciding what is the safest place to go shopping during COVID-19. The purpose \n                    of this tool is to provide a crowdsourced method of evaluating the safety of \n                    a grocery store to give users a more informed shopping experience.\n   \n                </p>\n            </div>\n        </div>\n\n        <div class=\"section\">\n            <h2>Instructions</h2>\n            <div class=\"box\">\n                <p>\n                    To use Shopsafe, enter an address <b>within the United States</b> to find a list of\n                    grocery stores rendered for each specific location. Click on each location to see the\n                    Shopsafe Score, county COVID-19 statistics, and check-in statistics for each location.\n                    Make sure to check in by clicking on the check-in button and submitting your review in \n                    order to help refine the ShopSafe Score.\n                </p>\n            </div>\n        </div>\n\n        <div class=\"section\">\n            <h2>Usage</h2>\n            <div class=\"box\">\n                <p>\n                    This tool is meant to be used in concurrence with good judgement and awareness \n                    of local regulations. The ShopSafe Score is calculated using the check-in and \n                    county statistics based on user input and the New York Times COVID-19 dataset. \n                    That is to say, this is not a deterministic metric, but rather a decision-making tool.\n                </p>\n            </div>\n        </div>\n\n        <div class=\"section\">\n            <h2>Creators</h2>\n            <div class=\"box\">\n                <p>\n                    This application is created by <a href=\"mailto:gabrielstewart@google.com\">Gabriel Stewart</a>, \n                    <a href=\"mailto:raulpalomo@google.com\">Raul Palomo</a>, and <a href=\"mailto:caroljli@google.com\">Carol Li</a> \n                    under their 2020 Google Internship. Inquiries can be sent to them.\n                </p>\n            </div>\n        </div>\n\n        <div class=\"section\">\n            <h2>License and Attributions</h2>\n            <div class=\"box\">\n                <p>\n                    Copyright 2020 Google LLC. Licensed under the Apache License, Version 2.0 (the \"License\"); you \n                    may not use this file except in compliance with the License. You may obtain a copy of the License \n                    at https://www.apache.org/licenses/LICENSE-2.0. This product uses the FCC Data API but is not\n                    endorsed or certified by the FCC.\n                </p>\n            </div>\n        </div>\n        \n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { environment } from \"../../environments/environment\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'shopsafe-frontend';\n\n  ngOnInit() {\n    if (environment.production) {\n      if (location.protocol === 'http:') {\n        window.location.href = location.href.replace('http', 'https');\n      }\n    }\n  }\n}\n","<router-outlet></router-outlet>\n<app-footer></app-footer>","import { Component, OnInit, Input, Injectable } from '@angular/core';\nimport { ApiService } from '../../api/api.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-check-in-modal',\n  templateUrl: './check-in-modal.component.html',\n  styleUrls: ['./check-in-modal.component.css']\n})\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n\nexport class CheckInModalComponent implements OnInit {\n\n  constructor(\n    private apiService: ApiService,\n    private dialogRef: MatDialogRef<CheckInModalComponent>,\n    private route: ActivatedRoute,\n    \n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  static storeId: string;\n  busy = '';\n  line = '';\n  hygiene = '';\n  mask = '';\n\n  /**\n   * Sets ID variable of check in modal based on store id.\n   * @param id of the current store\n   */\n  public static setId(id: string) {\n    this.storeId = id;\n    console.log(\"CLIENT: store id is \" + this.storeId);\n  }\n\n  /**\n   * Sends check-in user data to API\n   * @param id ID of store that check-in is for\n   * @param busy user input busy score\n   * @param line user input line score\n   * @param hygiene user input hygiene score\n   * @param mask user input mask score\n   */\n  checkIn(): void {\n    console.log(\"CLIENT: check-in api call\");\n    this.apiService.createCheckIn(CheckInModalComponent.storeId, Number(this.busy), Number(this.line), Number(this.hygiene), Number(this.mask))\n      .subscribe();\n    this.dialogRef.close();\n  }\n\n}\n","<div id=\"check-in-modal\">\n    <h2 class=\"title-text\">Check-In Form</h2>\n    <p>Use the sliders to input the statuses of the store to check in. High values indicates a good status, and low values indicate a bad status.</p>\n    <div class=\"modal-content\">\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Busy &nbsp; \n                <a \n                matTooltip=\"How crowded is it inside the store? Essentially, is there \n                            enough space to social distance, maintain 6 feet? 1 indicates \n                            very busy (bad), and 10 indicates not busy at all (good)\">\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n            <div class=\"slider\" class=\"right-text grey-text\">\n              <i class=\"far fa-frown\"></i>\n              &nbsp;\n              <mat-slider\n                  [(ngModel)]=\"busy\"\n                  min=\"1\" \n                  max=\"10\" \n                  step=\"0.5\" \n                  thumbLabel tickInterval=\"1\"\n              ></mat-slider>\n              <i class=\"far fa-smile\"></i>\n            </div>\n        </div>\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Line &nbsp; \n                <a \n                matTooltip=\"How long is the line to get into the store from the outside?\n                            1 indicates very long (bad), and 10 indicates not long at all (good)\">\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n             <div class=\"slider\" class=\"right-text grey-text\">\n              <i class=\"far fa-frown\"></i>\n              &nbsp;\n              <mat-slider\n                  [(ngModel)]=\"line\"\n                  min=\"1\" \n                  max=\"10\" \n                  step=\"0.5\" \n                  thumbLabel tickInterval=\"1\"\n              ></mat-slider>\n              <i class=\"far fa-smile\"></i>\n            </div>\n        </div>\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Hygiene &nbsp; \n                <a \n                matTooltip=\"How clean is the store overall? Are the shared carts, \n                            baskets, and surfaces sanitized? 1 indicates poor hygiene \n                            (bad), and 10 indicates good hygiene (good)\"\n                >\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n            <div class=\"slider\" class=\"right-text grey-text\">\n              <i class=\"far fa-frown\"></i>\n              &nbsp;\n              <mat-slider\n                  [(ngModel)]=\"hygiene\"\n                  min=\"1\" \n                  max=\"10\" \n                  step=\"0.5\" \n                  thumbLabel tickInterval=\"1\"\n              ></mat-slider>\n              <i class=\"far fa-smile\"></i>\n            </div>\n        </div>\n        <div class=\"option\">\n            <h2 class=\"left-text\">\n                Mask &nbsp; \n                <a \n                matTooltip=\"How strict is the store with masks? Are the customers and workers \n                            wearing masks properly? 1 indicates no to little mask policy \n                            and presence (bad), and 10 indicates excellent mask usage (good)\">\n                    <i class=\"far fa-question-circle\"></i>\n                </a>\n            </h2>\n             <div class=\"slider\" class=\"right-text grey-text\">\n              <i class=\"far fa-frown\"></i>\n              &nbsp;\n              <mat-slider\n                  [(ngModel)]=\"mask\"\n                  min=\"1\" \n                  max=\"10\" \n                  step=\"0.5\" \n                  thumbLabel tickInterval=\"1\"\n              ></mat-slider>\n              <i class=\"far fa-smile\"></i>\n            </div>\n        </div>\n    </div>\n    <button id='submit-check-in-button' (click) = \"checkIn()\">CHECK IN AT THIS STORE</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-feedback-forms',\n  templateUrl: './feedback-forms.component.html',\n  styleUrls: ['./feedback-forms.component.css']\n})\nexport class FeedbackFormsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"title\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>FEEDBACK FORMS</h1>\n            <p>Help us improve ShopSafe by giving us feedback!</p>\n        </div>\n\n        <div class=\"section\">\n            <h2>User Experience Form</h2>\n            <div class=\"box\">\n                <p>\n                   Let us know what your experience with ShopSafe was like by filling out this\n                   <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSeagc76SWGCG8LTBVM_ZrWZAjAoGeH2fjI2fWR15o9Z-x7J-Q/viewform?usp=sf_link\">\n                    form\n                    </a>. \n                </p>\n            </div>\n        </div>\n\n        <div class=\"section\">\n            <h2>Bug Reporting</h2>\n            <div class=\"box\">\n                <p>\n                    We make mistakes, help us fix them by reporting them \n                    <a href=\"https://docs.google.com/forms/d/e/1FAIpQLScJviEPTKH7Z9aITFulbhgrAc5v3GGlW24ttIoHU-2pe7Fz4g/viewform?usp=sf_link\">\n                        here\n                    </a>. \n                </p>\n            </div>\n        </div>\n        \n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer id=\"footer\">\n    <div class=\"bottom-nav\">\n        <ul>\n            <li><a [routerLink]=\"['/']\">Home</a></li>\n            <li><a [routerLink]=\"['/about']\">About</a></li>\n            <li><a [routerLink]=\"['/feedback']\"><i class=\"fas fa-bug\"></i> Feedback</a></li>\n        </ul>\n        <li class=\"copyright\">\n            Made with 😷 by Raul Palomo, Gabriel Stewart, Carol Li\n        </li>\n    </div>\n\n</footer>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-http-error',\n  templateUrl: './http-error.component.html',\n  styleUrls: ['./http-error.component.css']\n})\nexport class HttpErrorComponent implements OnInit {\n\n  @Input() httpErrorMessage: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"http-error\" class=\"segment\">\n    <div class=\"segment-text\">\n        <h1>HTTP Error</h1>\n        <p>Uh oh, it seems that there's a problem with calling our server. Click <a href=\"/\">here</a> to return to the landing page.</p>\n        <div class=\"error-wrapper\">\n          <p>{{ httpErrorMessage }}</p>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../../api/api.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n\n  location: string = '';\n\n  constructor(\n    private router: Router,\n    public zone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  getNearbyStores(): void {\n    this.router.navigate(['/result', this.location]);\n    console.log(\"CLIENT: redirecting to results\");\n  }\n\n  /**\n   * Fetches address from search bar autocomplete by parsing returned \n   * place array for 'formatted_address' value\n   * @param place array emitted from setAddress event from search bar component\n   */\n  getAddress(place: object): void {\n    this.location = place['formatted_address']\n    this.zone.run(() => this.getNearbyStores());\n  }\n\n}\n","<div id=\"landing\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>ShopSafe</h1>\n            <p>Information tool for safe, simple shopping during COVID-19.</p>\n            <br/>\n            <a [routerLink]=\"['/about']\">Learn more about this tool &nbsp; <i class=\"fas fa-long-arrow-alt-right\"></i></a>\n        </div>\n        <app-search-bar (setAddress)=\"getAddress($event)\"></app-search-bar>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"page-not-found\" class=\"segment\">\n    <div class=\"segment-text\">\n        <h1>404 Page Not Found</h1>\n        <p>Sorry you couldn't find what you were looking for! Click <a href=\"/\">here</a> to return to the landing page.</p>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiService } from '../../api/api.service';\nimport { Result } from '../../classes/result/result';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleMap } from '@angular/google-maps';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.css']\n})\n\nexport class ResultComponent implements OnInit {\n  result: Result;\n  location: string;\n  isLoaded: boolean;\n  httpError: boolean;\n  httpErrorMessage: string;\n\n  @ViewChild(GoogleMap, { static: false }) map: GoogleMap; // In-template Google Map\n  markers = []; // Array of store markers rendered in Google Map\n  center: google.maps.LatLngLiteral; // Current center of Google Map\n  styles: google.maps.MapTypeStyle[] = [\n    {\n      featureType: \"administrative\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          visibility: \"off\"\n        }\n      ]\n    },\n    {\n      featureType: \"poi\",\n      stylers: [\n        {\n          visibility: \"off\"\n        }\n      ]\n    },\n    {\n      featureType: \"road\",\n      elementType: \"labels.icon\",\n      stylers: [\n        {\n          visibility: \"off\"\n        }\n      ]\n    },\n    {\n      featureType: \"transit\",\n      stylers: [\n        {\n          visibility: \"off\"\n        }\n      ]\n    }\n  ]; // Custom map styling\n  options: google.maps.MapOptions = {\n    disableDefaultUI: true,\n    styles: this.styles,\n  }; // Options for Google Map rendered in template\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoaded = false; // Defaults to API not called yet\n    this.httpError = false; // Defaults to no HTTP error\n    this.location = this.route.snapshot.paramMap.get('location').toString();\n    this.getResult();\n  }\n\n  /**\n   * Calls API to get result and subscribes local variables using data returned\n   * in the Observable from the HTTP response.\n   */\n  getResult(): void {\n    console.log('CLIENT: results api call at ' + this.location);\n    this.apiService.getNearbyStores(this.location)\n      .subscribe(data => \n        this.result = {\n          stores: (data as any).stores,\n          latLng: (data as any).latLng\n        },\n        err => {\n          console.log(err),\n          this.httpError = true,\n          this.httpErrorMessage = err\n        },\n        () => {\n          this.initTemplate()\n        }\n      );\n  }\n\n  /**\n   * Initializes component by using data returned from API call.\n   * Sets isLoaded boolean to true, as the function can only be called when there\n   * is a successful response.\n   */\n  initTemplate(): void {\n    // Sets loaded state to true\n    this.isLoaded = true;\n    console.log(\"CLIENT: API call finished\");\n\n    // Add all map markers\n    this.addMarkers();\n    console.log(\"CLIENT: added markers\");\n\n    // Set center of map to latLng of user location\n    this.center = {\n      lat: this.result.latLng.latitude,\n      lng: this.result.latLng.longitude\n    };\n  }\n\n  /**\n   * Populates map with markers indicating score range based on latLng geolocation\n   * of each rendered grocery store.\n   * \n   * Red markers: [0, 3.3], yellow markers: (3.3, 6.6], greeen markers: (6.6, 10]\n   */\n  addMarkers(): void {\n    var safeIcon = \"http://maps.google.com/mapfiles/ms/icons/green.png\";\n    var cautionIcon = \"http://maps.google.com/mapfiles/ms/icons/yellow.png\";\n    var unsafeIcon = \"http://maps.google.com/mapfiles/ms/icons/red.png\";\n    var currIcon = '';\n\n    var userIcon = \"https://img.icons8.com/material-two-tone/24/000000/street-view.png\";\n\n    // Adds current user query location to markers\n    this.markers.push({\n      position: {\n        lat: this.result.latLng.latitude,\n        lng: this.result.latLng.longitude\n      },\n      title: \"Your location!\",\n      options: {\n        icon: { url: userIcon }\n      }\n    })\n\n    // Adds each stores as marker\n    for (let store of this.result.stores) {\n      // Set icon according to colour\n      if (store.score <= 3.3) {\n        currIcon = unsafeIcon;\n      } else if (store.score <= 6.6) {\n        currIcon = cautionIcon;\n      } else {\n        currIcon = safeIcon;\n      }\n\n      this.markers.push({\n        position: {\n          lat: store.latitude,\n          lng: store.longitude\n        },\n        title: store.name,\n        info: store.score,\n        options: {  \n          icon: { url: currIcon } \n        }\n      })\n    }\n  }\n\n  /**\n   * Recenters map based on latLng\n   * @param lat latitude to be recentered to\n   * @param lng longitude to be recentered to\n   */\n  recenterMap(lat: number, lng: number): void {\n    this.center = {\n      lat: lat,\n      lng: lng\n    };\n    this.map.center = this.center;\n  }\n}","<div *ngIf=\"isLoaded && !httpError\" id=\"result\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <h1>{{ location }}</h1>\n            <p>Showing all grocery stores for your location. The map is centered to your current location.</p>\n            <p><button class=\"maps-button\" (click)=\"recenterMap(result.latLng.latitude, result.latLng.longitude)\"><i class=\"fas fa-location-arrow\"></i> &nbsp; RECENTER MAP</button></p>\n        </div>\n        <div id=\"map\">\n          <google-map\n            height=\"500px\"\n            width=\"100%\"\n            [zoom]=\"14\"\n            [center]=\"center\"\n            [options]=\"options\"\n          >\n            <map-marker\n              *ngFor=\"let marker of markers\"\n              [position]=\"marker.position\"\n              [title]=\"marker.title\"\n              [options]=\"marker.options\"\n            >\n            </map-marker>\n          </google-map>\n        </div>\n        <br/>\n        <div class=\"stores-list-heading\">\n            <h2 class=\"left-text\">Local Grocery Stores</h2>\n            <p class=\"right-text subtext\">Click on a store to view store statistics, click on the <i class=\"fas fa-map-marker-alt\"></i> to view on map</p>\n        </div>\n        <div class=\"stores-list\" *ngFor=\"let store of result.stores\">\n            <div class=\"stores-list-item\">\n                <div class=\"left-text markers\">\n                    <a class=\"location-icon\" (click)=\"recenterMap(store.latitude, store.longitude)\"><i class=\"fas fa-map-marker-alt\"></i></a> &nbsp;\n                    <a \n                        class=\"stores-list-location\" \n                        [routerLink]=\"['/store', store.id]\"\n                    >\n                        {{ store.name }}\n                    </a>\n                    <a class=\"rating\">{{ store.score | round }}/10</a>\n                </div>\n                <div class=\"right-text\">\n                    <p class=\"address\">{{ store.address }}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"!isLoaded && !httpError\" class=\"loading-screen\" color=\"grey\">\n  <mat-spinner></mat-spinner>\n  <br/>\n  <p>Fetching Results...</p>\n</div>\n\n<app-http-error *ngIf=\"httpError\" [httpErrorMessage]='httpErrorMessage'></app-http-error>","import { Component, ViewChild, EventEmitter, Output, OnInit, AfterViewInit, AfterContentInit } from '@angular/core';\nimport { } from 'googlemaps';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.css']\n})\nexport class SearchBarComponent implements OnInit {\n\n  @Output() setAddress: EventEmitter<any> = new EventEmitter();\n  @ViewChild('address') address: any;\n\n  autocompleteInput: string;\n  queryWait: boolean;\n\n  constructor() {\n    // Check if API is loaded\n    if (google.maps.places) {\n      this.queryWait = true;\n    } else {\n      this.queryWait = false;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n  \n  ngAfterViewInit(): void {\n    this.getPlace();\n  }\n\n  /**\n   * Fetches places based on changing input values using Google Places API autocomplete feature.\n   * Restricted to the US for geocoded locations (ie. not corporate)\n   */\n  getPlace(): void {\n    const autocomplete = new google.maps.places.Autocomplete(this.address.nativeElement,\n      {\n          componentRestrictions: { country: 'US' },\n          // Restricted to addresses (ie. not establishments)\n          types: ['geocode']\n      });\n    \n    google.maps.event.addListener(autocomplete, 'place_changed', () => {\n      const place = autocomplete.getPlace();\n      this.invokeEvent(place);\n    });\n  }\n\n  /**\n   * Invokes EventEmitter to toggle changes for autocomplete.\n   * @param place contained value within event to be emitted\n   */\n  invokeEvent(place: Object): void {\n    this.setAddress.emit(place);\n  }\n\n}\n"," <form>\n  <div class=\"input-container\">\n    <mat-icon class=\"search-icon\">search</mat-icon>\n    <input\n      [disabled]=\"!queryWait\"\n      #address\n      class=\"input-field\"\n      type=\"text\"\n      placeholder=\"ENTER YOUR LOCATION TO FIND NEARBY GROCERY STORES\"\n      name=\"search\"\n      [(ngModel)]=\"autocompleteInput\"\n    >\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { CheckInModalComponent } from '../check-in-modal/check-in-modal.component';\nimport { ApiService } from '../../api/api.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store } from 'src/app/classes/store/store';\nimport { CountyStats } from 'src/app/classes/county-stats/county-stats';\nimport { DataPoint } from '../../classes/data-point/data-point';\n\n@Component({\n  selector: 'app-store', \n  templateUrl: './store.component.html',\n  styleUrls: ['./store.component.css']\n})\nexport class StoreComponent implements OnInit {\n  store: Store;\n  countyStats: CountyStats;\n  latLng: string;\n  isLoaded: boolean;\n  storeId: string;\n  httpError: boolean;\n  httpErrorMessage: string;\n  proportion: number;\n\n  covidData: DataPoint[];\n  maskData: DataPoint[];\n  busyData: DataPoint[];\n  lineData: DataPoint[];\n  hygieneData: DataPoint[];\n\n  constructor(\n    public matDialog: MatDialog,\n    private apiService: ApiService,\n    private route: ActivatedRoute\n    ) { }\n\n  /**\n   * Runs when component is loaded\n   */\n  ngOnInit(): void {\n    // Defaults to API not called yet\n    this.isLoaded = false;\n    // Defaults to no HTTP error\n    this.httpError = false;\n    this.getStore();\n  }\n\n  /**\n   * Calls API to get store and subscribes local variables using data returned in the \n   * Observable from the HTTP response.\n   */\n  getStore(): void {\n    const id = this.route.snapshot.paramMap.get('id').toString();\n    this.storeId = id;\n    this.apiService.getStoreById(id)\n      .subscribe(\n        (res: any) => {\n          this.store = res.store,\n          this.countyStats = res.countyStats,\n          this.covidData = this.countyStats.covidData,\n          this.maskData = res.maskData,\n          this.busyData = res.busyData,\n          this.lineData = res.lineData,\n          this.hygieneData = res.hygieneData\n        },\n        err => {\n          console.log(err),\n          this.httpError = true,\n          this.httpErrorMessage = err\n        },\n        () => {\n          this.initTemplate();\n        }\n      );\n  }\n\n  /**\n   * Initializes component by using data returned from API call.\n   * Sets isLoaded boolean to true, as the function can only be called when there\n   * is a successful response.\n   */\n  initTemplate(): void {\n    // Sets loaded state to true\n    this.isLoaded = true;\n    console.log(\"CLIENT: API call finished\");\n\n    // Round proportion to 2 decimal places\n    this.proportion = this.countyStats.cases / this.countyStats.population * 100;\n    console.log(\"CLIENT: calculated percentage as \" + this.proportion);\n  }\n  \n  /**\n   * Opens check in modal dialog using check in modal component.\n   * Opens new check in modal on screen.\n   */\n  openModal() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.id = \"check-in-modal\";\n    dialogConfig.height = \"510px\";\n    dialogConfig.width = \"495px\";\n    CheckInModalComponent.setId(this.storeId);\n    const modalDialog = this.matDialog.open(CheckInModalComponent, dialogConfig);\n    \n    // Updates changes in place after modal closes\n    modalDialog.afterClosed().subscribe(() => { this.getStore() });\n  }\n\n  /**\n   * Opens Google Maps link using Places ID of the store.\n   */\n  redirectToMap() {\n    const url = 'https://www.google.com/maps/place/?q=place_id:' + this.storeId;\n    window.open(url, \"_blank\");\n  }\n\n  /**\n   * Redirects to result page (previous page).\n   */\n  goBack() {\n    window.history.back();\n  }\n\n}\n","<div *ngIf=\"isLoaded && !httpError\" id=\"store\" class=\"segment\">\n    <div class=\"segment-text\">\n        <div class=\"heading-text\">\n            <a class=\"back-link\" (click)=\"goBack()\"><i class=\"fas fa-long-arrow-alt-left\"></i> &nbsp; Back to Results</a>\n            <br/>\n            <h1>{{ store.name }}</h1>\n            <p>{{ store.address }}</p>\n            <p>\n                <button class=\"maps-button\" (click)=\"redirectToMap()\"><i class=\"fas fa-map-marked-alt\"></i> &nbsp; VIEW ON MAPS</button>\n                <button id='check-in-button' (click)=\"openModal()\"><i class=\"fas fa-pencil-alt\"></i> &nbsp; CHECK IN AT THIS STORE</button>\n            </p>\n        </div>\n        <div class=\"stat-bar-wrapper\">\n            <div class=\"stat-bar\">\n                <div class=\"stat-elem\">\n                    <a class=\"stat-obj\">CHECKED IN</a>\n                    <p>{{ store.checkInCount }}</p>\n                </div>\n                <div class=\"stat-elem\" style=\"text-align: center;\">\n                    <a class=\"stat-obj\">STATUS</a>\n                    <p [ngStyle]=\"{'color': (store.open) ? '#7AC665' : '#FF5151'}\"><b>{{ store.open ? 'OPEN' : 'CLOSED' }}</b></p>\n                </div>\n                <div class=\"stat-elem\" style=\"text-align: right; margin-top: -5px\">\n                    <a class=\"stat-obj\">SHOPSAFE SCORE</a>\n                    <p class=\"shopsafe-score\">{{ store.score | round }}/10</p>\n                </div>\n            </div>\n        </div>\n        \n        <br/><br/>\n        <div class=\"card\">\n          <div class=\"stat-bar-wrapper\">\n            <h2>Check-In Statistics for {{ store.name }}</h2>\n            <p>\n              Chart statistics represent check-in entries averaged per day. To view more about the statistics, \n              hover over each of the most current values of the statistics below.\n            </p>\n            <div class=\"stat-bar-secondary\">\n              <div class=\"stat-elem-quarter\" style=\"text-align: left\">\n                  <a class=\"stat-obj\"\n                  matTooltip=\"How strict is the store with masks? Are the customers and workers \n                              wearing masks properly? 1 indicates no to little mask policy \n                              and presence (bad), and 10 indicates excellent mask usage (good)\">\n                    MASK\n                  </a>\n                  <p><b>{{ store.checkInCount == 0 ? '—' : store.masks | round }}</b>/10</p>\n              </div>\n              <div class=\"stat-elem-quarter\" style=\"text-align: center;\">\n                  <a class=\"stat-obj\"\n                  matTooltip=\"How crowded is it inside the store? Essentially, is there \n                              enough space to social distance, maintain 6 feet? 1 indicates \n                              very busy (bad), and 10 indicates not busy at all (good)\">\n                    BUSY\n                  </a>\n                  <p><b>{{ store.checkInCount == 0 ? '—' : store.busy | round }}</b>/10</p>\n              </div>\n              <div class=\"stat-elem-quarter\" style=\"text-align: center;\">\n                  <a class=\"stat-obj\"\n                  matTooltip=\"How long is the line to get into the store from the outside?\n                              1 indicates very long (bad), and 10 indicates not long at all (good)\">\n                    LINE\n                  </a>\n                  <p><b>{{ store.checkInCount == 0 ? '—' : store.line | round }}</b>/10</p>\n              </div>\n              <div class=\"stat-elem-quarter\" style=\"text-align: right;\">\n                  <a class=\"stat-obj\"\n                  matTooltip=\"How clean is the store overall? Are the shared carts, \n                              baskets, and surfaces sanitized? 1 indicates poor hygiene \n                              (bad), and 10 indicates good hygiene (good)\">\n                    HYGIENE\n                  </a>\n                  <p><b>{{ store.checkInCount == 0 ? '—' : store.hygiene | round }}</b>/10</p>\n              </div>\n            </div>\n          </div>\n          <div id=\"line-chart\" class=\"chart\">\n            <app-line-chart [mask]='maskData' [busy]='busyData' [line]='lineData' [hygiene]='hygieneData'></app-line-chart>\n          </div>\n        </div>\n\n        <div class=\"card\">\n          <div class=\"stat-bar-wrapper\">\n              <h2>COVID-19 Statistics for {{ countyStats.countyName }} County</h2>\n              <div class=\"stat-bar-secondary\">\n                  <div class=\"stat-elem\">\n                      <a class=\"stat-obj\">TOTAL CASES</a>\n                      <p>{{ countyStats.cases }}</p>\n                  </div>\n                  <div class=\"stat-elem\" style=\"text-align: center;\">\n                      <a class=\"stat-obj\">TOTAL DEATHS</a>\n                      <p>{{ countyStats.deaths }}</p>\n                  </div>\n                  <div class=\"stat-elem\" style=\"text-align: right; margin-top: -5px\">\n                      <a class=\"stat-obj\">PERCENT AFFECTED</a>\n                      <p class=\"shopsafe-score\">{{ proportion | round }}%</p>\n                  </div>\n              </div>\n          </div>\n          <div id=\"covid-chart\" class=\"chart\">\n            <app-covid-chart [covidData]='covidData'></app-covid-chart>\n          </div>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"!isLoaded && !httpError\" class=\"loading-screen\" color=\"grey\">\n  <mat-spinner></mat-spinner>\n  <br/>\n  <p>Loading Store...</p>\n</div>\n\n<app-http-error *ngIf=\"httpError\" [httpErrorMessage]='httpErrorMessage'></app-http-error>","import { Component, OnInit, Input } from '@angular/core';\nimport { GoogleChartService } from  '../service/google-chart.service';\nimport { DataPoint } from '../../classes/data-point/data-point';\n\n@Component({\n  selector: 'app-covid-chart',\n  templateUrl: './covid-chart.component.html',\n  styleUrls: ['./covid-chart.component.css']\n})\nexport class CovidChartComponent implements OnInit {\n\n  private gLib: any;\n  @Input() covidData: DataPoint[];\n\n  constructor(\n    private gChartService: GoogleChartService\n  ) \n  {\n    this.gLib = this.gChartService.getGoogle();\n    this.gLib.charts.load('current', {'packages': ['corechart', 'table'], callback: this.drawChart.bind(this)});\n  }\n\n  ngOnInit(): void {}\n\n  /**\n   * Called when parameters are changed by the parent component.\n   */\n  ngOnChanges() {\n    // Updates chart with new parent input values\n    this.gLib.charts.load('current', {'packages': ['corechart', 'table'], callback: this.drawChart.bind(this)});\n  }\n\n  // TODO: custom colorization with options\n  /**\n   * Draws line chart and renders within template.\n   */\n  private drawChart() {\n\n    let data = new this.gLib.visualization.DataTable();\n    data.addColumn('date', 'Date');\n    data.addColumn('number', 'Cases');\n\n    console.log(this.covidData);\n\n    for (let i in this.covidData) {\n      data.addRow([new Date(this.covidData[i].date), this.covidData[i].value]);\n    }\n\n    const options = {\n      height: 600,\n      hAxis: { textPosition: 'none' }\n    }\n\n    let chart = new this.gLib.visualization.LineChart(document.getElementById('covid-chart'));\n\n    chart.draw(data, options);\n    console.log(\"CLIENT: covid map has been drawn\");\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ServiceModule } from './service/service.module';\nimport { LineChartComponent } from './line-chart/line-chart.component';\nimport { CovidChartComponent } from './covid-chart/covid-chart.component';\n\n\n@NgModule({\n  declarations: [\n    LineChartComponent,\n    CovidChartComponent,\n  ],\n  imports: [\n    CommonModule,\n    ServiceModule\n  ],\n  exports: [\n    LineChartComponent,\n    CovidChartComponent,\n  ],\n  providers: [],\n})\nexport class GoogleChartModule { }\n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { GoogleChartService } from  '../service/google-chart.service';\nimport { DataPoint } from '../../classes/data-point/data-point';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.css']\n})\nexport class LineChartComponent implements OnInit {\n\n  private gLib: any;\n  @Input() mask: DataPoint[];\n  @Input() busy: DataPoint[];\n  @Input() line: DataPoint[];\n  @Input() hygiene: DataPoint[];\n\n  constructor(\n    private gChartService: GoogleChartService,\n    )\n  {\n    this.gLib = this.gChartService.getGoogle();\n    this.gLib.charts.load('current', {'packages': ['corechart', 'table'], callback: this.drawChart.bind(this)});\n  }\n\n  ngOnInit(): void {}\n\n   /**\n   * Called when parameters are changed by the parent component.\n   */\n  ngOnChanges() {\n    // Updates chart with new parent input values\n    this.gLib.charts.load('current', {'packages': ['corechart', 'table'], callback: this.drawChart.bind(this)});\n  }\n\n  // TODO: custom colorization with options\n  /**\n   * Draws COVID-19 statistics line chart and renders within template.\n   * Assumes that all input arrays are the same length\n   */\n  private drawChart() {\n\n    let data = new this.gLib.visualization.DataTable();\n    data.addColumn('date', 'Date');\n    data.addColumn('number', 'Mask');\n    data.addColumn('number', 'Busy');\n    data.addColumn('number', 'Line');\n    data.addColumn('number', 'Hygiene');\n\n    for (let i in this.mask) {\n      data.addRow([new Date(this.mask[i].date), this.mask[i].value, this.busy[i].value, this.line[i].value, this.hygiene[i].value]);\n    }\n\n    const options = {\n      height: 600,\n      hAxis: { textPosition: 'none' }\n    }\n\n    let chart = new this.gLib.visualization.LineChart(document.getElementById('line-chart'));\n\n    chart.draw(data, options);\n    console.log(\"CLIENT: check-in map has been drawn\");\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ServiceModule } from './service.module';\n\ndeclare let google: any;\n\n@Injectable({\n  providedIn: ServiceModule\n})\nexport class GoogleChartService {\n\n  private google: any;\n\n  constructor() {\n    this.google = google;\n   }\n\n  getGoogle() {\n    return this.google;\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Contains Angular service utilized to access the Google Charts library\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ServiceModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'round'})\nexport class RoundPipe implements PipeTransform {\n  transform(input: number) {\n    return Math.round(input * 100) / 100;\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n  // URL of development API\n  apiUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}